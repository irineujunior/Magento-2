require.config({"config": {
        "jsbuild":{"Temando_Shipping/static/js/main.js":"!function(e,t){if(\"object\"===typeof exports&&\"object\"===typeof module)module.exports=t();else if(\"function\"===typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)(\"object\"===typeof exports?exports:e)[r]=n[r]}}(\"undefined\"!==typeof self?self:this,function(){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n=window.webpackJsonp;window.webpackJsonp=function(t,r,i){for(var a,u,l=0,c=[];l<t.length;l++)u=t[l],o[u]&&c.push(o[u][0]),o[u]=0;for(a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);for(n&&n(t,r,i);c.length;)c.shift()()};var r={},o={14:0};return t.e=function(e){function n(){u.onerror=u.onload=null,clearTimeout(l);var t=o[e];0!==t&&(t&&t[1](new Error(\"Loading chunk \"+e+\" failed.\")),o[e]=void 0)}var r=o[e];if(0===r)return new Promise(function(e){e()});if(r)return r[2];var i=new Promise(function(t,n){r=o[e]=[t,n]});r[2]=i;var a=document.getElementsByTagName(\"head\")[0],u=document.createElement(\"script\");u.type=\"text/javascript\",u.charset=\"utf-8\",u.async=!0,u.timeout=12e4,t.nc&&u.setAttribute(\"nonce\",t.nc),u.src=t.p+\"static/js/\"+({}[e]||e)+\".\"+{0:\"cda1bd64\",1:\"e7a74fc4\",2:\"cf371d30\",3:\"db34f5b0\",4:\"f47b535d\",5:\"bae04409\",6:\"10e7d70a\",7:\"f9afb919\",8:\"d104c69a\",9:\"5fa45600\",10:\"742c1987\",11:\"42cc8eed\",12:\"d17f3c98\",13:\"dbfe383c\"}[e]+\".chunk.js\";var l=setTimeout(n,12e4);return u.onerror=u.onload=n,a.appendChild(u),i},t.m=e,t.c=r,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t.oe=function(e){throw console.error(e),e},t(t.s=144)}([function(e,t,n){var r=n(2),o=n(11),i=n(25),a=n(39),u=n(17),l=function(e,t,n){var c,s,f,d,p=e&l.F,m=e&l.G,h=e&l.S,y=e&l.P,v=e&l.B,g=m?r:h?r[t]||(r[t]={}):(r[t]||{}).prototype,b=m?o:o[t]||(o[t]={}),w=b.prototype||(b.prototype={});m&&(n=t);for(c in n)s=!p&&g&&void 0!==g[c],f=(s?g:n)[c],d=v&&s?u(f,r):y&&\"function\"==typeof f?u(Function.call,f):f,g&&a(g,c,f,e&l.U),b[c]!=f&&i(b,c,d),y&&w[c]!=f&&(w[c]=f)};r.core=o,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t,n){var r=n(38)(\"wks\"),o=n(30),i=n(2).Symbol,a=\"function\"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)(\"Symbol.\"+e))}).store=r},function(e,t){var n=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=n)},function(e,t){var n=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=n)},function(e,t,n){var r=n(73)(\"wks\"),o=n(71),i=n(3).Symbol,a=\"function\"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)(\"Symbol.\"+e))}).store=r},function(e,t,n){var r=n(32),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){\"use strict\";var r=n(14);e.exports=function(e,t){return!!e&&r(function(){t?e.call(null,function(){},1):e.call(null)})}},function(e,t){var n=e.exports={version:\"2.6.9\"};\"number\"==typeof __e&&(__e=n)},function(e,t,n){var r=n(56);e.exports=function(e){return Object(r(e))}},function(e,t){e.exports=function(e){return\"object\"===typeof e?null!==e:\"function\"===typeof e}},function(e,t,n){var r=n(28);e.exports=function(e){if(!r(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t){var n=e.exports={version:\"2.6.9\"};\"number\"==typeof __e&&(__e=n)},function(e,t,n){var r=n(13),o=n(79),i=n(54),a=Object.defineProperty;t.f=n(19)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if(\"get\"in n||\"set\"in n)throw TypeError(\"Accessors not supported!\");return\"value\"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(9);e.exports=function(e){if(!r(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(42),o=n(56);e.exports=function(e){return r(o(e))}},function(e,t,n){var r=n(1)(\"unscopables\"),o=Array.prototype;void 0==o[r]&&n(25)(o,r,{}),e.exports=function(e){o[r][e]=!0}},function(e,t,n){var r=n(18);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t,n){e.exports=!n(14)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(17),o=n(42),i=n(8),a=n(5),u=n(61);e.exports=function(e,t){var n=1==e,l=2==e,c=3==e,s=4==e,f=6==e,d=5==e||f,p=t||u;return function(t,u,m){for(var h,y,v=i(t),g=o(v),b=r(u,m,3),w=a(g.length),x=0,k=n?p(t,w):l?p(t,0):void 0;w>x;x++)if((d||x in g)&&(h=g[x],y=b(h,x,v),e))if(n)k[x]=y;else if(y)switch(e){case 3:return!0;case 5:return h;case 6:return x;case 2:k.push(h)}else if(s)return!1;return f?-1:c||s?s:k}}},function(e,t,n){e.exports=!n(46)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t,n){var r=n(33),o=n(70);e.exports=n(22)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(12),o=n(31);e.exports=n(19)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports={}},function(e,t,n){var r=n(3),o=n(7),i=n(34),a=n(23),u=n(35),l=function(e,t,n){var c,s,f,d=e&l.F,p=e&l.G,m=e&l.S,h=e&l.P,y=e&l.B,v=e&l.W,g=p?o:o[t]||(o[t]={}),b=g.prototype,w=p?r:m?r[t]:(r[t]||{}).prototype;p&&(n=t);for(c in n)(s=!d&&w&&void 0!==w[c])&&u(g,c)||(f=s?w[c]:n[c],g[c]=p&&\"function\"!=typeof w[c]?n[c]:y&&s?i(f,r):v&&w[c]==f?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):h&&\"function\"==typeof f?i(Function.call,f):f,h&&((g.virtual||(g.virtual={}))[c]=f,e&l.R&&b&&!b[c]&&a(b,c,f)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t){e.exports=function(e){return\"object\"===typeof e?null!==e:\"function\"===typeof e}},function(e,t){e.exports=!1},function(e,t){var n=0,r=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++n+r).toString(36))}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(10),o=n(120),i=n(113),a=Object.defineProperty;t.f=n(22)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if(\"get\"in n||\"set\"in n)throw TypeError(\"Accessors not supported!\");return\"value\"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(37);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t,n){var r=n(11),o=n(2),i=o[\"__core-js_shared__\"]||(o[\"__core-js_shared__\"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:r.version,mode:n(29)?\"pure\":\"global\",copyright:\"\\xa9 2019 Denis Pushkarev (zloirock.ru)\"})},function(e,t,n){var r=n(2),o=n(25),i=n(20),a=n(30)(\"src\"),u=n(147),l=(\"\"+u).split(\"toString\");n(11).inspectSource=function(e){return u.call(e)},(e.exports=function(e,t,n,u){var c=\"function\"==typeof n;c&&(i(n,\"name\")||o(n,\"name\",t)),e[t]!==n&&(c&&(i(n,a)||o(n,a,e[t]?\"\"+e[t]:l.join(String(t)))),e===r?e[t]=n:u?e[t]?e[t]=n:o(e,t,n):(delete e[t],o(e,t,n)))})(Function.prototype,\"toString\",function(){return\"function\"==typeof this&&this[a]||u.call(this)})},function(e,t){e.exports={}},function(e,t,n){var r=n(12).f,o=n(20),i=n(1)(\"toStringTag\");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(24);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==r(e)?e.split(\"\"):Object(e)}},function(e,t,n){var r=n(32),o=Math.max,i=Math.min;e.exports=function(e,t){return e=r(e),e<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(24);e.exports=Array.isArray||function(e){return\"Array\"==r(e)}},function(e,t,n){\"use strict\";e.exports=n(221)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(76),o=n(63);e.exports=function(e){return r(o(e))}},function(e,t,n){\"use strict\";var r=n(209)(!0);n(77)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t){e.exports=!0},function(e,t,n){n(203);for(var r=n(3),o=n(23),i=n(26),a=n(4)(\"toStringTag\"),u=\"CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList\".split(\",\"),l=0;l<u.length;l++){var c=u[l],s=r[c],f=s&&s.prototype;f&&!f[a]&&o(f,a,c),i[c]=i.Array}},function(e,t,n){var r=n(33).f,o=n(35),i=n(4)(\"toStringTag\");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(36),o=n(4)(\"toStringTag\"),i=\"Arguments\"==r(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,n,u;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(n=a(t=Object(e),o))?n:i?r(t):\"Object\"==(u=r(t))&&\"function\"==typeof t.callee?\"Arguments\":u}},function(e,t,n){var r=n(9),o=n(2).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){var r=n(9);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&\"function\"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if(\"function\"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&\"function\"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t,n){var r=n(2).document;e.exports=r&&r.documentElement},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t,n){var r=n(89),o=n(60);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t,n){var r=n(15),o=n(5),i=n(43);e.exports=function(e){return function(t,n,a){var u,l=r(t),c=o(l.length),s=i(a,c);if(e&&n!=n){for(;c>s;)if((u=l[s++])!=u)return!0}else for(;c>s;s++)if((e||s in l)&&l[s]===n)return e||s||0;return!e&&-1}}},function(e,t,n){var r=n(38)(\"keys\"),o=n(30);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t){e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,n){var r=n(172);e.exports=function(e,t){return new(r(e))(t)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t,n){var r=n(28),o=n(3).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(73)(\"keys\"),o=n(71);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t,n){\"use strict\";function r(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError(\"Bad Promise constructor\");t=e,n=r}),this.resolve=o(t),this.reject=o(n)}var o=n(37);e.exports.f=function(e){return new r(e)}},function(e,t,n){var r=n(63);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(122),o=n(74);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++n+r).toString(36))}},function(e,t,n){var r=n(65),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){var r=n(7),o=n(3),i=o[\"__core-js_shared__\"]||(o[\"__core-js_shared__\"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:r.version,mode:n(49)?\"pure\":\"global\",copyright:\"\\xa9 2019 Denis Pushkarev (zloirock.ru)\"})},function(e,t){e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,n){var r=n(52),o=n(4)(\"iterator\"),i=n(26);e.exports=n(7).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e[\"@@iterator\"]||i[r(e)]}},function(e,t,n){var r=n(36);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==r(e)?e.split(\"\"):Object(e)}},function(e,t,n){\"use strict\";var r=n(49),o=n(27),i=n(121),a=n(23),u=n(26),l=n(205),c=n(51),s=n(123),f=n(4)(\"iterator\"),d=!([].keys&&\"next\"in[].keys()),p=function(){return this};e.exports=function(e,t,n,m,h,y,v){l(n,t,m);var g,b,w,x=function(e){if(!d&&e in T)return T[e];switch(e){case\"keys\":case\"values\":return function(){return new n(this,e)}}return function(){return new n(this,e)}},k=t+\" Iterator\",_=\"values\"==h,S=!1,T=e.prototype,E=T[f]||T[\"@@iterator\"]||h&&T[h],P=E||x(h),C=h?_?x(\"entries\"):P:void 0,O=\"Array\"==t?T.entries||E:E;if(O&&(w=s(O.call(new e)))!==Object.prototype&&w.next&&(c(w,k,!0),r||\"function\"==typeof w[f]||a(w,f,p)),_&&E&&\"values\"!==E.name&&(S=!0,P=function(){return E.call(this)}),r&&!v||!d&&!S&&T[f]||a(T,f,P),u[t]=P,u[k]=p,h)if(g={values:_?P:x(\"values\"),keys:y?P:x(\"keys\"),entries:C},v)for(b in g)b in T||i(T,b,g[b]);else o(o.P+o.F*(d||S),t,g);return g}},function(e,t,n){var r=n(24),o=n(1)(\"toStringTag\"),i=\"Arguments\"==r(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,n,u;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(n=a(t=Object(e),o))?n:i?r(t):\"Object\"==(u=r(t))&&\"function\"==typeof t.callee?\"Arguments\":u}},function(e,t,n){e.exports=!n(19)&&!n(14)(function(){return 7!=Object.defineProperty(n(53)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,n){var r=n(13);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(40),o=n(1)(\"iterator\"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){var r=n(78),o=n(1)(\"iterator\"),i=n(40);e.exports=n(11).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e[\"@@iterator\"]||i[r(e)]}},function(e,t,n){var r,o,i,a=n(17),u=n(151),l=n(55),c=n(53),s=n(2),f=s.process,d=s.setImmediate,p=s.clearImmediate,m=s.MessageChannel,h=s.Dispatch,y=0,v={},g=function(){var e=+this;if(v.hasOwnProperty(e)){var t=v[e];delete v[e],t()}},b=function(e){g.call(e.data)};d&&p||(d=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return v[++y]=function(){u(\"function\"==typeof e?e:Function(e),t)},r(y),y},p=function(e){delete v[e]},\"process\"==n(24)(f)?r=function(e){f.nextTick(a(g,e,1))}:h&&h.now?r=function(e){h.now(a(g,e,1))}:m?(o=new m,i=o.port2,o.port1.onmessage=b,r=a(i.postMessage,i,1)):s.addEventListener&&\"function\"==typeof postMessage&&!s.importScripts?(r=function(e){s.postMessage(e+\"\",\"*\")},s.addEventListener(\"message\",b,!1)):r=\"onreadystatechange\"in c(\"script\")?function(e){l.appendChild(c(\"script\")).onreadystatechange=function(){l.removeChild(this),g.call(e)}}:function(e){setTimeout(a(g,e,1),0)}),e.exports={set:d,clear:p}},function(e,t,n){\"use strict\";function r(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError(\"Bad Promise constructor\");t=e,n=r}),this.resolve=o(t),this.reject=o(n)}var o=n(18);e.exports.f=function(e){return new r(e)}},function(e,t,n){\"use strict\";var r=n(2),o=n(12),i=n(19),a=n(1)(\"species\");e.exports=function(e){var t=r[e];i&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,n){var r=n(1)(\"iterator\"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t,n){\"use strict\";var r=n(29),o=n(0),i=n(39),a=n(25),u=n(40),l=n(162),c=n(41),s=n(164),f=n(1)(\"iterator\"),d=!([].keys&&\"next\"in[].keys()),p=function(){return this};e.exports=function(e,t,n,m,h,y,v){l(n,t,m);var g,b,w,x=function(e){if(!d&&e in T)return T[e];switch(e){case\"keys\":case\"values\":return function(){return new n(this,e)}}return function(){return new n(this,e)}},k=t+\" Iterator\",_=\"values\"==h,S=!1,T=e.prototype,E=T[f]||T[\"@@iterator\"]||h&&T[h],P=E||x(h),C=h?_?x(\"entries\"):P:void 0,O=\"Array\"==t?T.entries||E:E;if(O&&(w=s(O.call(new e)))!==Object.prototype&&w.next&&(c(w,k,!0),r||\"function\"==typeof w[f]||a(w,f,p)),_&&E&&\"values\"!==E.name&&(S=!0,P=function(){return E.call(this)}),r&&!v||!d&&!S&&T[f]||a(T,f,P),u[t]=P,u[k]=p,h)if(g={values:_?P:x(\"values\"),keys:y?P:x(\"keys\"),entries:C},v)for(b in g)b in T||i(T,b,g[b]);else o(o.P+o.F*(d||S),t,g);return g}},function(e,t,n){var r=n(13),o=n(163),i=n(60),a=n(59)(\"IE_PROTO\"),u=function(){},l=function(){var e,t=n(53)(\"iframe\"),r=i.length;for(t.style.display=\"none\",n(55).appendChild(t),t.src=\"javascript:\",e=t.contentWindow.document,e.open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),l=e.F;r--;)delete l.prototype[i[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(u.prototype=r(e),n=new u,u.prototype=null,n[a]=e):n=l(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(20),o=n(15),i=n(58)(!1),a=n(59)(\"IE_PROTO\");e.exports=function(e,t){var n,u=o(e),l=0,c=[];for(n in u)n!=a&&r(u,n)&&c.push(n);for(;t.length>l;)r(u,n=t[l++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){\"use strict\";var r=n(12),o=n(31);e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},function(e,t,n){var r=n(18),o=n(8),i=n(42),a=n(5);e.exports=function(e,t,n,u,l){r(t);var c=o(e),s=i(c),f=a(c.length),d=l?f-1:0,p=l?-1:1;if(n<2)for(;;){if(d in s){u=s[d],d+=p;break}if(d+=p,l?d<0:f<=d)throw TypeError(\"Reduce of empty array with no initial value\")}for(;l?d>=0:f>d;d+=p)d in s&&(u=t(u,s[d],d,c));return u}},function(e,t,n){\"use strict\";function r(e,t,n,c,s,f,d,p){for(var m,h,y=s,v=0,g=!!d&&u(d,p,3);v<c;){if(v in n){if(m=g?g(n[v],v,t):n[v],h=!1,i(m)&&(h=m[l],h=void 0!==h?!!h:o(m)),h&&f>0)y=r(e,t,m,a(m.length),y,f-1)-1;else{if(y>=9007199254740991)throw TypeError();e[y]=m}y++}v++}return y}var o=n(44),i=n(9),a=n(5),u=n(17),l=n(1)(\"isConcatSpreadable\");e.exports=r},function(e,t,n){t.f=n(1)},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(89),o=n(60).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){var r=n(3).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(10),o=n(37),i=n(4)(\"species\");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||void 0==(n=r(a)[i])?t:o(n)}},function(e,t,n){var r,o,i,a=n(34),u=n(216),l=n(96),c=n(64),s=n(3),f=s.process,d=s.setImmediate,p=s.clearImmediate,m=s.MessageChannel,h=s.Dispatch,y=0,v={},g=function(){var e=+this;if(v.hasOwnProperty(e)){var t=v[e];delete v[e],t()}},b=function(e){g.call(e.data)};d&&p||(d=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return v[++y]=function(){u(\"function\"==typeof e?e:Function(e),t)},r(y),y},p=function(e){delete v[e]},\"process\"==n(36)(f)?r=function(e){f.nextTick(a(g,e,1))}:h&&h.now?r=function(e){h.now(a(g,e,1))}:m?(o=new m,i=o.port2,o.port1.onmessage=b,r=a(i.postMessage,i,1)):s.addEventListener&&\"function\"==typeof postMessage&&!s.importScripts?(r=function(e){s.postMessage(e+\"\",\"*\")},s.addEventListener(\"message\",b,!1)):r=\"onreadystatechange\"in c(\"script\")?function(e){l.appendChild(c(\"script\")).onreadystatechange=function(){l.removeChild(this),g.call(e)}}:function(e){setTimeout(a(g,e,1),0)}),e.exports={set:d,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(10),o=n(28),i=n(67);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){\"use strict\";var r=n(228).default;n(235),t=e.exports=r,t.default=t},function(e,t,n){\"use strict\";function r(e){var t,n,r,i,a=Array.prototype.slice.call(arguments,1);for(t=0,n=a.length;t<n;t+=1)if(r=a[t])for(i in r)o.call(r,i)&&(e[i]=r[i]);return e}t.extend=r;var o=Object.prototype.hasOwnProperty;t.hop=o},function(e,t,n){e.exports=n(243)()},function(e,t,n){\"use strict\";function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];(Array.isArray(e)?e:[e]).forEach(function(e){e&&e.locale&&(j.a.__addLocaleData(e),I.a.__addLocaleData(e))})}function o(e){for(var t=(e||\"\").split(\"-\");t.length>0;){if(i(t.join(\"-\")))return!0;t.pop()}return!1}function i(e){var t=e&&e.toLowerCase();return!(!j.a.__localeData__[t]||!I.a.__localeData__[t])}function a(e){return(\"\"+e).replace(_e,function(e){return ke[e]})}function u(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return t.reduce(function(t,r){return e.hasOwnProperty(r)?t[r]=e[r]:n.hasOwnProperty(r)&&(t[r]=n[r]),t},{})}function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.intl;V()(t,\"[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.\")}function c(e,t){if(e===t)return!0;if(\"object\"!==(\"undefined\"===typeof e?\"undefined\":$(e))||null===e||\"object\"!==(\"undefined\"===typeof t?\"undefined\":$(t))||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=Object.prototype.hasOwnProperty.bind(t),i=0;i<n.length;i++)if(!o(n[i])||e[n[i]]!==t[n[i]])return!1;return!0}function s(e,t,n){var r=e.props,o=e.state,i=e.context,a=void 0===i?{}:i,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=a.intl,f=void 0===s?{}:s,d=l.intl,p=void 0===d?{}:d;return!c(t,r)||!c(n,o)||!(p===f||c(u(p,xe),u(f,xe)))}function f(e,t){return\"[React Intl] \"+e+(t?\"\\n\"+t:\"\")}function d(e){}function p(e){return e.displayName||e.name||\"Component\"}function m(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.intlPropName,r=void 0===n?\"intl\":n,o=t.withRef,i=void 0!==o&&o,a=function(t){function n(e,t){G(this,n);var r=J(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,t));return l(t),r}return X(n,t),Q(n,[{key:\"getWrappedInstance\",value:function(){return V()(i,\"[React Intl] To access the wrapped instance, the `{withRef: true}` option must be set when calling: `injectIntl()`\"),this._wrappedInstance}},{key:\"render\",value:function(){var t=this;return U.a.createElement(e,Y({},this.props,K({},r,this.context.intl),{ref:i?function(e){return t._wrappedInstance=e}:null}))}}]),n}(D.Component);return a.displayName=\"InjectIntl(\"+p(e)+\")\",a.contextTypes={intl:ye},a.WrappedComponent=e,B()(a,e)}function h(e){return e}function y(e){return j.a.prototype._resolveLocale(e)}function v(e){return j.a.prototype._findPluralRuleFunction(e)}function g(e){var t=I.a.thresholds;t.second=e.second,t.minute=e.minute,t.hour=e.hour,t.day=e.day,t.month=e.month,t[\"second-short\"]=e[\"second-short\"],t[\"minute-short\"]=e[\"minute-short\"],t[\"hour-short\"]=e[\"hour-short\"],t[\"day-short\"]=e[\"day-short\"],t[\"month-short\"]=e[\"month-short\"]}function b(e,t,n,r){var o=e&&e[t]&&e[t][n];if(o)return o;r(f(\"No \"+t+\" format named: \"+n))}function w(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=e.locale,i=e.formats,a=e.timeZone,l=r.format,c=e.onError||d,s=new Date(n),p=Y({},a&&{timeZone:a},l&&b(i,\"date\",l,c)),m=u(r,Te,p);try{return t.getDateTimeFormat(o,m).format(s)}catch(e){c(f(\"Error formatting date.\",e))}return String(s)}function x(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=e.locale,i=e.formats,a=e.timeZone,l=r.format,c=e.onError||d,s=new Date(n),p=Y({},a&&{timeZone:a},l&&b(i,\"time\",l,c)),m=u(r,Te,p);m.hour||m.minute||m.second||(m=Y({},m,{hour:\"numeric\",minute:\"numeric\"}));try{return t.getDateTimeFormat(o,m).format(s)}catch(e){c(f(\"Error formatting time.\",e))}return String(s)}function k(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=e.locale,i=e.formats,a=r.format,l=e.onError||d,c=new Date(n),s=new Date(r.now),p=a&&b(i,\"relative\",a,l),m=u(r,Pe,p),h=Y({},I.a.thresholds);g(Oe);try{return t.getRelativeFormat(o,m).format(c,{now:isFinite(s)?s:t.now()})}catch(e){l(f(\"Error formatting relative time.\",e))}finally{g(h)}return String(c)}function _(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=e.locale,i=e.formats,a=r.format,l=e.onError||d,c=a&&b(i,\"number\",a,l),s=u(r,Ee,c);try{return t.getNumberFormat(o,s).format(n)}catch(e){l(f(\"Error formatting number.\",e))}return String(n)}function S(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=e.locale,i=u(r,Ce),a=e.onError||d;try{return t.getPluralFormat(o,i).format(n)}catch(e){a(f(\"Error formatting plural.\",e))}return\"other\"}function T(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=e.locale,i=e.formats,a=e.messages,u=e.defaultLocale,l=e.defaultFormats,c=n.id,s=n.defaultMessage;V()(c,\"[React Intl] An `id` must be provided to format a message.\");var p=a&&a[c];if(!(Object.keys(r).length>0))return p||s||c;var m=void 0,h=e.onError||d;if(p)try{m=t.getMessageFormat(p,o,i).format(r)}catch(e){h(f('Error formatting message: \"'+c+'\" for locale: \"'+o+'\"'+(s?\", using default message as fallback.\":\"\"),e))}else(!s||o&&o.toLowerCase()!==u.toLowerCase())&&h(f('Missing message: \"'+c+'\" for locale: \"'+o+'\"'+(s?\", using default message as fallback.\":\"\")));if(!m&&s)try{m=t.getMessageFormat(s,u,l).format(r)}catch(e){h(f('Error formatting the default message for: \"'+c+'\"',e))}return m||h(f('Cannot format message: \"'+c+'\", using message '+(p||s?\"source\":\"id\")+\" as fallback.\")),m||p||s||c}function E(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return T(e,t,n,Object.keys(r).reduce(function(e,t){var n=r[t];return e[t]=\"string\"===typeof n?a(n):n,e},{}))}function P(e){var t=Math.abs(e);return t<De?\"second\":t<Ue?\"minute\":t<ze?\"hour\":\"day\"}function C(e){switch(e){case\"second\":return Le;case\"minute\":return De;case\"hour\":return Ue;case\"day\":return ze;default:return Be}}function O(e,t){if(e===t)return!0;var n=new Date(e).getTime(),r=new Date(t).getTime();return isFinite(n)&&isFinite(r)&&n===r}Object.defineProperty(t,\"__esModule\",{value:!0}),n.d(t,\"addLocaleData\",function(){return r}),n.d(t,\"intlShape\",function(){return ye}),n.d(t,\"injectIntl\",function(){return m}),n.d(t,\"defineMessages\",function(){return h}),n.d(t,\"IntlProvider\",function(){return Me}),n.d(t,\"FormattedDate\",function(){return Ie}),n.d(t,\"FormattedTime\",function(){return Re}),n.d(t,\"FormattedRelative\",function(){return We}),n.d(t,\"FormattedNumber\",function(){return Ve}),n.d(t,\"FormattedPlural\",function(){return He}),n.d(t,\"FormattedMessage\",function(){return $e}),n.d(t,\"FormattedHTMLMessage\",function(){return Ge});var F=n(227),A=n.n(F),N=n(101),j=n.n(N),M=n(236),I=n.n(M),R=n(103),L=n.n(R),D=n(45),U=n.n(D),z=n(245),B=n.n(z),W=n(107),V=n.n(W),H=n(247),q={locale:\"en\",pluralRuleFunction:function(e,t){var n=String(e).split(\".\"),r=!n[1],o=Number(n[0])==e,i=o&&n[0].slice(-1),a=o&&n[0].slice(-2);return t?1==i&&11!=a?\"one\":2==i&&12!=a?\"two\":3==i&&13!=a?\"few\":\"other\":1==e&&r?\"one\":\"other\"},fields:{year:{displayName:\"year\",relative:{0:\"this year\",1:\"next year\",\"-1\":\"last year\"},relativeTime:{future:{one:\"in {0} year\",other:\"in {0} years\"},past:{one:\"{0} year ago\",other:\"{0} years ago\"}}},\"year-short\":{displayName:\"yr.\",relative:{0:\"this yr.\",1:\"next yr.\",\"-1\":\"last yr.\"},relativeTime:{future:{one:\"in {0} yr.\",other:\"in {0} yr.\"},past:{one:\"{0} yr. ago\",other:\"{0} yr. ago\"}}},month:{displayName:\"month\",relative:{0:\"this month\",1:\"next month\",\"-1\":\"last month\"},relativeTime:{future:{one:\"in {0} month\",other:\"in {0} months\"},past:{one:\"{0} month ago\",other:\"{0} months ago\"}}},\"month-short\":{displayName:\"mo.\",relative:{0:\"this mo.\",1:\"next mo.\",\"-1\":\"last mo.\"},relativeTime:{future:{one:\"in {0} mo.\",other:\"in {0} mo.\"},past:{one:\"{0} mo. ago\",other:\"{0} mo. ago\"}}},day:{displayName:\"day\",relative:{0:\"today\",1:\"tomorrow\",\"-1\":\"yesterday\"},relativeTime:{future:{one:\"in {0} day\",other:\"in {0} days\"},past:{one:\"{0} day ago\",other:\"{0} days ago\"}}},\"day-short\":{displayName:\"day\",relative:{0:\"today\",1:\"tomorrow\",\"-1\":\"yesterday\"},relativeTime:{future:{one:\"in {0} day\",other:\"in {0} days\"},past:{one:\"{0} day ago\",other:\"{0} days ago\"}}},hour:{displayName:\"hour\",relative:{0:\"this hour\"},relativeTime:{future:{one:\"in {0} hour\",other:\"in {0} hours\"},past:{one:\"{0} hour ago\",other:\"{0} hours ago\"}}},\"hour-short\":{displayName:\"hr.\",relative:{0:\"this hour\"},relativeTime:{future:{one:\"in {0} hr.\",other:\"in {0} hr.\"},past:{one:\"{0} hr. ago\",other:\"{0} hr. ago\"}}},minute:{displayName:\"minute\",relative:{0:\"this minute\"},relativeTime:{future:{one:\"in {0} minute\",other:\"in {0} minutes\"},past:{one:\"{0} minute ago\",other:\"{0} minutes ago\"}}},\"minute-short\":{displayName:\"min.\",relative:{0:\"this minute\"},relativeTime:{future:{one:\"in {0} min.\",other:\"in {0} min.\"},past:{one:\"{0} min. ago\",other:\"{0} min. ago\"}}},second:{displayName:\"second\",relative:{0:\"now\"},relativeTime:{future:{one:\"in {0} second\",other:\"in {0} seconds\"},past:{one:\"{0} second ago\",other:\"{0} seconds ago\"}}},\"second-short\":{displayName:\"sec.\",relative:{0:\"now\"},relativeTime:{future:{one:\"in {0} sec.\",other:\"in {0} sec.\"},past:{one:\"{0} sec. ago\",other:\"{0} sec. ago\"}}}}},$=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},G=(function(){function e(e){this.value=e}function t(t){function n(e,t){return new Promise(function(n,o){var u={key:e,arg:t,resolve:n,reject:o,next:null};a?a=a.next=u:(i=a=u,r(e,t))})}function r(n,i){try{var a=t[n](i),u=a.value;u instanceof e?Promise.resolve(u.value).then(function(e){r(\"next\",e)},function(e){r(\"throw\",e)}):o(a.done?\"return\":\"normal\",a.value)}catch(e){o(\"throw\",e)}}function o(e,t){switch(e){case\"return\":i.resolve({value:t,done:!0});break;case\"throw\":i.reject(t);break;default:i.resolve({value:t,done:!1})}i=i.next,i?r(i.key,i.arg):a=null}var i,a;this._invoke=n,\"function\"!==typeof t.return&&(this.return=void 0)}\"function\"===typeof Symbol&&Symbol.asyncIterator&&(t.prototype[Symbol.asyncIterator]=function(){return this}),t.prototype.next=function(e){return this._invoke(\"next\",e)},t.prototype.throw=function(e){return this._invoke(\"throw\",e)},t.prototype.return=function(e){return this._invoke(\"return\",e)}}(),function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}),Q=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),K=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},X=function(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},Z=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},J=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==typeof t&&\"function\"!==typeof t?e:t},ee=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)},te=L.a.bool,ne=L.a.number,re=L.a.string,oe=L.a.func,ie=L.a.object,ae=L.a.oneOf,ue=L.a.shape,le=L.a.any,ce=L.a.oneOfType,se=ae([\"best fit\",\"lookup\"]),fe=ae([\"narrow\",\"short\",\"long\"]),de=ae([\"numeric\",\"2-digit\"]),pe=oe.isRequired,me={locale:re,timeZone:re,formats:ie,messages:ie,textComponent:le,defaultLocale:re,defaultFormats:ie,onError:oe},he={formatDate:pe,formatTime:pe,formatRelative:pe,formatNumber:pe,formatPlural:pe,formatMessage:pe,formatHTMLMessage:pe},ye=ue(Y({},me,he,{formatters:ie,now:pe})),ve=(re.isRequired,ce([re,ie]),{localeMatcher:se,formatMatcher:ae([\"basic\",\"best fit\"]),timeZone:re,hour12:te,weekday:fe,era:fe,year:de,month:ae([\"numeric\",\"2-digit\",\"narrow\",\"short\",\"long\"]),day:de,hour:de,minute:de,second:de,timeZoneName:ae([\"short\",\"long\"])}),ge={localeMatcher:se,style:ae([\"decimal\",\"currency\",\"percent\"]),currency:re,currencyDisplay:ae([\"symbol\",\"code\",\"name\"]),useGrouping:te,minimumIntegerDigits:ne,minimumFractionDigits:ne,maximumFractionDigits:ne,minimumSignificantDigits:ne,maximumSignificantDigits:ne},be={style:ae([\"best fit\",\"numeric\"]),units:ae([\"second\",\"minute\",\"hour\",\"day\",\"month\",\"year\",\"second-short\",\"minute-short\",\"hour-short\",\"day-short\",\"month-short\",\"year-short\"])},we={style:ae([\"cardinal\",\"ordinal\"])},xe=Object.keys(me),ke={\"&\":\"&amp;\",\">\":\"&gt;\",\"<\":\"&lt;\",'\"':\"&quot;\",\"'\":\"&#x27;\"},_e=/[&><\"']/g,Se=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};G(this,e);var r=\"ordinal\"===n.style,o=v(y(t));this.format=function(e){return o(e,r)}},Te=Object.keys(ve),Ee=Object.keys(ge),Pe=Object.keys(be),Ce=Object.keys(we),Oe={second:60,minute:60,hour:24,day:30,month:12},Fe=Object.freeze({formatDate:w,formatTime:x,formatRelative:k,formatNumber:_,formatPlural:S,formatMessage:T,formatHTMLMessage:E}),Ae=Object.keys(me),Ne=Object.keys(he),je={formats:{},messages:{},timeZone:null,textComponent:\"span\",defaultLocale:\"en\",defaultFormats:{},onError:d},Me=function(e){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));V()(\"undefined\"!==typeof Intl,\"[React Intl] The `Intl` APIs must be available in the runtime, and do not appear to be built-in. An `Intl` polyfill should be loaded.\\nSee: http://formatjs.io/guides/runtime-environments/\");var o=n.intl,i=void 0;i=isFinite(e.initialNow)?Number(e.initialNow):o?o.now():Date.now();var a=o||{},u=a.formatters,l=void 0===u?{getDateTimeFormat:Object(H.a)(Intl.DateTimeFormat),getNumberFormat:Object(H.a)(Intl.NumberFormat),getMessageFormat:Object(H.a)(j.a),getRelativeFormat:Object(H.a)(I.a),getPluralFormat:Object(H.a)(Se)}:u;return r.state=Y({},l,{now:function(){return r._didDisplay?Date.now():i}}),r}return X(t,e),Q(t,[{key:\"getConfig\",value:function(){var e=this.context.intl,t=u(this.props,Ae,e);for(var n in je)void 0===t[n]&&(t[n]=je[n]);if(!o(t.locale)){var r=t,i=r.locale,a=r.defaultLocale,l=r.defaultFormats;(0,r.onError)(f('Missing locale data for locale: \"'+i+'\". Using default locale: \"'+a+'\" as fallback.')),t=Y({},t,{locale:a,formats:l,messages:je.messages})}return t}},{key:\"getBoundFormatFns\",value:function(e,t){return Ne.reduce(function(n,r){return n[r]=Fe[r].bind(null,e,t),n},{})}},{key:\"getChildContext\",value:function(){var e=this.getConfig(),t=this.getBoundFormatFns(e,this.state),n=this.state,r=n.now,o=Z(n,[\"now\"]);return{intl:Y({},e,t,{formatters:o,now:r})}}},{key:\"shouldComponentUpdate\",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return s.apply(void 0,[this].concat(t))}},{key:\"componentDidMount\",value:function(){this._didDisplay=!0}},{key:\"render\",value:function(){return D.Children.only(this.props.children)}}]),t}(D.Component);Me.displayName=\"IntlProvider\",Me.contextTypes={intl:ye},Me.childContextTypes={intl:ye.isRequired};var Ie=function(e){function t(e,n){G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));return l(n),r}return X(t,e),Q(t,[{key:\"shouldComponentUpdate\",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return s.apply(void 0,[this].concat(t))}},{key:\"render\",value:function(){var e=this.context.intl,t=e.formatDate,n=e.textComponent,r=this.props,o=r.value,i=r.children,a=t(o,this.props);return\"function\"===typeof i?i(a):U.a.createElement(n,null,a)}}]),t}(D.Component);Ie.displayName=\"FormattedDate\",Ie.contextTypes={intl:ye};var Re=function(e){function t(e,n){G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));return l(n),r}return X(t,e),Q(t,[{key:\"shouldComponentUpdate\",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return s.apply(void 0,[this].concat(t))}},{key:\"render\",value:function(){var e=this.context.intl,t=e.formatTime,n=e.textComponent,r=this.props,o=r.value,i=r.children,a=t(o,this.props);return\"function\"===typeof i?i(a):U.a.createElement(n,null,a)}}]),t}(D.Component);Re.displayName=\"FormattedTime\",Re.contextTypes={intl:ye};var Le=1e3,De=6e4,Ue=36e5,ze=864e5,Be=2147483647,We=function(e){function t(e,n){G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));l(n);var o=isFinite(e.initialNow)?Number(e.initialNow):n.intl.now();return r.state={now:o},r}return X(t,e),Q(t,[{key:\"scheduleNextUpdate\",value:function(e,t){var n=this;clearTimeout(this._timer);var r=e.value,o=e.units,i=e.updateInterval,a=new Date(r).getTime();if(i&&isFinite(a)){var u=a-t.now,l=C(o||P(u)),c=Math.abs(u%l),s=u<0?Math.max(i,l-c):Math.max(i,c);this._timer=setTimeout(function(){n.setState({now:n.context.intl.now()})},s)}}},{key:\"componentDidMount\",value:function(){this.scheduleNextUpdate(this.props,this.state)}},{key:\"componentWillReceiveProps\",value:function(e){O(e.value,this.props.value)||this.setState({now:this.context.intl.now()})}},{key:\"shouldComponentUpdate\",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return s.apply(void 0,[this].concat(t))}},{key:\"componentWillUpdate\",value:function(e,t){this.scheduleNextUpdate(e,t)}},{key:\"componentWillUnmount\",value:function(){clearTimeout(this._timer)}},{key:\"render\",value:function(){var e=this.context.intl,t=e.formatRelative,n=e.textComponent,r=this.props,o=r.value,i=r.children,a=t(o,Y({},this.props,this.state));return\"function\"===typeof i?i(a):U.a.createElement(n,null,a)}}]),t}(D.Component);We.displayName=\"FormattedRelative\",We.contextTypes={intl:ye},We.defaultProps={updateInterval:1e4};var Ve=function(e){function t(e,n){G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));return l(n),r}return X(t,e),Q(t,[{key:\"shouldComponentUpdate\",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return s.apply(void 0,[this].concat(t))}},{key:\"render\",value:function(){var e=this.context.intl,t=e.formatNumber,n=e.textComponent,r=this.props,o=r.value,i=r.children,a=t(o,this.props);return\"function\"===typeof i?i(a):U.a.createElement(n,null,a)}}]),t}(D.Component);Ve.displayName=\"FormattedNumber\",Ve.contextTypes={intl:ye};var He=function(e){function t(e,n){G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));return l(n),r}return X(t,e),Q(t,[{key:\"shouldComponentUpdate\",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return s.apply(void 0,[this].concat(t))}},{key:\"render\",value:function(){var e=this.context.intl,t=e.formatPlural,n=e.textComponent,r=this.props,o=r.value,i=r.other,a=r.children,u=t(o,this.props),l=this.props[u]||i;return\"function\"===typeof a?a(l):U.a.createElement(n,null,l)}}]),t}(D.Component);He.displayName=\"FormattedPlural\",He.contextTypes={intl:ye},He.defaultProps={style:\"cardinal\"};var qe=function(e,t){return T({},{getMessageFormat:Object(H.a)(j.a)},e,t)},$e=function(e){function t(e,n){G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));return e.defaultMessage||l(n),r}return X(t,e),Q(t,[{key:\"shouldComponentUpdate\",value:function(e){var t=this.props.values;if(!c(e.values,t))return!0;for(var n=Y({},e,{values:t}),r=arguments.length,o=Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];return s.apply(void 0,[this,n].concat(o))}},{key:\"render\",value:function(){var e=this.context.intl||{},t=e.formatMessage,n=void 0===t?qe:t,r=e.textComponent,o=void 0===r?\"span\":r,i=this.props,a=i.id,u=i.description,l=i.defaultMessage,c=i.values,s=i.tagName,f=void 0===s?o:s,d=i.children,p=void 0,m=void 0,h=void 0;if(c&&Object.keys(c).length>0){var y=Math.floor(1099511627776*Math.random()).toString(16),v=function(){var e=0;return function(){return\"ELEMENT-\"+y+\"-\"+(e+=1)}}();p=\"@__\"+y+\"__@\",m={},h={},Object.keys(c).forEach(function(e){var t=c[e];if(Object(D.isValidElement)(t)){var n=v();m[e]=p+n+p,h[n]=t}else m[e]=t})}var g={id:a,description:u,defaultMessage:l},b=n(g,m||c),w=void 0;return w=h&&Object.keys(h).length>0?b.split(p).filter(function(e){return!!e}).map(function(e){return h[e]||e}):[b],\"function\"===typeof d?d.apply(void 0,ee(w)):D.createElement.apply(void 0,[f,null].concat(ee(w)))}}]),t}(D.Component);$e.displayName=\"FormattedMessage\",$e.contextTypes={intl:ye},$e.defaultProps={values:{}};var Ge=function(e){function t(e,n){G(this,t);var r=J(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));return l(n),r}return X(t,e),Q(t,[{key:\"shouldComponentUpdate\",value:function(e){var t=this.props.values;if(!c(e.values,t))return!0;for(var n=Y({},e,{values:t}),r=arguments.length,o=Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];return s.apply(void 0,[this,n].concat(o))}},{key:\"render\",value:function(){var e=this.context.intl,t=e.formatHTMLMessage,n=e.textComponent,r=this.props,o=r.id,i=r.description,a=r.defaultMessage,u=r.values,l=r.tagName,c=void 0===l?n:l,s=r.children,f={id:o,description:i,defaultMessage:a},d=t(f,u);if(\"function\"===typeof s)return s(d);var p={__html:d};return U.a.createElement(c,{dangerouslySetInnerHTML:p})}}]),t}(D.Component);Ge.displayName=\"FormattedHTMLMessage\",Ge.contextTypes={intl:ye},Ge.defaultProps={values:{}},r(q),r(A.a)},function(e,t,n){e.exports={default:n(249),__esModule:!0}},function(e,t,n){e.exports={default:n(214),__esModule:!0}},function(e,t,n){\"use strict\";var r=function(e,t,n,r,o,i,a,u){if(!e){var l;if(void 0===t)l=new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var c=[n,r,o,i,a,u],s=0;l=new Error(t.replace(/%s/g,function(){return c[s++]})),l.name=\"Invariant Violation\"}throw l.framesToPop=1,l}};e.exports=r},function(e,t){var n;n=function(){return this}();try{n=n||Function(\"return this\")()||(0,eval)(\"this\")}catch(e){\"object\"===typeof window&&(n=window)}e.exports=n},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){var r=n(34),o=n(124),i=n(125),a=n(10),u=n(72),l=n(75),c={},s={},t=e.exports=function(e,t,n,f,d){var p,m,h,y,v=d?function(){return e}:l(e),g=r(n,f,t?2:1),b=0;if(\"function\"!=typeof v)throw TypeError(e+\" is not iterable!\");if(i(v)){for(p=u(e.length);p>b;b++)if((y=t?g(a(m=e[b])[0],m[1]):g(e[b]))===c||y===s)return y}else for(h=v.call(e);!(m=h.next()).done;)if((y=o(h,g,m.value,t))===c||y===s)return y};t.BREAK=c,t.RETURN=s},function(e,t,n){var r=n(10),o=n(206),i=n(74),a=n(66)(\"IE_PROTO\"),u=function(){},l=function(){var e,t=n(64)(\"iframe\"),r=i.length;for(t.style.display=\"none\",n(96).appendChild(t),t.src=\"javascript:\",e=t.contentWindow.document,e.open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),l=e.F;r--;)delete l.prototype[i[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(u.prototype=r(e),n=new u,u.prototype=null,n[a]=e):n=l(),void 0===t?n:o(n,t)}},function(e,t,n){\"use strict\";function r(){if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&\"function\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(e){console.error(e)}}r(),e.exports=n(223)},function(e,t,n){var r=n(28);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&\"function\"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if(\"function\"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&\"function\"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t){},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+\": incorrect invocation!\");return e}},function(e,t,n){var r=n(23);e.exports=function(e,t,n){for(var o in t)n&&e[o]?e[o]=t[o]:r(e,o,t[o]);return e}},function(e,t,n){\"use strict\";e.exports=n(246)},function(e,t,n){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=n(201),i=r(o),a=n(211),u=r(a);t.default=function(){function e(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=(0,u.default)(e);!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if((0,i.default)(Object(t)))return e(t,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}()},function(e,t,n){e.exports=!n(22)&&!n(46)(function(){return 7!=Object.defineProperty(n(64)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,n){e.exports=n(23)},function(e,t,n){var r=n(35),o=n(47),i=n(207)(!1),a=n(66)(\"IE_PROTO\");e.exports=function(e,t){var n,u=o(e),l=0,c=[];for(n in u)n!=a&&r(u,n)&&c.push(n);for(;t.length>l;)r(u,n=t[l++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){var r=n(35),o=n(68),i=n(66)(\"IE_PROTO\"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){var r=n(10);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(26),o=n(4)(\"iterator\"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){var r=n(4)(\"iterator\"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){\"use strict\";var r=n(3),o=n(7),i=n(33),a=n(22),u=n(4)(\"species\");e.exports=function(e){var t=\"function\"==typeof o[e]?o[e]:r[e];a&&t&&!t[u]&&i.f(t,u,{configurable:!0,get:function(){return this}})}},,,,,,,,,,,,,,,,function(e,t,n){n(145),e.exports=n(200)},function(e,t,n){n(146),n(157),n(159),n(190),n(194),Object.defineProperty(Array.prototype,Symbol.toStringTag,{value:\"Array\"})},function(e,t,n){\"use strict\";var r,o,i,a,u=n(29),l=n(2),c=n(17),s=n(78),f=n(0),d=n(9),p=n(18),m=n(148),h=n(149),y=n(150),v=n(83).set,g=n(152)(),b=n(84),w=n(153),x=n(154),k=n(155),_=l.TypeError,S=l.process,T=S&&S.versions,E=T&&T.v8||\"\",P=l.Promise,C=\"process\"==s(S),O=function(){},F=o=b.f,A=!!function(){try{var e=P.resolve(1),t=(e.constructor={})[n(1)(\"species\")]=function(e){e(O,O)};return(C||\"function\"==typeof PromiseRejectionEvent)&&e.then(O)instanceof t&&0!==E.indexOf(\"6.6\")&&-1===x.indexOf(\"Chrome/66\")}catch(e){}}(),N=function(e){var t;return!(!d(e)||\"function\"!=typeof(t=e.then))&&t},j=function(e,t){if(!e._n){e._n=!0;var n=e._c;g(function(){for(var r=e._v,o=1==e._s,i=0;n.length>i;)!function(t){var n,i,a,u=o?t.ok:t.fail,l=t.resolve,c=t.reject,s=t.domain;try{u?(o||(2==e._h&&R(e),e._h=1),!0===u?n=r:(s&&s.enter(),n=u(r),s&&(s.exit(),a=!0)),n===t.promise?c(_(\"Promise-chain cycle\")):(i=N(n))?i.call(n,l,c):l(n)):c(r)}catch(e){s&&!a&&s.exit(),c(e)}}(n[i++]);e._c=[],e._n=!1,t&&!e._h&&M(e)})}},M=function(e){v.call(l,function(){var t,n,r,o=e._v,i=I(e);if(i&&(t=w(function(){C?S.emit(\"unhandledRejection\",o,e):(n=l.onunhandledrejection)?n({promise:e,reason:o}):(r=l.console)&&r.error&&r.error(\"Unhandled promise rejection\",o)}),e._h=C||I(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},I=function(e){return 1!==e._h&&0===(e._a||e._c).length},R=function(e){v.call(l,function(){var t;C?S.emit(\"rejectionHandled\",e):(t=l.onrejectionhandled)&&t({promise:e,reason:e._v})})},L=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),j(t,!0))},D=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw _(\"Promise can't be resolved itself\");(t=N(e))?g(function(){var r={_w:n,_d:!1};try{t.call(e,c(D,r,1),c(L,r,1))}catch(e){L.call(r,e)}}):(n._v=e,n._s=1,j(n,!1))}catch(e){L.call({_w:n,_d:!1},e)}}};A||(P=function(e){m(this,P,\"Promise\",\"_h\"),p(e),r.call(this);try{e(c(D,this,1),c(L,this,1))}catch(e){L.call(this,e)}},r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},r.prototype=n(156)(P.prototype,{then:function(e,t){var n=F(y(this,P));return n.ok=\"function\"!=typeof e||e,n.fail=\"function\"==typeof t&&t,n.domain=C?S.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&j(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=c(D,e,1),this.reject=c(L,e,1)},b.f=F=function(e){return e===P||e===a?new i(e):o(e)}),f(f.G+f.W+f.F*!A,{Promise:P}),n(41)(P,\"Promise\"),n(85)(\"Promise\"),a=n(11).Promise,f(f.S+f.F*!A,\"Promise\",{reject:function(e){var t=F(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(u||!A),\"Promise\",{resolve:function(e){return k(u&&this===a?P:this,e)}}),f(f.S+f.F*!(A&&n(86)(function(e){P.all(e).catch(O)})),\"Promise\",{all:function(e){var t=this,n=F(t),r=n.resolve,o=n.reject,i=w(function(){var n=[],i=0,a=1;h(e,!1,function(e){var u=i++,l=!1;n.push(void 0),a++,t.resolve(e).then(function(e){l||(l=!0,n[u]=e,--a||r(n))},o)}),--a||r(n)});return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=F(t),r=n.reject,o=w(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},function(e,t,n){e.exports=n(38)(\"native-function-to-string\",Function.toString)},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+\": incorrect invocation!\");return e}},function(e,t,n){var r=n(17),o=n(80),i=n(81),a=n(13),u=n(5),l=n(82),c={},s={},t=e.exports=function(e,t,n,f,d){var p,m,h,y,v=d?function(){return e}:l(e),g=r(n,f,t?2:1),b=0;if(\"function\"!=typeof v)throw TypeError(e+\" is not iterable!\");if(i(v)){for(p=u(e.length);p>b;b++)if((y=t?g(a(m=e[b])[0],m[1]):g(e[b]))===c||y===s)return y}else for(h=v.call(e);!(m=h.next()).done;)if((y=o(h,g,m.value,t))===c||y===s)return y};t.BREAK=c,t.RETURN=s},function(e,t,n){var r=n(13),o=n(18),i=n(1)(\"species\");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||void 0==(n=r(a)[i])?t:o(n)}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(2),o=n(83).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,u=r.Promise,l=\"process\"==n(24)(a);e.exports=function(){var e,t,n,c=function(){var r,o;for(l&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(l)n=function(){a.nextTick(c)};else if(!i||r.navigator&&r.navigator.standalone)if(u&&u.resolve){var s=u.resolve(void 0);n=function(){s.then(c)}}else n=function(){o.call(r,c)};else{var f=!0,d=document.createTextNode(\"\");new i(c).observe(d,{characterData:!0}),n=function(){d.data=f=!f}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(2),o=r.navigator;e.exports=o&&o.userAgent||\"\"},function(e,t,n){var r=n(13),o=n(9),i=n(84);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var r=n(39);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},function(e,t,n){n(158),e.exports=self.fetch.bind(self)},function(e,t,n){\"use strict\";function r(e){return e&&DataView.prototype.isPrototypeOf(e)}function o(e){if(\"string\"!==typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(e))throw new TypeError(\"Invalid character in header field name\");return e.toLowerCase()}function i(e){return\"string\"!==typeof e&&(e=String(e)),e}function a(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return x.iterable&&(t[Symbol.iterator]=function(){return t}),t}function u(e){this.map={},e instanceof u?e.forEach(function(e,t){this.append(t,e)},this):Array.isArray(e)?e.forEach(function(e){this.append(e[0],e[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function l(e){if(e.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));e.bodyUsed=!0}function c(e){return new Promise(function(t,n){e.onload=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function s(e){var t=new FileReader,n=c(t);return t.readAsArrayBuffer(e),n}function f(e){var t=new FileReader,n=c(t);return t.readAsText(e),n}function d(e){for(var t=new Uint8Array(e),n=new Array(t.length),r=0;r<t.length;r++)n[r]=String.fromCharCode(t[r]);return n.join(\"\")}function p(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function m(){return this.bodyUsed=!1,this._initBody=function(e){this._bodyInit=e,e?\"string\"===typeof e?this._bodyText=e:x.blob&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:x.formData&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:x.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():x.arrayBuffer&&x.blob&&r(e)?(this._bodyArrayBuffer=p(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):x.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||_(e))?this._bodyArrayBuffer=p(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText=\"\",this.headers.get(\"content-type\")||(\"string\"===typeof e?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):x.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},x.blob&&(this.blob=function(){var e=l(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?l(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(s)}),this.text=function(){var e=l(this);if(e)return e;if(this._bodyBlob)return f(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(d(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},x.formData&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}function h(e){var t=e.toUpperCase();return S.indexOf(t)>-1?t:e}function y(e,t){t=t||{};var n=t.body;if(e instanceof y){if(e.bodyUsed)throw new TypeError(\"Already read\");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new u(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,n||null==e._bodyInit||(n=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||\"same-origin\",!t.headers&&this.headers||(this.headers=new u(t.headers)),this.method=h(t.method||this.method||\"GET\"),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,(\"GET\"===this.method||\"HEAD\"===this.method)&&n)throw new TypeError(\"Body not allowed for GET or HEAD requests\");this._initBody(n)}function v(e){var t=new FormData;return e.trim().split(\"&\").forEach(function(e){if(e){var n=e.split(\"=\"),r=n.shift().replace(/\\+/g,\" \"),o=n.join(\"=\").replace(/\\+/g,\" \");t.append(decodeURIComponent(r),decodeURIComponent(o))}}),t}function g(e){var t=new u;return e.replace(/\\r?\\n[\\t ]+/g,\" \").split(/\\r?\\n/).forEach(function(e){var n=e.split(\":\"),r=n.shift().trim();if(r){var o=n.join(\":\").trim();t.append(r,o)}}),t}function b(e,t){t||(t={}),this.type=\"default\",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText=\"statusText\"in t?t.statusText:\"OK\",this.headers=new u(t.headers),this.url=t.url||\"\",this._initBody(e)}function w(e,t){return new Promise(function(n,r){function o(){a.abort()}var i=new y(e,t);if(i.signal&&i.signal.aborted)return r(new E(\"Aborted\",\"AbortError\"));var a=new XMLHttpRequest;a.onload=function(){var e={status:a.status,statusText:a.statusText,headers:g(a.getAllResponseHeaders()||\"\")};e.url=\"responseURL\"in a?a.responseURL:e.headers.get(\"X-Request-URL\");var t=\"response\"in a?a.response:a.responseText;n(new b(t,e))},a.onerror=function(){r(new TypeError(\"Network request failed\"))},a.ontimeout=function(){r(new TypeError(\"Network request failed\"))},a.onabort=function(){r(new E(\"Aborted\",\"AbortError\"))},a.open(i.method,i.url,!0),\"include\"===i.credentials?a.withCredentials=!0:\"omit\"===i.credentials&&(a.withCredentials=!1),\"responseType\"in a&&x.blob&&(a.responseType=\"blob\"),i.headers.forEach(function(e,t){a.setRequestHeader(t,e)}),i.signal&&(i.signal.addEventListener(\"abort\",o),a.onreadystatechange=function(){4===a.readyState&&i.signal.removeEventListener(\"abort\",o)}),a.send(\"undefined\"===typeof i._bodyInit?null:i._bodyInit)})}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Headers=u,t.Request=y,t.Response=b,n.d(t,\"DOMException\",function(){return E}),t.fetch=w;var x={searchParams:\"URLSearchParams\"in self,iterable:\"Symbol\"in self&&\"iterator\"in Symbol,blob:\"FileReader\"in self&&\"Blob\"in self&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:\"FormData\"in self,arrayBuffer:\"ArrayBuffer\"in self};if(x.arrayBuffer)var k=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],_=ArrayBuffer.isView||function(e){return e&&k.indexOf(Object.prototype.toString.call(e))>-1};u.prototype.append=function(e,t){e=o(e),t=i(t);var n=this.map[e];this.map[e]=n?n+\", \"+t:t},u.prototype.delete=function(e){delete this.map[o(e)]},u.prototype.get=function(e){return e=o(e),this.has(e)?this.map[e]:null},u.prototype.has=function(e){return this.map.hasOwnProperty(o(e))},u.prototype.set=function(e,t){this.map[o(e)]=i(t)},u.prototype.forEach=function(e,t){for(var n in this.map)this.map.hasOwnProperty(n)&&e.call(t,this.map[n],n,this)},u.prototype.keys=function(){var e=[];return this.forEach(function(t,n){e.push(n)}),a(e)},u.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),a(e)},u.prototype.entries=function(){var e=[];return this.forEach(function(t,n){e.push([n,t])}),a(e)},x.iterable&&(u.prototype[Symbol.iterator]=u.prototype.entries);var S=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];y.prototype.clone=function(){return new y(this,{body:this._bodyInit})},m.call(y.prototype),m.call(b.prototype),b.prototype.clone=function(){return new b(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new u(this.headers),url:this.url})},b.error=function(){var e=new b(null,{status:0,statusText:\"\"});return e.type=\"error\",e};var T=[301,302,303,307,308];b.redirect=function(e,t){if(-1===T.indexOf(t))throw new RangeError(\"Invalid status code\");return new b(null,{status:t,headers:{location:e}})};var E=self.DOMException;try{new E}catch(e){E=function(e,t){this.message=e,this.name=t;var n=Error(e);this.stack=n.stack},E.prototype=Object.create(Error.prototype),E.prototype.constructor=E}w.polyfill=!0,self.fetch||(self.fetch=w,self.Headers=u,self.Request=y,self.Response=b)},function(e,t,n){n(160),n(165),n(166),n(167),n(168),n(169),n(170),n(171),n(173),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(181),n(183),n(185),n(186),n(187),n(188),e.exports=n(11).Array},function(e,t,n){\"use strict\";var r=n(161)(!0);n(87)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t,n){var r=n(32),o=n(56);e.exports=function(e){return function(t,n){var i,a,u=String(o(t)),l=r(n),c=u.length;return l<0||l>=c?e?\"\":void 0:(i=u.charCodeAt(l),i<55296||i>56319||l+1===c||(a=u.charCodeAt(l+1))<56320||a>57343?e?u.charAt(l):i:e?u.slice(l,l+2):a-56320+(i-55296<<10)+65536)}}},function(e,t,n){\"use strict\";var r=n(88),o=n(31),i=n(41),a={};n(25)(a,n(1)(\"iterator\"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+\" Iterator\")}},function(e,t,n){var r=n(12),o=n(13),i=n(57);e.exports=n(19)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),u=a.length,l=0;u>l;)r.f(e,n=a[l++],t[n]);return e}},function(e,t,n){var r=n(20),o=n(8),i=n(59)(\"IE_PROTO\"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){var r=n(0);r(r.S,\"Array\",{isArray:n(44)})},function(e,t,n){\"use strict\";var r=n(17),o=n(0),i=n(8),a=n(80),u=n(81),l=n(5),c=n(90),s=n(82);o(o.S+o.F*!n(86)(function(e){Array.from(e)}),\"Array\",{from:function(e){var t,n,o,f,d=i(e),p=\"function\"==typeof this?this:Array,m=arguments.length,h=m>1?arguments[1]:void 0,y=void 0!==h,v=0,g=s(d);if(y&&(h=r(h,m>2?arguments[2]:void 0,2)),void 0==g||p==Array&&u(g))for(t=l(d.length),n=new p(t);t>v;v++)c(n,v,y?h(d[v],v):d[v]);else for(f=g.call(d),n=new p;!(o=f.next()).done;v++)c(n,v,y?a(f,h,[o.value,v],!0):o.value);return n.length=v,n}})},function(e,t,n){\"use strict\";var r=n(0),o=n(90);r(r.S+r.F*n(14)(function(){function e(){}return!(Array.of.call(e)instanceof e)}),\"Array\",{of:function(){for(var e=0,t=arguments.length,n=new(\"function\"==typeof this?this:Array)(t);t>e;)o(n,e,arguments[e++]);return n.length=t,n}})},function(e,t,n){\"use strict\";var r=n(0),o=n(15),i=[].join;r(r.P+r.F*(n(42)!=Object||!n(6)(i)),\"Array\",{join:function(e){return i.call(o(this),void 0===e?\",\":e)}})},function(e,t,n){\"use strict\";var r=n(0),o=n(55),i=n(24),a=n(43),u=n(5),l=[].slice;r(r.P+r.F*n(14)(function(){o&&l.call(o)}),\"Array\",{slice:function(e,t){var n=u(this.length),r=i(this);if(t=void 0===t?n:t,\"Array\"==r)return l.call(this,e,t);for(var o=a(e,n),c=a(t,n),s=u(c-o),f=new Array(s),d=0;d<s;d++)f[d]=\"String\"==r?this.charAt(o+d):this[o+d];return f}})},function(e,t,n){\"use strict\";var r=n(0),o=n(18),i=n(8),a=n(14),u=[].sort,l=[1,2,3];r(r.P+r.F*(a(function(){l.sort(void 0)})||!a(function(){l.sort(null)})||!n(6)(u)),\"Array\",{sort:function(e){return void 0===e?u.call(i(this)):u.call(i(this),o(e))}})},function(e,t,n){\"use strict\";var r=n(0),o=n(21)(0),i=n(6)([].forEach,!0);r(r.P+r.F*!i,\"Array\",{forEach:function(e){return o(this,e,arguments[1])}})},function(e,t,n){var r=n(9),o=n(44),i=n(1)(\"species\");e.exports=function(e){var t;return o(e)&&(t=e.constructor,\"function\"!=typeof t||t!==Array&&!o(t.prototype)||(t=void 0),r(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,n){\"use strict\";var r=n(0),o=n(21)(1);r(r.P+r.F*!n(6)([].map,!0),\"Array\",{map:function(e){return o(this,e,arguments[1])}})},function(e,t,n){\"use strict\";var r=n(0),o=n(21)(2);r(r.P+r.F*!n(6)([].filter,!0),\"Array\",{filter:function(e){return o(this,e,arguments[1])}})},function(e,t,n){\"use strict\";var r=n(0),o=n(21)(3);r(r.P+r.F*!n(6)([].some,!0),\"Array\",{some:function(e){return o(this,e,arguments[1])}})},function(e,t,n){\"use strict\";var r=n(0),o=n(21)(4);r(r.P+r.F*!n(6)([].every,!0),\"Array\",{every:function(e){return o(this,e,arguments[1])}})},function(e,t,n){\"use strict\";var r=n(0),o=n(91);r(r.P+r.F*!n(6)([].reduce,!0),\"Array\",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},function(e,t,n){\"use strict\";var r=n(0),o=n(91);r(r.P+r.F*!n(6)([].reduceRight,!0),\"Array\",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},function(e,t,n){\"use strict\";var r=n(0),o=n(58)(!1),i=[].indexOf,a=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(a||!n(6)(i)),\"Array\",{indexOf:function(e){return a?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},function(e,t,n){\"use strict\";var r=n(0),o=n(15),i=n(32),a=n(5),u=[].lastIndexOf,l=!!u&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(l||!n(6)(u)),\"Array\",{lastIndexOf:function(e){if(l)return u.apply(this,arguments)||0;var t=o(this),n=a(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,i(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},function(e,t,n){var r=n(0);r(r.P,\"Array\",{copyWithin:n(182)}),n(16)(\"copyWithin\")},function(e,t,n){\"use strict\";var r=n(8),o=n(43),i=n(5);e.exports=[].copyWithin||function(e,t){var n=r(this),a=i(n.length),u=o(e,a),l=o(t,a),c=arguments.length>2?arguments[2]:void 0,s=Math.min((void 0===c?a:o(c,a))-l,a-u),f=1;for(l<u&&u<l+s&&(f=-1,l+=s-1,u+=s-1);s-- >0;)l in n?n[u]=n[l]:delete n[u],u+=f,l+=f;return n}},function(e,t,n){var r=n(0);r(r.P,\"Array\",{fill:n(184)}),n(16)(\"fill\")},function(e,t,n){\"use strict\";var r=n(8),o=n(43),i=n(5);e.exports=function(e){for(var t=r(this),n=i(t.length),a=arguments.length,u=o(a>1?arguments[1]:void 0,n),l=a>2?arguments[2]:void 0,c=void 0===l?n:o(l,n);c>u;)t[u++]=e;return t}},function(e,t,n){\"use strict\";var r=n(0),o=n(21)(5),i=!0;\"find\"in[]&&Array(1).find(function(){i=!1}),r(r.P+r.F*i,\"Array\",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(16)(\"find\")},function(e,t,n){\"use strict\";var r=n(0),o=n(21)(6),i=\"findIndex\",a=!0;i in[]&&Array(1)[i](function(){a=!1}),r(r.P+r.F*a,\"Array\",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(16)(i)},function(e,t,n){n(85)(\"Array\")},function(e,t,n){\"use strict\";var r=n(16),o=n(189),i=n(40),a=n(15);e.exports=n(87)(Array,\"Array\",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):\"keys\"==t?o(0,n):\"values\"==t?o(0,e[n]):o(0,[n,e[n]])},\"values\"),i.Arguments=i.Array,r(\"keys\"),r(\"values\"),r(\"entries\")},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){n(191),n(192),n(193),e.exports=n(11).Array},function(e,t,n){\"use strict\";var r=n(0),o=n(58)(!0);r(r.P,\"Array\",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(16)(\"includes\")},function(e,t,n){\"use strict\";var r=n(0),o=n(92),i=n(8),a=n(5),u=n(18),l=n(61);r(r.P,\"Array\",{flatMap:function(e){var t,n,r=i(this);return u(e),t=a(r.length),n=l(r,0),o(n,r,r,t,0,1,e,arguments[1]),n}}),n(16)(\"flatMap\")},function(e,t,n){\"use strict\";var r=n(0),o=n(92),i=n(8),a=n(5),u=n(32),l=n(61);r(r.P,\"Array\",{flatten:function(){var e=arguments[0],t=i(this),n=a(t.length),r=l(t,0);return o(r,t,t,n,0,void 0===e?1:u(e)),r}}),n(16)(\"flatten\")},function(e,t,n){\"use strict\";var r=n(2),o=n(20),i=n(19),a=n(0),u=n(39),l=n(195).KEY,c=n(14),s=n(38),f=n(41),d=n(30),p=n(1),m=n(93),h=n(196),y=n(197),v=n(44),g=n(13),b=n(9),w=n(8),x=n(15),k=n(54),_=n(31),S=n(88),T=n(198),E=n(199),P=n(94),C=n(12),O=n(57),F=E.f,A=C.f,N=T.f,j=r.Symbol,M=r.JSON,I=M&&M.stringify,R=p(\"_hidden\"),L=p(\"toPrimitive\"),D={}.propertyIsEnumerable,U=s(\"symbol-registry\"),z=s(\"symbols\"),B=s(\"op-symbols\"),W=Object.prototype,V=\"function\"==typeof j&&!!P.f,H=r.QObject,q=!H||!H.prototype||!H.prototype.findChild,$=i&&c(function(){return 7!=S(A({},\"a\",{get:function(){return A(this,\"a\",{value:7}).a}})).a})?function(e,t,n){var r=F(W,t);r&&delete W[t],A(e,t,n),r&&e!==W&&A(W,t,r)}:A,G=function(e){var t=z[e]=S(j.prototype);return t._k=e,t},Q=V&&\"symbol\"==typeof j.iterator?function(e){return\"symbol\"==typeof e}:function(e){return e instanceof j},K=function(e,t,n){return e===W&&K(B,t,n),g(e),t=k(t,!0),g(n),o(z,t)?(n.enumerable?(o(e,R)&&e[R][t]&&(e[R][t]=!1),n=S(n,{enumerable:_(0,!1)})):(o(e,R)||A(e,R,_(1,{})),e[R][t]=!0),$(e,t,n)):A(e,t,n)},Y=function(e,t){g(e);for(var n,r=y(t=x(t)),o=0,i=r.length;i>o;)K(e,n=r[o++],t[n]);return e},X=function(e,t){return void 0===t?S(e):Y(S(e),t)},Z=function(e){var t=D.call(this,e=k(e,!0));return!(this===W&&o(z,e)&&!o(B,e))&&(!(t||!o(this,e)||!o(z,e)||o(this,R)&&this[R][e])||t)},J=function(e,t){if(e=x(e),t=k(t,!0),e!==W||!o(z,t)||o(B,t)){var n=F(e,t);return!n||!o(z,t)||o(e,R)&&e[R][t]||(n.enumerable=!0),n}},ee=function(e){for(var t,n=N(x(e)),r=[],i=0;n.length>i;)o(z,t=n[i++])||t==R||t==l||r.push(t);return r},te=function(e){for(var t,n=e===W,r=N(n?B:x(e)),i=[],a=0;r.length>a;)!o(z,t=r[a++])||n&&!o(W,t)||i.push(z[t]);return i};V||(j=function(){if(this instanceof j)throw TypeError(\"Symbol is not a constructor!\");var e=d(arguments.length>0?arguments[0]:void 0),t=function(n){this===W&&t.call(B,n),o(this,R)&&o(this[R],e)&&(this[R][e]=!1),$(this,e,_(1,n))};return i&&q&&$(W,e,{configurable:!0,set:t}),G(e)},u(j.prototype,\"toString\",function(){return this._k}),E.f=J,C.f=K,n(95).f=T.f=ee,n(62).f=Z,P.f=te,i&&!n(29)&&u(W,\"propertyIsEnumerable\",Z,!0),m.f=function(e){return G(p(e))}),a(a.G+a.W+a.F*!V,{Symbol:j});for(var ne=\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),re=0;ne.length>re;)p(ne[re++]);for(var oe=O(p.store),ie=0;oe.length>ie;)h(oe[ie++]);a(a.S+a.F*!V,\"Symbol\",{for:function(e){return o(U,e+=\"\")?U[e]:U[e]=j(e)},keyFor:function(e){if(!Q(e))throw TypeError(e+\" is not a symbol!\");for(var t in U)if(U[t]===e)return t},useSetter:function(){q=!0},useSimple:function(){q=!1}}),a(a.S+a.F*!V,\"Object\",{create:X,defineProperty:K,defineProperties:Y,getOwnPropertyDescriptor:J,getOwnPropertyNames:ee,getOwnPropertySymbols:te});var ae=c(function(){P.f(1)});a(a.S+a.F*ae,\"Object\",{getOwnPropertySymbols:function(e){return P.f(w(e))}}),M&&a(a.S+a.F*(!V||c(function(){var e=j();return\"[null]\"!=I([e])||\"{}\"!=I({a:e})||\"{}\"!=I(Object(e))})),\"JSON\",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(b(t)||void 0!==e)&&!Q(e))return v(t)||(t=function(e,t){if(\"function\"==typeof n&&(t=n.call(this,e,t)),!Q(t))return t}),r[1]=t,I.apply(M,r)}}),j.prototype[L]||n(25)(j.prototype,L,j.prototype.valueOf),f(j,\"Symbol\"),f(Math,\"Math\",!0),f(r.JSON,\"JSON\",!0)},function(e,t,n){var r=n(30)(\"meta\"),o=n(9),i=n(20),a=n(12).f,u=0,l=Object.isExtensible||function(){return!0},c=!n(14)(function(){return l(Object.preventExtensions({}))}),s=function(e){a(e,r,{value:{i:\"O\"+ ++u,w:{}}})},f=function(e,t){if(!o(e))return\"symbol\"==typeof e?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!i(e,r)){if(!l(e))return\"F\";if(!t)return\"E\";s(e)}return e[r].i},d=function(e,t){if(!i(e,r)){if(!l(e))return!0;if(!t)return!1;s(e)}return e[r].w},p=function(e){return c&&m.NEED&&l(e)&&!i(e,r)&&s(e),e},m=e.exports={KEY:r,NEED:!1,fastKey:f,getWeak:d,onFreeze:p}},function(e,t,n){var r=n(2),o=n(11),i=n(29),a=n(93),u=n(12).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});\"_\"==e.charAt(0)||e in t||u(t,e,{value:a.f(e)})}},function(e,t,n){var r=n(57),o=n(94),i=n(62);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,u=n(e),l=i.f,c=0;u.length>c;)l.call(e,a=u[c++])&&t.push(a);return t}},function(e,t,n){var r=n(15),o=n(95).f,i={}.toString,a=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],u=function(e){try{return o(e)}catch(e){return a.slice()}};e.exports.f=function(e){return a&&\"[object Window]\"==i.call(e)?u(e):o(r(e))}},function(e,t,n){var r=n(62),o=n(31),i=n(15),a=n(54),u=n(20),l=n(79),c=Object.getOwnPropertyDescriptor;t.f=n(19)?c:function(e,t){if(e=i(e),t=a(t,!0),l)try{return c(e,t)}catch(e){}if(u(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t,n){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",r=void 0;if(e)r=\"\"+e+t;else{r=\"\"+window.location.href.substring(0,window.location.href.length-1)+t+\"/\"}n.p=r}function i(){return window.Intl?f.default.resolve():new f.default(function(e){n.e(13).then(function(t){n(129),n(130),e()}.bind(null,n)).catch(n.oe)})}function a(e){return new f.default(function(t,r){switch(e){case\"AvailableCarriers\":n.e(12).then(function(e){t(n(131))}.bind(null,n)).catch(n.oe);break;case\"BatchCreate\":n.e(0).then(function(e){t(n(132))}.bind(null,n)).catch(n.oe);break;case\"BatchList\":n.e(11).then(function(e){t(n(133))}.bind(null,n)).catch(n.oe);break;case\"CarrierConfigure\":n.e(9).then(function(e){t(n(134))}.bind(null,n)).catch(n.oe);break;case\"CarrierRegistration\":n.e(5).then(function(e){t(n(135))}.bind(null,n)).catch(n.oe);break;case\"CheckoutFieldsForm\":n.e(3).then(function(e){t(n(136))}.bind(null,n)).catch(n.oe);break;case\"ContainerForm\":n.e(8).then(function(e){t(n(137))}.bind(null,n)).catch(n.oe);break;case\"DispatchCreate\":n.e(4).then(function(e){t(n(138))}.bind(null,n)).catch(n.oe);break;case\"DispatchList\":n.e(10).then(function(e){t(n(139))}.bind(null,n)).catch(n.oe);break;case\"LocationForm\":n.e(7).then(function(e){t(n(140))}.bind(null,n)).catch(n.oe);break;case\"OrderShip\":n.e(1).then(function(e){t(n(141))}.bind(null,n)).catch(n.oe);break;case\"ReturnDispatchCreate\":n.e(6).then(function(e){t(n(142))}.bind(null,n)).catch(n.oe);break;case\"ReturnShip\":n.e(2).then(function(e){t(n(143))}.bind(null,n)).catch(n.oe);break;default:r(new Error(\"Unknown entrypoint\"))}})}function u(e){var t=e.entrypoint,n=e.version,r=e.element,u=e.elements,l=e.data;o(e.assetsUrl,e.assetsPath),f.default.all([a(t),i()]).then(function(e){var t=(0,c.default)(e,1),o=t[0],i=void 0;i=\"string\"===typeof l.locale&&\"en\"===l.locale.toLowerCase().substring(0,2)?l.locale:\"en\";var a=void 0;a=u?u.main:r,h.default.render(p.default.createElement(y.IntlProvider,{locale:i,messages:v},p.default.createElement(o,{platform:\"m2\",version:n,data:l,elements:u})),a)})}Object.defineProperty(t,\"__esModule\",{value:!0});var l=n(119),c=r(l),s=n(106),f=r(s),d=n(45),p=r(d),m=n(112),h=r(m),y=n(104),v=n(248);window.temandoAsyncInit instanceof Function&&(window.Temando={init:u},window.temandoAsyncInit()),t.default={init:u},e.exports=t.default},function(e,t,n){e.exports={default:n(202),__esModule:!0}},function(e,t,n){n(50),n(48),e.exports=n(210)},function(e,t,n){\"use strict\";var r=n(204),o=n(127),i=n(26),a=n(47);e.exports=n(77)(Array,\"Array\",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):\"keys\"==t?o(0,n):\"values\"==t?o(0,e[n]):o(0,[n,e[n]])},\"values\"),i.Arguments=i.Array,r(\"keys\"),r(\"values\"),r(\"entries\")},function(e,t){e.exports=function(){}},function(e,t,n){\"use strict\";var r=n(111),o=n(70),i=n(51),a={};n(23)(a,n(4)(\"iterator\"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+\" Iterator\")}},function(e,t,n){var r=n(33),o=n(10),i=n(69);e.exports=n(22)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),u=a.length,l=0;u>l;)r.f(e,n=a[l++],t[n]);return e}},function(e,t,n){var r=n(47),o=n(72),i=n(208);e.exports=function(e){return function(t,n,a){var u,l=r(t),c=o(l.length),s=i(a,c);if(e&&n!=n){for(;c>s;)if((u=l[s++])!=u)return!0}else for(;c>s;s++)if((e||s in l)&&l[s]===n)return e||s||0;return!e&&-1}}},function(e,t,n){var r=n(65),o=Math.max,i=Math.min;e.exports=function(e,t){return e=r(e),e<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(65),o=n(63);e.exports=function(e){return function(t,n){var i,a,u=String(o(t)),l=r(n),c=u.length;return l<0||l>=c?e?\"\":void 0:(i=u.charCodeAt(l),i<55296||i>56319||l+1===c||(a=u.charCodeAt(l+1))<56320||a>57343?e?u.charAt(l):i:e?u.slice(l,l+2):a-56320+(i-55296<<10)+65536)}}},function(e,t,n){var r=n(52),o=n(4)(\"iterator\"),i=n(26);e.exports=n(7).isIterable=function(e){var t=Object(e);return void 0!==t[o]||\"@@iterator\"in t||i.hasOwnProperty(r(t))}},function(e,t,n){e.exports={default:n(212),__esModule:!0}},function(e,t,n){n(50),n(48),e.exports=n(213)},function(e,t,n){var r=n(10),o=n(75);e.exports=n(7).getIterator=function(e){var t=o(e);if(\"function\"!=typeof t)throw TypeError(e+\" is not iterable!\");return r(t.call(e))}},function(e,t,n){n(115),n(48),n(50),n(215),n(219),n(220),e.exports=n(7).Promise},function(e,t,n){\"use strict\";var r,o,i,a,u=n(49),l=n(3),c=n(34),s=n(52),f=n(27),d=n(28),p=n(37),m=n(116),h=n(110),y=n(97),v=n(98).set,g=n(217)(),b=n(67),w=n(99),x=n(218),k=n(100),_=l.TypeError,S=l.process,T=S&&S.versions,E=T&&T.v8||\"\",P=l.Promise,C=\"process\"==s(S),O=function(){},F=o=b.f,A=!!function(){try{var e=P.resolve(1),t=(e.constructor={})[n(4)(\"species\")]=function(e){e(O,O)};return(C||\"function\"==typeof PromiseRejectionEvent)&&e.then(O)instanceof t&&0!==E.indexOf(\"6.6\")&&-1===x.indexOf(\"Chrome/66\")}catch(e){}}(),N=function(e){var t;return!(!d(e)||\"function\"!=typeof(t=e.then))&&t},j=function(e,t){if(!e._n){e._n=!0;var n=e._c;g(function(){for(var r=e._v,o=1==e._s,i=0;n.length>i;)!function(t){var n,i,a,u=o?t.ok:t.fail,l=t.resolve,c=t.reject,s=t.domain;try{u?(o||(2==e._h&&R(e),e._h=1),!0===u?n=r:(s&&s.enter(),n=u(r),s&&(s.exit(),a=!0)),n===t.promise?c(_(\"Promise-chain cycle\")):(i=N(n))?i.call(n,l,c):l(n)):c(r)}catch(e){s&&!a&&s.exit(),c(e)}}(n[i++]);e._c=[],e._n=!1,t&&!e._h&&M(e)})}},M=function(e){v.call(l,function(){var t,n,r,o=e._v,i=I(e);if(i&&(t=w(function(){C?S.emit(\"unhandledRejection\",o,e):(n=l.onunhandledrejection)?n({promise:e,reason:o}):(r=l.console)&&r.error&&r.error(\"Unhandled promise rejection\",o)}),e._h=C||I(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},I=function(e){return 1!==e._h&&0===(e._a||e._c).length},R=function(e){v.call(l,function(){var t;C?S.emit(\"rejectionHandled\",e):(t=l.onrejectionhandled)&&t({promise:e,reason:e._v})})},L=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),j(t,!0))},D=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw _(\"Promise can't be resolved itself\");(t=N(e))?g(function(){var r={_w:n,_d:!1};try{t.call(e,c(D,r,1),c(L,r,1))}catch(e){L.call(r,e)}}):(n._v=e,n._s=1,j(n,!1))}catch(e){L.call({_w:n,_d:!1},e)}}};A||(P=function(e){m(this,P,\"Promise\",\"_h\"),p(e),r.call(this);try{e(c(D,this,1),c(L,this,1))}catch(e){L.call(this,e)}},r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},r.prototype=n(117)(P.prototype,{then:function(e,t){var n=F(y(this,P));return n.ok=\"function\"!=typeof e||e,n.fail=\"function\"==typeof t&&t,n.domain=C?S.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&j(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=c(D,e,1),this.reject=c(L,e,1)},b.f=F=function(e){return e===P||e===a?new i(e):o(e)}),f(f.G+f.W+f.F*!A,{Promise:P}),n(51)(P,\"Promise\"),n(128)(\"Promise\"),a=n(7).Promise,f(f.S+f.F*!A,\"Promise\",{reject:function(e){var t=F(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(u||!A),\"Promise\",{resolve:function(e){return k(u&&this===a?P:this,e)}}),f(f.S+f.F*!(A&&n(126)(function(e){P.all(e).catch(O)})),\"Promise\",{all:function(e){var t=this,n=F(t),r=n.resolve,o=n.reject,i=w(function(){var n=[],i=0,a=1;h(e,!1,function(e){var u=i++,l=!1;n.push(void 0),a++,t.resolve(e).then(function(e){l||(l=!0,n[u]=e,--a||r(n))},o)}),--a||r(n)});return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=F(t),r=n.reject,o=w(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(3),o=n(98).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,u=r.Promise,l=\"process\"==n(36)(a);e.exports=function(){var e,t,n,c=function(){var r,o;for(l&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(l)n=function(){a.nextTick(c)};else if(!i||r.navigator&&r.navigator.standalone)if(u&&u.resolve){var s=u.resolve(void 0);n=function(){s.then(c)}}else n=function(){o.call(r,c)};else{var f=!0,d=document.createTextNode(\"\");new i(c).observe(d,{characterData:!0}),n=function(){d.data=f=!f}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t,n){var r=n(3),o=r.navigator;e.exports=o&&o.userAgent||\"\"},function(e,t,n){\"use strict\";var r=n(27),o=n(7),i=n(3),a=n(97),u=n(100);r(r.P+r.R,\"Promise\",{finally:function(e){var t=a(this,o.Promise||i.Promise),n=\"function\"==typeof e;return this.then(n?function(n){return u(t,e()).then(function(){return n})}:e,n?function(n){return u(t,e()).then(function(){throw n})}:e)}})},function(e,t,n){\"use strict\";var r=n(27),o=n(67),i=n(99);r(r.S,\"Promise\",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){\"use strict\";function r(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[n,r,o,i,a,u],c=0;e=Error(t.replace(/%s/g,function(){return l[c++]})),e.name=\"Invariant Violation\"}throw e.framesToPop=1,e}}function o(e){for(var t=arguments.length-1,n=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+e,o=0;o<t;o++)n+=\"&args[]=\"+encodeURIComponent(arguments[o+1]);r(!1,\"Minified React error #\"+e+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",n)}function i(e,t,n){this.props=e,this.context=t,this.refs=L,this.updater=n||R}function a(){}function u(e,t,n){this.props=e,this.context=t,this.refs=L,this.updater=n||R}function l(e,t,n){var r=void 0,o={},i=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=\"\"+t.key),t)B.call(t,r)&&!W.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var l=Array(u),c=0;c<u;c++)l[c]=arguments[c+2];o.children=l}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:_,type:e,key:i,ref:a,props:o,_owner:z.current}}function c(e,t){return{$$typeof:_,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function s(e){return\"object\"===typeof e&&null!==e&&e.$$typeof===_}function f(e){var t={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+e).replace(/[=:]/g,function(e){return t[e]})}function d(e,t,n,r){if(H.length){var o=H.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function p(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>H.length&&H.push(e)}function m(e,t,n,r){var i=typeof e;\"undefined\"!==i&&\"boolean\"!==i||(e=null);var a=!1;if(null===e)a=!0;else switch(i){case\"string\":case\"number\":a=!0;break;case\"object\":switch(e.$$typeof){case _:case S:a=!0}}if(a)return n(r,e,\"\"===t?\".\"+y(e,0):t),1;if(a=0,t=\"\"===t?\".\":t+\":\",Array.isArray(e))for(var u=0;u<e.length;u++){i=e[u];var l=t+y(i,u);a+=m(i,l,n,r)}else if(null===e||\"object\"!==typeof e?l=null:(l=I&&e[I]||e[\"@@iterator\"],l=\"function\"===typeof l?l:null),\"function\"===typeof l)for(e=l.call(e),u=0;!(i=e.next()).done;)i=i.value,l=t+y(i,u++),a+=m(i,l,n,r);else\"object\"===i&&(n=\"\"+e,o(\"31\",\"[object Object]\"===n?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":n,\"\"));return a}function h(e,t,n){return null==e?0:m(e,\"\",t,n)}function y(e,t){return\"object\"===typeof e&&null!==e&&null!=e.key?f(e.key):t.toString(36)}function v(e,t){e.func.call(e.context,t,e.count++)}function g(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?b(e,r,n,function(e){return e}):null!=e&&(s(e)&&(e=c(e,o+(!e.key||t&&t.key===e.key?\"\":(\"\"+e.key).replace(V,\"$&/\")+\"/\")+n)),r.push(e))}function b(e,t,n,r,o){var i=\"\";null!=n&&(i=(\"\"+n).replace(V,\"$&/\")+\"/\"),t=d(t,i,r,o),h(e,g,t),p(t)}function w(){var e=U.current;return null===e&&o(\"321\"),e}var x=n(222),k=\"function\"===typeof Symbol&&Symbol.for,_=k?Symbol.for(\"react.element\"):60103,S=k?Symbol.for(\"react.portal\"):60106,T=k?Symbol.for(\"react.fragment\"):60107,E=k?Symbol.for(\"react.strict_mode\"):60108,P=k?Symbol.for(\"react.profiler\"):60114,C=k?Symbol.for(\"react.provider\"):60109,O=k?Symbol.for(\"react.context\"):60110,F=k?Symbol.for(\"react.concurrent_mode\"):60111,A=k?Symbol.for(\"react.forward_ref\"):60112,N=k?Symbol.for(\"react.suspense\"):60113,j=k?Symbol.for(\"react.memo\"):60115,M=k?Symbol.for(\"react.lazy\"):60116,I=\"function\"===typeof Symbol&&Symbol.iterator,R={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},L={};i.prototype.isReactComponent={},i.prototype.setState=function(e,t){\"object\"!==typeof e&&\"function\"!==typeof e&&null!=e&&o(\"85\"),this.updater.enqueueSetState(this,e,t,\"setState\")},i.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,\"forceUpdate\")},a.prototype=i.prototype;var D=u.prototype=new a;D.constructor=u,x(D,i.prototype),D.isPureReactComponent=!0;var U={current:null},z={current:null},B=Object.prototype.hasOwnProperty,W={key:!0,ref:!0,__self:!0,__source:!0},V=/\\/+/g,H=[],q={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return b(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=d(null,null,t,n),h(e,v,t),p(t)},count:function(e){return h(e,function(){return null},null)},toArray:function(e){var t=[];return b(e,t,null,function(e){return e}),t},only:function(e){return s(e)||o(\"143\"),e}},createRef:function(){return{current:null}},Component:i,PureComponent:u,createContext:function(e,t){return void 0===t&&(t=null),e={$$typeof:O,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null},e.Provider={$$typeof:C,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:A,render:e}},lazy:function(e){return{$$typeof:M,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:j,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return w().useCallback(e,t)},useContext:function(e,t){return w().useContext(e,t)},useEffect:function(e,t){return w().useEffect(e,t)},useImperativeHandle:function(e,t,n){return w().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return w().useLayoutEffect(e,t)},useMemo:function(e,t){return w().useMemo(e,t)},useReducer:function(e,t,n){return w().useReducer(e,t,n)},useRef:function(e){return w().useRef(e)},useState:function(e){return w().useState(e)},Fragment:T,StrictMode:E,Suspense:N,createElement:l,cloneElement:function(e,t,n){(null===e||void 0===e)&&o(\"267\",e);var r=void 0,i=x({},e.props),a=e.key,u=e.ref,l=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,l=z.current),void 0!==t.key&&(a=\"\"+t.key);var c=void 0;e.type&&e.type.defaultProps&&(c=e.type.defaultProps);for(r in t)B.call(t,r)&&!W.hasOwnProperty(r)&&(i[r]=void 0===t[r]&&void 0!==c?c[r]:t[r])}if(1===(r=arguments.length-2))i.children=n;else if(1<r){c=Array(r);for(var s=0;s<r;s++)c[s]=arguments[s+2];i.children=c}return{$$typeof:_,type:e.type,key:a,ref:u,props:i,_owner:l}},createFactory:function(e){var t=l.bind(null,e);return t.type=e,t},isValidElement:s,version:\"16.8.6\",unstable_ConcurrentMode:F,unstable_Profiler:P,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:U,ReactCurrentOwner:z,assign:x}},$={default:q},G=$&&q||$;e.exports=G.default||G},function(e,t,n){\"use strict\";function r(e){if(null===e||void 0===e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}var o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t[\"_\"+String.fromCharCode(n)]=n;if(\"0123456789\"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(\"\"))return!1;var r={};return\"abcdefghijklmnopqrst\".split(\"\").forEach(function(e){r[e]=e}),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},r)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,u,l=r(e),c=1;c<arguments.length;c++){n=Object(arguments[c]);for(var s in n)i.call(n,s)&&(l[s]=n[s]);if(o){u=o(n);for(var f=0;f<u.length;f++)a.call(n,u[f])&&(l[u[f]]=n[u[f]])}}return l}},function(e,t,n){\"use strict\";function r(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[n,r,o,i,a,u],c=0;e=Error(t.replace(/%s/g,function(){return l[c++]})),e.name=\"Invariant Violation\"}throw e.framesToPop=1,e}}function o(e){for(var t=arguments.length-1,n=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+e,o=0;o<t;o++)n+=\"&args[]=\"+encodeURIComponent(arguments[o+1]);r(!1,\"Minified React error #\"+e+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",n)}function i(e,t,n,r,o,i,a,u,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}function a(e,t,n,r,o,a,u,l,c){co=!1,so=null,i.apply(mo,arguments)}function u(e,t,n,r,i,u,l,c,s){if(a.apply(this,arguments),co){if(co){var f=so;co=!1,so=null}else o(\"198\"),f=void 0;fo||(fo=!0,po=f)}}function l(){if(ho)for(var e in yo){var t=yo[e],n=ho.indexOf(e);if(-1<n||o(\"96\",e),!vo[n]){t.extractEvents||o(\"97\",e),vo[n]=t,n=t.eventTypes;for(var r in n){var i=void 0,a=n[r],u=t,l=r;go.hasOwnProperty(l)&&o(\"99\",l),go[l]=a;var s=a.phasedRegistrationNames;if(s){for(i in s)s.hasOwnProperty(i)&&c(s[i],u,l);i=!0}else a.registrationName?(c(a.registrationName,u,l),i=!0):i=!1;i||o(\"98\",r,e)}}}}function c(e,t,n){bo[e]&&o(\"100\",e),bo[e]=t,wo[e]=t.eventTypes[n].dependencies}function s(e,t,n){var r=e.type||\"unknown-event\";e.currentTarget=_o(n),u(r,t,void 0,e),e.currentTarget=null}function f(e,t){return null==t&&o(\"30\"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function d(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}function p(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)s(e,t[r],n[r]);else t&&s(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function m(e,t){var n=e.stateNode;if(!n)return null;var r=xo(n);if(!r)return null;n=r[t];e:switch(t){case\"onClick\":case\"onClickCapture\":case\"onDoubleClick\":case\"onDoubleClickCapture\":case\"onMouseDown\":case\"onMouseDownCapture\":case\"onMouseMove\":case\"onMouseMoveCapture\":case\"onMouseUp\":case\"onMouseUpCapture\":(r=!r.disabled)||(e=e.type,r=!(\"button\"===e||\"input\"===e||\"select\"===e||\"textarea\"===e)),e=!r;break e;default:e=!1}return e?null:(n&&\"function\"!==typeof n&&o(\"231\",t,typeof n),n)}function h(e){if(null!==e&&(So=f(So,e)),e=So,So=null,e&&(d(e,p),So&&o(\"95\"),fo))throw e=po,fo=!1,po=null,e}function y(e){if(e[Po])return e[Po];for(;!e[Po];){if(!e.parentNode)return null;e=e.parentNode}return e=e[Po],5===e.tag||6===e.tag?e:null}function v(e){return e=e[Po],!e||5!==e.tag&&6!==e.tag?null:e}function g(e){if(5===e.tag||6===e.tag)return e.stateNode;o(\"33\")}function b(e){return e[Co]||null}function w(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function x(e,t,n){(t=m(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=f(n._dispatchListeners,t),n._dispatchInstances=f(n._dispatchInstances,e))}function k(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=w(t);for(t=n.length;0<t--;)x(n[t],\"captured\",e);for(t=0;t<n.length;t++)x(n[t],\"bubbled\",e)}}function _(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=m(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=f(n._dispatchListeners,t),n._dispatchInstances=f(n._dispatchInstances,e))}function S(e){e&&e.dispatchConfig.registrationName&&_(e._targetInst,null,e)}function T(e){d(e,k)}function E(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n[\"Webkit\"+e]=\"webkit\"+t,n[\"Moz\"+e]=\"moz\"+t,n}function P(e){if(Ao[e])return Ao[e];if(!Fo[e])return e;var t,n=Fo[e];for(t in n)if(n.hasOwnProperty(t)&&t in No)return Ao[e]=n[t];return e}function C(){if(zo)return zo;var e,t,n=Uo,r=n.length,o=\"value\"in Do?Do.value:Do.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return zo=o.slice(e,1<t?1-t:void 0)}function O(){return!0}function F(){return!1}function A(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface;for(var o in e)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):\"target\"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?O:F,this.isPropagationStopped=F,this}function N(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function j(e){e instanceof this||o(\"279\"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function M(e){e.eventPool=[],e.getPooled=N,e.release=j}function I(e,t){switch(e){case\"keyup\":return-1!==Vo.indexOf(t.keyCode);case\"keydown\":return 229!==t.keyCode;case\"keypress\":case\"mousedown\":case\"blur\":return!0;default:return!1}}function R(e){return e=e.detail,\"object\"===typeof e&&\"data\"in e?e.data:null}function L(e,t){switch(e){case\"compositionend\":return R(t);case\"keypress\":return 32!==t.which?null:(Yo=!0,Qo);case\"textInput\":return e=t.data,e===Qo&&Yo?null:e;default:return null}}function D(e,t){if(Xo)return\"compositionend\"===e||!Ho&&I(e,t)?(e=C(),zo=Uo=Do=null,Xo=!1,e):null;switch(e){case\"paste\":return null;case\"keypress\":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case\"compositionend\":return Go&&\"ko\"!==t.locale?null:t.data;default:return null}}function U(e){if(e=ko(e)){\"function\"!==typeof Jo&&o(\"280\");var t=xo(e.stateNode);Jo(e.stateNode,e.type,t)}}function z(e){ei?ti?ti.push(e):ti=[e]:ei=e}function B(){if(ei){var e=ei,t=ti;if(ti=ei=null,U(e),t)for(e=0;e<t.length;e++)U(t[e])}}function W(e,t){return e(t)}function V(e,t,n){return e(t,n)}function H(){}function q(e,t){if(ni)return e(t);ni=!0;try{return W(e,t)}finally{ni=!1,(null!==ei||null!==ti)&&(H(),B())}}function $(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return\"input\"===t?!!ri[e.type]:\"textarea\"===t}function G(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Q(e){if(!Oo)return!1;e=\"on\"+e;var t=e in document;return t||(t=document.createElement(\"div\"),t.setAttribute(e,\"return;\"),t=\"function\"===typeof t[e]),t}function K(e){var t=e.type;return(e=e.nodeName)&&\"input\"===e.toLowerCase()&&(\"checkbox\"===t||\"radio\"===t)}function Y(e){var t=K(e)?\"checked\":\"value\",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=\"\"+e[t];if(!e.hasOwnProperty(t)&&\"undefined\"!==typeof n&&\"function\"===typeof n.get&&\"function\"===typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=\"\"+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=\"\"+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function X(e){e._valueTracker||(e._valueTracker=Y(e))}function Z(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r=\"\";return e&&(r=K(e)?e.checked?\"true\":\"false\":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){return null===e||\"object\"!==typeof e?null:(e=bi&&e[bi]||e[\"@@iterator\"],\"function\"===typeof e?e:null)}function ee(e){if(null==e)return null;if(\"function\"===typeof e)return e.displayName||e.name||null;if(\"string\"===typeof e)return e;switch(e){case mi:return\"ConcurrentMode\";case ci:return\"Fragment\";case li:return\"Portal\";case fi:return\"Profiler\";case si:return\"StrictMode\";case yi:return\"Suspense\"}if(\"object\"===typeof e)switch(e.$$typeof){case pi:return\"Context.Consumer\";case di:return\"Context.Provider\";case hi:var t=e.render;return t=t.displayName||t.name||\"\",e.displayName||(\"\"!==t?\"ForwardRef(\"+t+\")\":\"ForwardRef\");case vi:return ee(e.type);case gi:if(e=1===e._status?e._result:null)return ee(e)}return null}function te(e){var t=\"\";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n=\"\";break e;default:var r=e._debugOwner,o=e._debugSource,i=ee(e.type);n=null,r&&(n=ee(r.type)),r=i,i=\"\",o?i=\" (at \"+o.fileName.replace(ii,\"\")+\":\"+o.lineNumber+\")\":n&&(i=\" (created by \"+n+\")\"),n=\"\\n    in \"+(r||\"Unknown\")+i}t+=n,e=e.return}while(e);return t}function ne(e){return!!xi.call(_i,e)||!xi.call(ki,e)&&(wi.test(e)?_i[e]=!0:(ki[e]=!0,!1))}function re(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case\"function\":case\"symbol\":return!0;case\"boolean\":return!r&&(null!==n?!n.acceptsBooleans:\"data-\"!==(e=e.toLowerCase().slice(0,5))&&\"aria-\"!==e);default:return!1}}function oe(e,t,n,r){if(null===t||\"undefined\"===typeof t||re(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function ie(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}function ae(e){return e[1].toUpperCase()}function ue(e,t,n,r){var o=Si.hasOwnProperty(t)?Si[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&(\"o\"===t[0]||\"O\"===t[0])&&(\"n\"===t[1]||\"N\"===t[1])))||(oe(t,n,o,r)&&(n=null),r||null===o?ne(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,\"\"+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&\"\":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(o=o.type,n=3===o||4===o&&!0===n?\"\":\"\"+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function le(e){switch(typeof e){case\"boolean\":case\"number\":case\"object\":case\"string\":case\"undefined\":return e;default:return\"\"}}function ce(e,t){var n=t.checked;return uo({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function se(e,t){var n=null==t.defaultValue?\"\":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=le(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:\"checkbox\"===t.type||\"radio\"===t.type?null!=t.checked:null!=t.value}}function fe(e,t){null!=(t=t.checked)&&ue(e,\"checked\",t,!1)}function de(e,t){fe(e,t);var n=le(t.value),r=t.type;if(null!=n)\"number\"===r?(0===n&&\"\"===e.value||e.value!=n)&&(e.value=\"\"+n):e.value!==\"\"+n&&(e.value=\"\"+n);else if(\"submit\"===r||\"reset\"===r)return void e.removeAttribute(\"value\");t.hasOwnProperty(\"value\")?me(e,t.type,n):t.hasOwnProperty(\"defaultValue\")&&me(e,t.type,le(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function pe(e,t,n){if(t.hasOwnProperty(\"value\")||t.hasOwnProperty(\"defaultValue\")){var r=t.type;if(!(\"submit\"!==r&&\"reset\"!==r||void 0!==t.value&&null!==t.value))return;t=\"\"+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,\"\"!==n&&(e.name=\"\"),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,\"\"!==n&&(e.name=n)}function me(e,t,n){\"number\"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=\"\"+e._wrapperState.initialValue:e.defaultValue!==\"\"+n&&(e.defaultValue=\"\"+n))}function he(e,t,n){return e=A.getPooled(Ei.change,e,t,n),e.type=\"change\",z(n),T(e),e}function ye(e){h(e)}function ve(e){if(Z(g(e)))return e}function ge(e,t){if(\"change\"===e)return t}function be(){Pi&&(Pi.detachEvent(\"onpropertychange\",we),Ci=Pi=null)}function we(e){\"value\"===e.propertyName&&ve(Ci)&&(e=he(Ci,e,G(e)),q(ye,e))}function xe(e,t,n){\"focus\"===e?(be(),Pi=t,Ci=n,Pi.attachEvent(\"onpropertychange\",we)):\"blur\"===e&&be()}function ke(e){if(\"selectionchange\"===e||\"keyup\"===e||\"keydown\"===e)return ve(Ci)}function _e(e,t){if(\"click\"===e)return ve(t)}function Se(e,t){if(\"input\"===e||\"change\"===e)return ve(t)}function Te(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ni[e])&&!!t[e]}function Ee(){return Te}function Pe(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t}function Ce(e,t){if(Pe(e,t))return!0;if(\"object\"!==typeof e||null===e||\"object\"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Bi.call(t,n[r])||!Pe(e[n[r]],t[n[r]]))return!1;return!0}function Oe(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!==(2&t.effectTag))return 1;for(;t.return;)if(t=t.return,0!==(2&t.effectTag))return 1}return 3===t.tag?2:3}function Fe(e){2!==Oe(e)&&o(\"188\")}function Ae(e){var t=e.alternate;if(!t)return t=Oe(e),3===t&&o(\"188\"),1===t?null:e;for(var n=e,r=t;;){var i=n.return,a=i?i.alternate:null;if(!i||!a)break;if(i.child===a.child){for(var u=i.child;u;){if(u===n)return Fe(i),e;if(u===r)return Fe(i),t;u=u.sibling}o(\"188\")}if(n.return!==r.return)n=i,r=a;else{u=!1;for(var l=i.child;l;){if(l===n){u=!0,n=i,r=a;break}if(l===r){u=!0,r=i,n=a;break}l=l.sibling}if(!u){for(l=a.child;l;){if(l===n){u=!0,n=a,r=i;break}if(l===r){u=!0,r=a,n=i;break}l=l.sibling}u||o(\"189\")}}n.alternate!==r&&o(\"190\")}return 3!==n.tag&&o(\"188\"),n.stateNode.current===n?e:t}function Ne(e){if(!(e=Ae(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function je(e){var t=e.keyCode;return\"charCode\"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function Me(e,t){var n=e[0];e=e[1];var r=\"on\"+(e[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+\"Capture\"},dependencies:[n],isInteractive:t},Ji[e]=t,ea[n]=t}function Ie(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=y(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=G(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,u=0;u<vo.length;u++){var l=vo[u];l&&(l=l.extractEvents(r,t,i,o))&&(a=f(a,l))}h(a)}}function Re(e,t){if(!t)return null;var n=(na(e)?De:Ue).bind(null,e);t.addEventListener(e,n,!1)}function Le(e,t){if(!t)return null;var n=(na(e)?De:Ue).bind(null,e);t.addEventListener(e,n,!0)}function De(e,t){V(Ue,e,t)}function Ue(e,t){if(oa){var n=G(t);if(n=y(n),null===n||\"number\"!==typeof n.tag||2===Oe(n)||(n=null),ra.length){var r=ra.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{q(Ie,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ra.length&&ra.push(e)}}}function ze(e){return Object.prototype.hasOwnProperty.call(e,ua)||(e[ua]=aa++,ia[e[ua]]={}),ia[e[ua]]}function Be(e){if(\"undefined\"===typeof(e=e||(\"undefined\"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function We(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ve(e,t){var n=We(e);e=0;for(var r;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=We(n)}}function He(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?He(e,t.parentNode):\"contains\"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function qe(){for(var e=window,t=Be();t instanceof e.HTMLIFrameElement;){try{var n=\"string\"===typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;e=t.contentWindow,t=Be(e.document)}return t}function $e(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(\"input\"===t&&(\"text\"===e.type||\"search\"===e.type||\"tel\"===e.type||\"url\"===e.type||\"password\"===e.type)||\"textarea\"===t||\"true\"===e.contentEditable)}function Ge(){var e=qe();if($e(e)){if(\"selectionStart\"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{t=(t=e.ownerDocument)&&t.defaultView||window;var n=t.getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,u=-1,l=0,c=0,s=e,f=null;t:for(;;){for(var d;s!==t||0!==r&&3!==s.nodeType||(a=i+r),s!==o||0!==n&&3!==s.nodeType||(u=i+n),3===s.nodeType&&(i+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break t;if(f===t&&++l===r&&(a=i),f===o&&++c===n&&(u=i),null!==(d=s.nextSibling))break;s=f,f=s.parentNode}s=d}t=-1===a||-1===u?null:{start:a,end:u}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}function Qe(e){var t=qe(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&He(n.ownerDocument.documentElement,n)){if(null!==r&&$e(n))if(t=r.start,e=r.end,void 0===e&&(e=t),\"selectionStart\"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=Ve(n,i);var a=Ve(n,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&(t=t.createRange(),t.setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(\"function\"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}function Ke(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return pa||null==sa||sa!==Be(n)?null:(n=sa,\"selectionStart\"in n&&$e(n)?n={start:n.selectionStart,end:n.selectionEnd}:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}),da&&Ce(da,n)?null:(da=n,e=A.getPooled(ca.select,fa,e,t),e.type=\"select\",e.target=sa,T(e),e))}function Ye(e){var t=\"\";return ao.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}function Xe(e,t){return e=uo({children:void 0},t),(t=Ye(t.children))&&(e.children=t),e}function Ze(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t[\"$\"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty(\"$\"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=\"\"+le(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Je(e,t){return null!=t.dangerouslySetInnerHTML&&o(\"91\"),uo({},t,{value:void 0,defaultValue:void 0,children:\"\"+e._wrapperState.initialValue})}function et(e,t){var n=t.value;null==n&&(n=t.defaultValue,t=t.children,null!=t&&(null!=n&&o(\"92\"),Array.isArray(t)&&(1>=t.length||o(\"93\"),t=t[0]),n=t),null==n&&(n=\"\")),e._wrapperState={initialValue:le(n)}}function tt(e,t){var n=le(t.value),r=le(t.defaultValue);null!=n&&(n=\"\"+n,n!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=\"\"+r)}function nt(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}function rt(e){switch(e){case\"svg\":return\"http://www.w3.org/2000/svg\";case\"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function ot(e,t){return null==e||\"http://www.w3.org/1999/xhtml\"===e?rt(t):\"http://www.w3.org/2000/svg\"===e&&\"foreignObject\"===t?\"http://www.w3.org/1999/xhtml\":e}function it(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function at(e,t,n){return null==t||\"boolean\"===typeof t||\"\"===t?\"\":n||\"number\"!==typeof t||0===t||ga.hasOwnProperty(e)&&ga[e]?(\"\"+t).trim():t+\"px\"}function ut(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=0===n.indexOf(\"--\"),o=at(n,t[n],r);\"float\"===n&&(n=\"cssFloat\"),r?e.setProperty(n,o):e[n]=o}}function lt(e,t){t&&(wa[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&o(\"137\",e,\"\"),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&o(\"60\"),\"object\"===typeof t.dangerouslySetInnerHTML&&\"__html\"in t.dangerouslySetInnerHTML||o(\"61\")),null!=t.style&&\"object\"!==typeof t.style&&o(\"62\",\"\"))}function ct(e,t){if(-1===e.indexOf(\"-\"))return\"string\"===typeof t.is;switch(e){case\"annotation-xml\":case\"color-profile\":case\"font-face\":case\"font-face-src\":case\"font-face-uri\":case\"font-face-format\":case\"font-face-name\":case\"missing-glyph\":return!1;default:return!0}}function st(e,t){e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument;var n=ze(e);t=wo[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case\"scroll\":Le(\"scroll\",e);break;case\"focus\":case\"blur\":Le(\"focus\",e),Le(\"blur\",e),n.blur=!0,n.focus=!0;break;case\"cancel\":case\"close\":Q(o)&&Le(o,e);break;case\"invalid\":case\"submit\":case\"reset\":break;default:-1===Lo.indexOf(o)&&Re(o,e)}n[o]=!0}}}function ft(){}function dt(e,t){switch(e){case\"button\":case\"input\":case\"select\":case\"textarea\":return!!t.autoFocus}return!1}function pt(e,t){return\"textarea\"===e||\"option\"===e||\"noscript\"===e||\"string\"===typeof t.children||\"number\"===typeof t.children||\"object\"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}function mt(e,t,n,r,o){e[Co]=o,\"input\"===n&&\"radio\"===o.type&&null!=o.name&&fe(e,o),ct(n,r),r=ct(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],u=t[i+1];\"style\"===a?ut(e,u):\"dangerouslySetInnerHTML\"===a?va(e,u):\"children\"===a?it(e,u):ue(e,a,u,r)}switch(n){case\"input\":de(e,o);break;case\"textarea\":tt(e,o);break;case\"select\":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,n=o.value,null!=n?Ze(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Ze(e,!!o.multiple,o.defaultValue,!0):Ze(e,!!o.multiple,o.multiple?[]:\"\",!1))}}function ht(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function yt(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function vt(e){0>Ca||(e.current=Pa[Ca],Pa[Ca]=null,Ca--)}function gt(e,t){Ca++,Pa[Ca]=e.current,e.current=t}function bt(e,t){var n=e.type.contextTypes;if(!n)return Oa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function wt(e){return null!==(e=e.childContextTypes)&&void 0!==e}function xt(e){vt(Aa,e),vt(Fa,e)}function kt(e){vt(Aa,e),vt(Fa,e)}function _t(e,t,n){Fa.current!==Oa&&o(\"168\"),gt(Fa,t,e),gt(Aa,n,e)}function St(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,\"function\"!==typeof r.getChildContext)return n;r=r.getChildContext();for(var i in r)i in e||o(\"108\",ee(t)||\"Unknown\",i);return uo({},n,r)}function Tt(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Oa,Na=Fa.current,gt(Fa,t,e),gt(Aa,Aa.current,e),!0}function Et(e,t,n){var r=e.stateNode;r||o(\"169\"),n?(t=St(e,t,Na),r.__reactInternalMemoizedMergedChildContext=t,vt(Aa,e),vt(Fa,e),gt(Fa,t,e)):vt(Aa,e),gt(Aa,n,e)}function Pt(e){return function(t){try{return e(t)}catch(e){}}}function Ct(e){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ja=Pt(function(e){return t.onCommitFiberRoot(n,e)}),Ma=Pt(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}function Ot(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Ft(e,t,n,r){return new Ot(e,t,n,r)}function At(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Nt(e){if(\"function\"===typeof e)return At(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===hi)return 11;if(e===vi)return 14}return 2}function jt(e,t){var n=e.alternate;return null===n?(n=Ft(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Mt(e,t,n,r,i,a){var u=2;if(r=e,\"function\"===typeof e)At(e)&&(u=1);else if(\"string\"===typeof e)u=5;else e:switch(e){case ci:return It(n.children,i,a,t);case mi:return Rt(n,3|i,a,t);case si:return Rt(n,2|i,a,t);case fi:return e=Ft(12,n,t,4|i),e.elementType=fi,e.type=fi,e.expirationTime=a,e;case yi:return e=Ft(13,n,t,i),e.elementType=yi,e.type=yi,e.expirationTime=a,e;default:if(\"object\"===typeof e&&null!==e)switch(e.$$typeof){case di:u=10;break e;case pi:u=9;break e;case hi:u=11;break e;case vi:u=14;break e;case gi:u=16,r=null;break e}o(\"130\",null==e?e:typeof e,\"\")}return t=Ft(u,n,t,i),t.elementType=e,t.type=r,t.expirationTime=a,t}function It(e,t,n,r){return e=Ft(7,e,r,t),e.expirationTime=n,e}function Rt(e,t,n,r){return e=Ft(8,e,r,t),t=0===(1&t)?si:mi,e.elementType=t,e.type=t,e.expirationTime=n,e}function Lt(e,t,n){return e=Ft(6,e,null,t),e.expirationTime=n,e}function Dt(e,t,n){return t=Ft(4,null!==e.children?e.children:[],e.key,t),t.expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ut(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Vt(t,e)}function zt(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),n=e.earliestSuspendedTime,0===n?Ut(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Ut(e,t)):t>n&&Ut(e,t)}Vt(0,e)}function Bt(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Vt(t,e)}function Wt(e,t){var n=e.earliestPendingTime;return e=e.earliestSuspendedTime,n>t&&(t=n),e>t&&(t=e),t}function Vt(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;o=0!==o?o:i,0===o&&(0===e||r<e)&&(o=r),e=o,0!==e&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function Ht(e,t){if(e&&e.defaultProps){t=uo({},t),e=e.defaultProps;for(var n in e)void 0===t[n]&&(t[n]=e[n])}return t}function qt(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,t=e._ctor,t=t(),t.then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}function $t(e,t,n,r){t=e.memoizedState,n=n(r,t),n=null===n||void 0===n?t:uo({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}function Gt(e,t,n,r,o,i,a){return e=e.stateNode,\"function\"===typeof e.shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Ce(n,r)||!Ce(o,i))}function Qt(e,t,n){var r=!1,o=Oa,i=t.contextType;return\"object\"===typeof i&&null!==i?i=Bn(i):(o=wt(t)?Na:Fa.current,r=t.contextTypes,i=(r=null!==r&&void 0!==r)?bt(e,o):Oa),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ra,e.stateNode=t,t._reactInternalFiber=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Kt(e,t,n,r){e=t.state,\"function\"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),\"function\"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ra.enqueueReplaceState(t,t.state,null)}function Yt(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Ia;var i=t.contextType;\"object\"===typeof i&&null!==i?o.context=Bn(i):(i=wt(t)?Na:Fa.current,o.context=bt(e,i)),i=e.updateQueue,null!==i&&(Yn(e,i,n,o,r),o.state=e.memoizedState),i=t.getDerivedStateFromProps,\"function\"===typeof i&&($t(e,t,i,n),o.state=e.memoizedState),\"function\"===typeof t.getDerivedStateFromProps||\"function\"===typeof o.getSnapshotBeforeUpdate||\"function\"!==typeof o.UNSAFE_componentWillMount&&\"function\"!==typeof o.componentWillMount||(t=o.state,\"function\"===typeof o.componentWillMount&&o.componentWillMount(),\"function\"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Ra.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(Yn(e,i,n,o,r),o.state=e.memoizedState)),\"function\"===typeof o.componentDidMount&&(e.effectTag|=4)}function Xt(e,t,n){if(null!==(e=n.ref)&&\"function\"!==typeof e&&\"object\"!==typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&o(\"309\"),r=n.stateNode),r||o(\"147\",e);var i=\"\"+e;return null!==t&&null!==t.ref&&\"function\"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=r.refs;t===Ia&&(t=r.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}\"string\"!==typeof e&&o(\"284\"),n._owner||o(\"290\",e)}return e}function Zt(e,t){\"textarea\"!==e.type&&o(\"31\",\"[object Object]\"===Object.prototype.toString.call(t)?\"object with keys {\"+Object.keys(t).join(\", \")+\"}\":t,\"\")}function Jt(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t,n){return e=jt(e,t,n),e.index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index,r<n?(t.effectTag=2,n):r):(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?(t=Lt(n,e.mode,r),t.return=e,t):(t=i(t,n,r),t.return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?(r=i(t,n.props,r),r.ref=Xt(e,t,n),r.return=e,r):(r=Mt(n.type,n.key,n.props,null,e.mode,r),r.ref=Xt(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?(t=Dt(n,e.mode,r),t.return=e,t):(t=i(t,n.children||[],r),t.return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?(t=It(n,e.mode,r,o),t.return=e,t):(t=i(t,n,r),t.return=e,t)}function d(e,t,n){if(\"string\"===typeof t||\"number\"===typeof t)return t=Lt(\"\"+t,e.mode,n),t.return=e,t;if(\"object\"===typeof t&&null!==t){switch(t.$$typeof){case ui:return n=Mt(t.type,t.key,t.props,null,e.mode,n),n.ref=Xt(e,null,t),n.return=e,n;case li:return t=Dt(t,e.mode,n),t.return=e,t}if(La(t)||J(t))return t=It(t,e.mode,n,null),t.return=e,t;Zt(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if(\"string\"===typeof n||\"number\"===typeof n)return null!==o?null:l(e,t,\"\"+n,r);if(\"object\"===typeof n&&null!==n){switch(n.$$typeof){case ui:return n.key===o?n.type===ci?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case li:return n.key===o?s(e,t,n,r):null}if(La(n)||J(n))return null!==o?null:f(e,t,n,r,null);Zt(e,n)}return null}function m(e,t,n,r,o){if(\"string\"===typeof r||\"number\"===typeof r)return e=e.get(n)||null,l(t,e,\"\"+r,o);if(\"object\"===typeof r&&null!==r){switch(r.$$typeof){case ui:return e=e.get(null===r.key?n:r.key)||null,r.type===ci?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case li:return e=e.get(null===r.key?n:r.key)||null,s(t,e,r,o)}if(La(r)||J(r))return e=e.get(n)||null,f(t,e,r,o,null);Zt(t,r)}return null}function h(o,i,u,l){for(var c=null,s=null,f=i,h=i=0,y=null;null!==f&&h<u.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var v=p(o,f,u[h],l);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),i=a(v,i,h),null===s?c=v:s.sibling=v,s=v,f=y}if(h===u.length)return n(o,f),c;if(null===f){for(;h<u.length;h++)(f=d(o,u[h],l))&&(i=a(f,i,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<u.length;h++)(y=m(f,o,h,u[h],l))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),i=a(y,i,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach(function(e){return t(o,e)}),c}function y(i,u,l,c){var s=J(l);\"function\"!==typeof s&&o(\"150\"),null==(l=s.call(l))&&o(\"151\");for(var f=s=null,h=u,y=u=0,v=null,g=l.next();null!==h&&!g.done;y++,g=l.next()){h.index>y?(v=h,h=null):v=h.sibling;var b=p(i,h,g.value,c);if(null===b){h||(h=v);break}e&&h&&null===b.alternate&&t(i,h),u=a(b,u,y),null===f?s=b:f.sibling=b,f=b,h=v}if(g.done)return n(i,h),s;if(null===h){for(;!g.done;y++,g=l.next())null!==(g=d(i,g.value,c))&&(u=a(g,u,y),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(i,h);!g.done;y++,g=l.next())null!==(g=m(h,i,y,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?y:g.key),u=a(g,u,y),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach(function(e){return t(i,e)}),s}return function(e,r,a,l){var c=\"object\"===typeof a&&null!==a&&a.type===ci&&null===a.key;c&&(a=a.props.children);var s=\"object\"===typeof a&&null!==a;if(s)switch(a.$$typeof){case ui:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?a.type===ci:c.elementType===a.type){n(e,c.sibling),r=i(c,a.type===ci?a.props.children:a.props,l),r.ref=Xt(e,c,a),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===ci?(r=It(a.props.children,e.mode,l,a.key),r.return=e,e=r):(l=Mt(a.type,a.key,a.props,null,e.mode,l),l.ref=Xt(e,r,a),l.return=e,e=l)}return u(e);case li:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),r=i(r,a.children||[],l),r.return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}r=Dt(a,e.mode,l),r.return=e,e=r}return u(e)}if(\"string\"===typeof a||\"number\"===typeof a)return a=\"\"+a,null!==r&&6===r.tag?(n(e,r.sibling),r=i(r,a,l),r.return=e,e=r):(n(e,r),r=Lt(a,e.mode,l),r.return=e,e=r),u(e);if(La(a))return h(e,r,a,l);if(J(a))return y(e,r,a,l);if(s&&Zt(e,a),\"undefined\"===typeof a&&!c)switch(e.tag){case 1:case 0:l=e.type,o(\"152\",l.displayName||l.name||\"Component\")}return n(e,r)}}function en(e){return e===za&&o(\"174\"),e}function tn(e,t){gt(Va,t,e),gt(Wa,e,e),gt(Ba,za,e);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ot(null,\"\");break;default:n=8===n?t.parentNode:t,t=n.namespaceURI||null,n=n.tagName,t=ot(t,n)}vt(Ba,e),gt(Ba,t,e)}function nn(e){vt(Ba,e),vt(Wa,e),vt(Va,e)}function rn(e){en(Va.current);var t=en(Ba.current),n=ot(t,e.type);t!==n&&(gt(Wa,e,e),gt(Ba,n,e))}function on(e){Wa.current===e&&(vt(Ba,e),vt(Wa,e))}function an(){o(\"321\")}function un(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Pe(e[n],t[n]))return!1;return!0}function ln(e,t,n,r,i,a){if(Ja=a,eu=t,nu=null!==e?e.memoizedState:null,Za.current=null===nu?pu:mu,t=n(r,i),cu){do{cu=!1,fu+=1,nu=null!==e?e.memoizedState:null,iu=ru,uu=ou=tu=null,Za.current=mu,t=n(r,i)}while(cu);su=null,fu=0}return Za.current=du,e=eu,e.memoizedState=ru,e.expirationTime=au,e.updateQueue=uu,e.effectTag|=lu,e=null!==tu&&null!==tu.next,Ja=0,iu=ou=ru=nu=tu=eu=null,au=0,uu=null,lu=0,e&&o(\"300\"),t}function cn(){Za.current=du,Ja=0,iu=ou=ru=nu=tu=eu=null,au=0,uu=null,lu=0,cu=!1,su=null,fu=0}function sn(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ou?ru=ou=e:ou=ou.next=e,ou}function fn(){if(null!==iu)ou=iu,iu=ou.next,tu=nu,nu=null!==tu?tu.next:null;else{null===nu&&o(\"310\"),tu=nu;var e={memoizedState:tu.memoizedState,baseState:tu.baseState,queue:tu.queue,baseUpdate:tu.baseUpdate,next:null};ou=null===ou?ru=e:ou.next=e,nu=tu.next}return ou}function dn(e,t){return\"function\"===typeof t?t(e):t}function pn(e){var t=fn(),n=t.queue;if(null===n&&o(\"311\"),n.lastRenderedReducer=e,0<fu){var r=n.dispatch;if(null!==su){var i=su.get(n);if(void 0!==i){su.delete(n);var a=t.memoizedState;do{a=e(a,i.action),i=i.next}while(null!==i);return Pe(a,t.memoizedState)||(bu=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.lastRenderedState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var u=t.baseUpdate;if(a=t.baseState,null!==u?(null!==r&&(r.next=null),r=u.next):r=null!==r?r.next:null,null!==r){var l=i=null,c=r,s=!1;do{var f=c.expirationTime;f<Ja?(s||(s=!0,l=u,i=a),f>au&&(au=f)):a=c.eagerReducer===e?c.eagerState:e(a,c.action),u=c,c=c.next}while(null!==c&&c!==r);s||(l=u,i=a),Pe(a,t.memoizedState)||(bu=!0),t.memoizedState=a,t.baseUpdate=l,t.baseState=i,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function mn(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===uu?(uu={lastEffect:null},uu.lastEffect=e.next=e):(t=uu.lastEffect,null===t?uu.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,uu.lastEffect=e)),e}function hn(e,t,n,r){var o=sn();lu|=e,o.memoizedState=mn(t,n,void 0,void 0===r?null:r)}function yn(e,t,n,r){var o=fn();r=void 0===r?null:r;var i=void 0;if(null!==tu){var a=tu.memoizedState;if(i=a.destroy,null!==r&&un(r,a.deps))return void mn(Ha,n,i,r)}lu|=e,o.memoizedState=mn(t,n,i,r)}function vn(e,t){return\"function\"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function gn(){}function bn(e,t,n){25>fu||o(\"301\");var r=e.alternate;if(e===eu||null!==r&&r===eu)if(cu=!0,e={expirationTime:Ja,action:n,eagerReducer:null,eagerState:null,next:null},null===su&&(su=new Map),void 0===(n=su.get(t)))su.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{gr();var i=Ir();i=Sr(i,e);var a={expirationTime:i,action:n,eagerReducer:null,eagerState:null,next:null},u=t.last;if(null===u)a.next=a;else{var l=u.next;null!==l&&(a.next=l),u.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(a.eagerReducer=r,a.eagerState=s,Pe(s,c))return}catch(e){}Cr(e,i)}}function wn(e,t){var n=Ft(5,null,null,0);n.elementType=\"DELETED\",n.type=\"DELETED\",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function xn(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=\"\"===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function kn(e){if(vu){var t=yu;if(t){var n=t;if(!xn(e,t)){if(!(t=ht(n))||!xn(e,t))return e.effectTag|=2,vu=!1,void(hu=e);wn(hu,n)}hu=e,yu=yt(t)}else e.effectTag|=2,vu=!1,hu=e}}function _n(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;hu=e}function Sn(e){if(e!==hu)return!1;if(!vu)return _n(e),vu=!0,!1;var t=e.type;if(5!==e.tag||\"head\"!==t&&\"body\"!==t&&!pt(t,e.memoizedProps))for(t=yu;t;)wn(e,t),t=ht(t);return _n(e),yu=hu?ht(e.stateNode):null,!0}function Tn(){yu=hu=null,vu=!1}function En(e,t,n,r){t.child=null===e?Ua(t,null,n,r):Da(t,e.child,n,r)}function Pn(e,t,n,r,o){n=n.render;var i=t.ref;return zn(t,o),r=ln(e,t,n,r,i,o),null===e||bu?(t.effectTag|=1,En(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Rn(e,t,o))}function Cn(e,t,n,r,o,i){if(null===e){var a=n.type;return\"function\"!==typeof a||At(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?(e=Mt(n.type,null,r,null,t.mode,i),e.ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,On(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,n=n.compare,(n=null!==n?n:Ce)(o,r)&&e.ref===t.ref)?Rn(e,t,i):(t.effectTag|=1,e=jt(a,r,i),e.ref=t.ref,e.return=t,t.child=e)}function On(e,t,n,r,o,i){return null!==e&&Ce(e.memoizedProps,r)&&e.ref===t.ref&&(bu=!1,o<i)?Rn(e,t,i):An(e,t,n,r,i)}function Fn(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function An(e,t,n,r,o){var i=wt(n)?Na:Fa.current;return i=bt(t,i),zn(t,o),n=ln(e,t,n,r,i,o),null===e||bu?(t.effectTag|=1,En(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Rn(e,t,o))}function Nn(e,t,n,r,o){if(wt(n)){var i=!0;Tt(t)}else i=!1;if(zn(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Qt(t,n,r,o),Yt(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var l=a.context,c=n.contextType;\"object\"===typeof c&&null!==c?c=Bn(c):(c=wt(n)?Na:Fa.current,c=bt(t,c));var s=n.getDerivedStateFromProps,f=\"function\"===typeof s||\"function\"===typeof a.getSnapshotBeforeUpdate;f||\"function\"!==typeof a.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof a.componentWillReceiveProps||(u!==r||l!==c)&&Kt(t,a,r,c),Cu=!1;var d=t.memoizedState;l=a.state=d;var p=t.updateQueue;null!==p&&(Yn(t,p,r,a,o),l=t.memoizedState),u!==r||d!==l||Aa.current||Cu?(\"function\"===typeof s&&($t(t,n,s,r),l=t.memoizedState),(u=Cu||Gt(t,n,u,r,d,l,c))?(f||\"function\"!==typeof a.UNSAFE_componentWillMount&&\"function\"!==typeof a.componentWillMount||(\"function\"===typeof a.componentWillMount&&a.componentWillMount(),\"function\"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),\"function\"===typeof a.componentDidMount&&(t.effectTag|=4)):(\"function\"===typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=c,r=u):(\"function\"===typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,u=t.memoizedProps,a.props=t.type===t.elementType?u:Ht(t.type,u),l=a.context,c=n.contextType,\"object\"===typeof c&&null!==c?c=Bn(c):(c=wt(n)?Na:Fa.current,c=bt(t,c)),s=n.getDerivedStateFromProps,(f=\"function\"===typeof s||\"function\"===typeof a.getSnapshotBeforeUpdate)||\"function\"!==typeof a.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof a.componentWillReceiveProps||(u!==r||l!==c)&&Kt(t,a,r,c),Cu=!1,l=t.memoizedState,d=a.state=l,p=t.updateQueue,null!==p&&(Yn(t,p,r,a,o),d=t.memoizedState),u!==r||l!==d||Aa.current||Cu?(\"function\"===typeof s&&($t(t,n,s,r),d=t.memoizedState),(s=Cu||Gt(t,n,u,r,l,d,c))?(f||\"function\"!==typeof a.UNSAFE_componentWillUpdate&&\"function\"!==typeof a.componentWillUpdate||(\"function\"===typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),\"function\"===typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),\"function\"===typeof a.componentDidUpdate&&(t.effectTag|=4),\"function\"===typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):(\"function\"!==typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),\"function\"!==typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):(\"function\"!==typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),\"function\"!==typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return jn(e,t,n,r,i,o)}function jn(e,t,n,r,o,i){Fn(e,t);var a=0!==(64&t.effectTag);if(!r&&!a)return o&&Et(t,n,!1),Rn(e,t,i);r=t.stateNode,gu.current=t;var u=a&&\"function\"!==typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Da(t,e.child,null,i),t.child=Da(t,null,u,i)):En(e,t,u,i),t.memoizedState=r.state,o&&Et(t,n,!0),t.child}function Mn(e){var t=e.stateNode;t.pendingContext?_t(e,t.pendingContext,t.pendingContext!==t.context):t.context&&_t(e,t.context,!1),tn(e,t.containerInfo)}function In(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0===(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var u=o.fallback;e=It(null,r,0,null),0===(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=It(u,r,n,null),e.sibling=r,n=e,n.return=r.return=t}else n=r=Ua(t,null,o.children,n);else null!==e.memoizedState?(r=e.child,u=r.sibling,a?(n=o.fallback,o=jt(r,r.pendingProps,0),0===(1&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a),r=o.sibling=jt(u,n,u.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=Da(t,r.child,o.children,n)):(u=e.child,a?(a=o.fallback,o=It(null,r,0,null),o.child=u,0===(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),r=o.sibling=It(a,r,n,null),r.effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=Da(t,u,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function Rn(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&o(\"153\"),null!==t.child){for(e=t.child,n=jt(e,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,n=n.sibling=jt(e,e.pendingProps,e.expirationTime),n.return=t;n.sibling=null}return t.child}function Ln(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Aa.current)bu=!0;else if(r<n){switch(bu=!1,t.tag){case 3:Mn(t),Tn();break;case 5:rn(t);break;case 1:wt(t.type)&&Tt(t);break;case 4:tn(t,t.stateNode.containerInfo);break;case 10:Dn(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?In(e,t,n):(t=Rn(e,t,n),null!==t?t.sibling:null)}return Rn(e,t,n)}}else bu=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var i=bt(t,Fa.current);if(zn(t,n),i=ln(null,t,r,e,i,n),t.effectTag|=1,\"object\"===typeof i&&null!==i&&\"function\"===typeof i.render&&void 0===i.$$typeof){if(t.tag=1,cn(),wt(r)){var a=!0;Tt(t)}else a=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null;var u=r.getDerivedStateFromProps;\"function\"===typeof u&&$t(t,r,u,e),i.updater=Ra,t.stateNode=i,i._reactInternalFiber=t,Yt(t,r,e,n),t=jn(null,t,r,!0,a,n)}else t.tag=0,En(null,t,i,n),t=t.child;return t;case 16:switch(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),a=t.pendingProps,e=qt(i),t.type=e,i=t.tag=Nt(e),a=Ht(e,a),u=void 0,i){case 0:u=An(null,t,e,a,n);break;case 1:u=Nn(null,t,e,a,n);break;case 11:u=Pn(null,t,e,a,n);break;case 14:u=Cn(null,t,e,Ht(e.type,a),r,n);break;default:o(\"306\",e,\"\")}return u;case 0:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Ht(r,i),An(e,t,r,i,n);case 1:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Ht(r,i),Nn(e,t,r,i,n);case 3:return Mn(t),r=t.updateQueue,null===r&&o(\"282\"),i=t.memoizedState,i=null!==i?i.element:null,Yn(t,r,t.pendingProps,null,n),r=t.memoizedState.element,r===i?(Tn(),t=Rn(e,t,n)):(i=t.stateNode,(i=(null===e||null===e.child)&&i.hydrate)&&(yu=yt(t.stateNode.containerInfo),hu=t,i=vu=!0),i?(t.effectTag|=2,t.child=Ua(t,null,r,n)):(En(e,t,r,n),Tn()),t=t.child),t;case 5:return rn(t),null===e&&kn(t),r=t.type,i=t.pendingProps,a=null!==e?e.memoizedProps:null,u=i.children,pt(r,i)?u=null:null!==a&&pt(r,a)&&(t.effectTag|=16),Fn(e,t),1!==n&&1&t.mode&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(En(e,t,u,n),t=t.child),t;case 6:return null===e&&kn(t),null;case 13:return In(e,t,n);case 4:return tn(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Da(t,null,r,n):En(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Ht(r,i),Pn(e,t,r,i,n);case 7:return En(e,t,t.pendingProps,n),t.child;case 8:case 12:return En(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,u=t.memoizedProps,a=i.value,Dn(t,a),null!==u){var l=u.value;if(0===(a=Pe(l,a)?0:0|(\"function\"===typeof r._calculateChangedBits?r._calculateChangedBits(l,a):1073741823))){if(u.children===i.children&&!Aa.current){t=Rn(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.contextDependencies;if(null!==c){u=l.child;for(var s=c.first;null!==s;){if(s.context===r&&0!==(s.observedBits&a)){1===l.tag&&(s=Hn(n),s.tag=Eu,$n(l,s)),l.expirationTime<n&&(l.expirationTime=n),s=l.alternate,null!==s&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=l.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else u=10===l.tag&&l.type===t.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}}En(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,a=t.pendingProps,r=a.children,zn(t,n),i=Bn(i,a.unstable_observedBits),r=r(i),t.effectTag|=1,En(e,t,r,n),t.child;case 14:return i=t.type,a=Ht(i,t.pendingProps),a=Ht(i.type,a),Cn(e,t,i,a,r,n);case 15:return On(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Ht(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,wt(r)?(e=!0,Tt(t)):e=!1,zn(t,n),Qt(t,r,i,n),Yt(t,r,i,n),jn(null,t,r,!0,e,n)}o(\"156\")}function Dn(e,t){var n=e.type._context;gt(wu,n._currentValue,e),n._currentValue=t}function Un(e){var t=wu.current;vt(wu,e),e.type._context._currentValue=t}function zn(e,t){xu=e,_u=ku=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(bu=!0),e.contextDependencies=null}function Bn(e,t){return _u!==e&&!1!==t&&0!==t&&(\"number\"===typeof t&&1073741823!==t||(_u=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ku?(null===xu&&o(\"308\"),ku=t,xu.contextDependencies={first:t,expirationTime:0}):ku=ku.next=t),e._currentValue}function Wn(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Vn(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Hn(e){return{expirationTime:e,tag:Su,payload:null,callback:null,next:null,nextEffect:null}}function qn(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function $n(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Wn(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Wn(e.memoizedState),o=n.updateQueue=Wn(n.memoizedState)):r=e.updateQueue=Vn(o):null===o&&(o=n.updateQueue=Vn(r));null===o||r===o?qn(r,t):null===r.lastUpdate||null===o.lastUpdate?(qn(r,t),qn(o,t)):(qn(r,t),o.lastUpdate=t)}function Gn(e,t){var n=e.updateQueue;n=null===n?e.updateQueue=Wn(e.memoizedState):Qn(e,n),null===n.lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Qn(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Vn(t)),t}function Kn(e,t,n,r,o,i){switch(n.tag){case Tu:return e=n.payload,\"function\"===typeof e?e.call(i,r,o):e;case Pu:e.effectTag=-2049&e.effectTag|64;case Su:if(e=n.payload,null===(o=\"function\"===typeof e?e.call(i,r,o):e)||void 0===o)break;return uo({},r,o);case Eu:Cu=!0}return r}function Yn(e,t,n,r,o){Cu=!1,t=Qn(e,t);for(var i=t.baseState,a=null,u=0,l=t.firstUpdate,c=i;null!==l;){var s=l.expirationTime;s<o?(null===a&&(a=l,i=c),u<s&&(u=s)):(c=Kn(e,t,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<o?(null===s&&(s=l,null===a&&(i=c)),u<f&&(u=f)):(c=Kn(e,t,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=u,e.memoizedState=c}function Xn(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),Zn(t.firstEffect,n),t.firstEffect=t.lastEffect=null,Zn(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function Zn(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;\"function\"!==typeof n&&o(\"191\",n),n.call(r)}e=e.nextEffect}}function Jn(e,t){return{value:e,source:t,stack:te(t)}}function er(e){e.effectTag|=4}function tr(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=te(n)),null!==n&&ee(n.type),t=t.value,null!==e&&1===e.tag&&ee(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function nr(e){var t=e.ref;if(null!==t)if(\"function\"===typeof t)try{t(null)}catch(t){_r(e,t)}else t.current=null}function rr(e,t,n){if(n=n.updateQueue,null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==Ha){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==Ha&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function or(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display=\"none\";else{r=n.stateNode;var o=n.memoizedProps.style;o=void 0!==o&&null!==o&&o.hasOwnProperty(\"display\")?o.display:null,r.style.display=at(\"display\",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?\"\":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){r=n.child.sibling,r.return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function ir(e){switch(\"function\"===typeof Ma&&Ma(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){_r(o,e)}}n=n.next}while(n!==t)}break;case 1:if(nr(e),t=e.stateNode,\"function\"===typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){_r(e,t)}break;case 5:nr(e);break;case 4:lr(e)}}function ar(e){return 5===e.tag||3===e.tag||4===e.tag}function ur(e){e:{for(var t=e.return;null!==t;){if(ar(t)){var n=t;break e}t=t.return}o(\"160\"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:o(\"161\")}16&n.effectTag&&(it(t,\"\"),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ar(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var i=e;;){if(5===i.tag||6===i.tag)if(n)if(r){var a=t,u=i.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(u,l):a.insertBefore(u,l)}else t.insertBefore(i.stateNode,n);else r?(u=t,l=i.stateNode,8===u.nodeType?(a=u.parentNode,a.insertBefore(l,u)):(a=u,a.appendChild(l)),null!==(u=u._reactRootContainer)&&void 0!==u||null!==a.onclick||(a.onclick=ft)):t.appendChild(i.stateNode);else if(4!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===e)break;for(;null===i.sibling;){if(null===i.return||i.return===e)return;i=i.return}i.sibling.return=i.return,i=i.sibling}}function lr(e){for(var t=e,n=!1,r=void 0,i=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&o(\"160\"),n.tag){case 5:r=n.stateNode,i=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,i=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,u=a;;)if(ir(u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===a)break;for(;null===u.sibling;){if(null===u.return||u.return===a)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}i?(a=r,u=t.stateNode,8===a.nodeType?a.parentNode.removeChild(u):a.removeChild(u)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,i=!0,t.child.return=t,t=t.child;continue}}else if(ir(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return,4===t.tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function cr(e,t){switch(t.tag){case 0:case 11:case 14:case 15:rr($a,Ga,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var i=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&mt(n,a,i,e,r,t)}break;case 6:null===t.stateNode&&o(\"162\"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Ir())),null!==e&&or(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var u=t.stateNode;null===u&&(u=t.stateNode=new ju),n.forEach(function(e){var n=Er.bind(null,t,e);u.has(e)||(u.add(e),e.then(n,n))})}break;case 17:break;default:o(\"163\")}}function sr(e,t,n){n=Hn(n),n.tag=Pu,n.payload={element:null};var r=t.value;return n.callback=function(){Hr(r),tr(e,t)},n}function fr(e,t,n){n=Hn(n),n.tag=Pu;var r=e.type.getDerivedStateFromError;if(\"function\"===typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&\"function\"===typeof i.componentDidCatch&&(n.callback=function(){\"function\"!==typeof r&&(null===Ku?Ku=new Set([this]):Ku.add(this));var n=t.value,o=t.stack;tr(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:\"\"})}),n}function dr(e){switch(e.tag){case 1:wt(e.type)&&xt(e);var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return nn(e),kt(e),t=e.effectTag,0!==(64&t)&&o(\"285\"),e.effectTag=-2049&t|64,e;case 5:return on(e),null;case 13:return t=e.effectTag,2048&t?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return nn(e),null;case 10:return Un(e),null;default:return null}}function pr(){if(null!==Uu)for(var e=Uu.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!==n&&void 0!==n&&xt(t);break;case 3:nn(t),kt(t);break;case 5:on(t);break;case 4:nn(t);break;case 10:Un(t)}e=e.return}zu=null,Bu=0,Wu=-1,Vu=!1,Uu=null}function mr(){for(;null!==Hu;){var e=Hu.effectTag;if(16&e&&it(Hu.stateNode,\"\"),128&e){var t=Hu.alternate;null!==t&&null!==(t=t.ref)&&(\"function\"===typeof t?t(null):t.current=null)}switch(14&e){case 2:ur(Hu),Hu.effectTag&=-3;break;case 6:ur(Hu),Hu.effectTag&=-3,cr(Hu.alternate,Hu);break;case 4:cr(Hu.alternate,Hu);break;case 8:e=Hu,lr(e),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Hu=Hu.nextEffect}}function hr(){for(;null!==Hu;){if(256&Hu.effectTag)e:{var e=Hu.alternate,t=Hu;switch(t.tag){case 0:case 11:case 15:rr(qa,Ha,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;e=t.stateNode,t=e.getSnapshotBeforeUpdate(t.elementType===t.type?n:Ht(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:o(\"163\")}}Hu=Hu.nextEffect}}function yr(e,t){for(;null!==Hu;){var n=Hu.effectTag;if(36&n){var r=Hu.alternate,i=Hu,a=t;switch(i.tag){case 0:case 11:case 15:rr(Qa,Ka,i);break;case 1:var u=i.stateNode;if(4&i.effectTag)if(null===r)u.componentDidMount();else{var l=i.elementType===i.type?r.memoizedProps:Ht(i.type,r.memoizedProps);u.componentDidUpdate(l,r.memoizedState,u.__reactInternalSnapshotBeforeUpdate)}r=i.updateQueue,null!==r&&Xn(i,r,u,a);break;case 3:if(null!==(r=i.updateQueue)){if(u=null,null!==i.child)switch(i.child.tag){case 5:u=i.child.stateNode;break;case 1:u=i.child.stateNode}Xn(i,r,u,a)}break;case 5:a=i.stateNode,null===r&&4&i.effectTag&&dt(i.type,i.memoizedProps)&&a.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:o(\"163\")}}128&n&&null!==(i=Hu.ref)&&(a=Hu.stateNode,\"function\"===typeof i?i(a):i.current=a),512&n&&($u=e),Hu=Hu.nextEffect}}function vr(e,t){Qu=Gu=$u=null;var n=el;el=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;rr(Xa,Ha,i),rr(Ha,Ya,i)}catch(e){r=!0,o=e}r&&_r(t,o)}t=t.nextEffect}while(null!==t);el=n,n=e.expirationTime,0!==n&&Rr(e,n),al||el||zr(1073741823,!1)}function gr(){null!==Gu&&Ea(Gu),null!==Qu&&Qu()}function br(e,t){qu=Du=!0,e.current===t&&o(\"177\");var n=e.pendingCommitExpirationTime;0===n&&o(\"261\"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,i=t.childExpirationTime;for(zt(e,i>r?i:r),Ru.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,xa=oa,ka=Ge(),oa=!1,Hu=r;null!==Hu;){i=!1;var a=void 0;try{hr()}catch(e){i=!0,a=e}i&&(null===Hu&&o(\"178\"),_r(Hu,a),null!==Hu&&(Hu=Hu.nextEffect))}for(Hu=r;null!==Hu;){i=!1,a=void 0;try{mr()}catch(e){i=!0,a=e}i&&(null===Hu&&o(\"178\"),_r(Hu,a),null!==Hu&&(Hu=Hu.nextEffect))}for(Qe(ka),ka=null,oa=!!xa,xa=null,e.current=t,Hu=r;null!==Hu;){i=!1,a=void 0;try{yr(e,n)}catch(e){i=!0,a=e}i&&(null===Hu&&o(\"178\"),_r(Hu,a),null!==Hu&&(Hu=Hu.nextEffect))}if(null!==r&&null!==$u){var u=vr.bind(null,e,r);Gu=lo.unstable_runWithPriority(lo.unstable_NormalPriority,function(){return Ta(u)}),Qu=u}Du=qu=!1,\"function\"===typeof ja&&ja(t.stateNode),n=t.expirationTime,t=t.childExpirationTime,t=t>n?t:n,0===t&&(Ku=null),Mr(e,t)}function wr(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0===(1024&e.effectTag)){Uu=e;e:{var i=t;t=e;var a=Bu,u=t.pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:wt(t.type)&&xt(t);break;case 3:nn(t),kt(t),u=t.stateNode,u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(Sn(t),t.effectTag&=-3),Fu(t);break;case 5:on(t);var l=en(Va.current);if(a=t.type,null!==i&&null!=t.stateNode)Au(i,t,a,u,l),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var c=en(Ba.current);if(Sn(t)){u=t,i=u.stateNode;var s=u.type,f=u.memoizedProps,d=l;switch(i[Po]=u,i[Co]=f,a=void 0,l=s){case\"iframe\":case\"object\":Re(\"load\",i);break;case\"video\":case\"audio\":for(s=0;s<Lo.length;s++)Re(Lo[s],i);break;case\"source\":Re(\"error\",i);break;case\"img\":case\"image\":case\"link\":Re(\"error\",i),Re(\"load\",i);break;case\"form\":Re(\"reset\",i),Re(\"submit\",i);break;case\"details\":Re(\"toggle\",i);break;case\"input\":se(i,f),Re(\"invalid\",i),st(d,\"onChange\");break;case\"select\":i._wrapperState={wasMultiple:!!f.multiple},Re(\"invalid\",i),st(d,\"onChange\");break;case\"textarea\":et(i,f),Re(\"invalid\",i),st(d,\"onChange\")}lt(l,f),s=null;for(a in f)f.hasOwnProperty(a)&&(c=f[a],\"children\"===a?\"string\"===typeof c?i.textContent!==c&&(s=[\"children\",c]):\"number\"===typeof c&&i.textContent!==\"\"+c&&(s=[\"children\",\"\"+c]):bo.hasOwnProperty(a)&&null!=c&&st(d,a));switch(l){case\"input\":X(i),pe(i,f,!0);break;case\"textarea\":X(i),nt(i,f);break;case\"select\":case\"option\":break;default:\"function\"===typeof f.onClick&&(i.onclick=ft)}a=s,u.updateQueue=a,u=null!==a,u&&er(t)}else{f=t,d=a,i=u,s=9===l.nodeType?l:l.ownerDocument,c===ha.html&&(c=rt(d)),c===ha.html?\"script\"===d?(i=s.createElement(\"div\"),i.innerHTML=\"<script><\\/script>\",s=i.removeChild(i.firstChild)):\"string\"===typeof i.is?s=s.createElement(d,{is:i.is}):(s=s.createElement(d),\"select\"===d&&(d=s,i.multiple?d.multiple=!0:i.size&&(d.size=i.size))):s=s.createElementNS(c,d),i=s,i[Po]=f,i[Co]=u,Ou(i,t,!1,!1),d=i,s=a,f=u;var p=l,m=ct(s,f);switch(s){case\"iframe\":case\"object\":Re(\"load\",d),l=f;break;case\"video\":case\"audio\":for(l=0;l<Lo.length;l++)Re(Lo[l],d);l=f;break;case\"source\":Re(\"error\",d),l=f;break;case\"img\":case\"image\":case\"link\":Re(\"error\",d),Re(\"load\",d),l=f;break;case\"form\":Re(\"reset\",d),Re(\"submit\",d),l=f;break;case\"details\":Re(\"toggle\",d),l=f;break;case\"input\":se(d,f),l=ce(d,f),Re(\"invalid\",d),st(p,\"onChange\");break;case\"option\":l=Xe(d,f);break;case\"select\":d._wrapperState={wasMultiple:!!f.multiple},l=uo({},f,{value:void 0}),Re(\"invalid\",d),st(p,\"onChange\");break;case\"textarea\":et(d,f),l=Je(d,f),Re(\"invalid\",d),st(p,\"onChange\");break;default:l=f}lt(s,l),c=void 0;var h=s,y=d,v=l;for(c in v)if(v.hasOwnProperty(c)){var g=v[c];\"style\"===c?ut(y,g):\"dangerouslySetInnerHTML\"===c?null!=(g=g?g.__html:void 0)&&va(y,g):\"children\"===c?\"string\"===typeof g?(\"textarea\"!==h||\"\"!==g)&&it(y,g):\"number\"===typeof g&&it(y,\"\"+g):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(bo.hasOwnProperty(c)?null!=g&&st(p,c):null!=g&&ue(y,c,g,m))}switch(s){case\"input\":X(d),pe(d,f,!1);break;case\"textarea\":X(d),nt(d,f);break;case\"option\":null!=f.value&&d.setAttribute(\"value\",\"\"+le(f.value));break;case\"select\":l=d,l.multiple=!!f.multiple,d=f.value,null!=d?Ze(l,!!f.multiple,d,!1):null!=f.defaultValue&&Ze(l,!!f.multiple,f.defaultValue,!0);break;default:\"function\"===typeof l.onClick&&(d.onclick=ft)}(u=dt(a,u))&&er(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&o(\"166\");break;case 6:i&&null!=t.stateNode?Nu(i,t,i.memoizedProps,u):(\"string\"!==typeof u&&(null===t.stateNode&&o(\"166\")),i=en(Va.current),en(Ba.current),Sn(t)?(u=t,a=u.stateNode,i=u.memoizedProps,a[Po]=u,(u=a.nodeValue!==i)&&er(t)):(a=t,u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u),u[Po]=t,a.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!==(64&t.effectTag)){t.expirationTime=a,Uu=t;break e}u=null!==u,a=null!==i&&null!==i.memoizedState,null!==i&&!u&&a&&null!==(i=i.child.sibling)&&(l=t.firstEffect,null!==l?(t.firstEffect=i,i.nextEffect=l):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8),(u||a)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:nn(t),Fu(t);break;case 10:Un(t);break;case 9:case 14:break;case 17:wt(t.type)&&xt(t);break;case 18:break;default:o(\"156\")}Uu=null}if(t=e,1===Bu||1!==t.childExpirationTime){for(u=0,a=t.child;null!==a;)i=a.expirationTime,l=a.childExpirationTime,i>u&&(u=i),l>u&&(u=l),a=a.sibling;t.childExpirationTime=u}if(null!==Uu)return Uu;null!==n&&0===(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=dr(e,Bu)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function xr(e){var t=Ln(e.alternate,e,Bu);return e.memoizedProps=e.pendingProps,null===t&&(t=wr(e)),Ru.current=null,t}function kr(e,t){Du&&o(\"243\"),gr(),Du=!0;var n=Iu.current;Iu.current=du;var r=e.nextExpirationTimeToWorkOn;r===Bu&&e===zu&&null!==Uu||(pr(),zu=e,Bu=r,Uu=jt(zu.current,null,Bu),e.pendingCommitExpirationTime=0);for(var i=!1;;){try{if(t)for(;null!==Uu&&!Dr();)Uu=xr(Uu);else for(;null!==Uu;)Uu=xr(Uu)}catch(t){if(_u=ku=xu=null,cn(),null===Uu)i=!0,Hr(t);else{null===Uu&&o(\"271\");var a=Uu,u=a.return;if(null!==u){e:{var l=e,c=u,s=a,f=t;if(u=Bu,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&\"object\"===typeof f&&\"function\"===typeof f.then){var d=f;f=c;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}h=f.pendingProps.maxDuration,\"number\"===typeof h&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=c;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(c=f.updateQueue,null===c?(c=new Set,c.add(d),f.updateQueue=c):c.add(d),0===(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:(u=Hn(1073741823),u.tag=Eu,$n(s,u))),s.expirationTime=1073741823;break e}s=l,c=u;var y=s.pingCache;null===y?(y=s.pingCache=new Mu,h=new Set,y.set(d,h)):void 0===(h=y.get(d))&&(h=new Set,y.set(d,h)),h.has(c)||(h.add(c),s=Tr.bind(null,s,d,c),d.then(s,s)),-1===p?l=1073741823:(-1===m&&(m=10*(1073741822-Wt(l,u))-5e3),l=m+p),0<=l&&Wu<l&&(Wu=l),f.effectTag|=2048,f.expirationTime=u;break e}f=f.return}while(null!==f);f=Error((ee(s.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+te(s))}Vu=!0,f=Jn(f,s),l=c;do{switch(l.tag){case 3:l.effectTag|=2048,l.expirationTime=u,u=sr(l,f,u),Gn(l,u);break e;case 1:if(p=f,m=l.type,s=l.stateNode,0===(64&l.effectTag)&&(\"function\"===typeof m.getDerivedStateFromError||null!==s&&\"function\"===typeof s.componentDidCatch&&(null===Ku||!Ku.has(s)))){l.effectTag|=2048,l.expirationTime=u,u=fr(l,p,u),Gn(l,u);break e}}l=l.return}while(null!==l)}Uu=wr(a);continue}i=!0,Hr(t)}}break}if(Du=!1,Iu.current=n,_u=ku=xu=null,cn(),i)zu=null,e.finishedWork=null;else if(null!==Uu)e.finishedWork=null;else{if(n=e.current.alternate,null===n&&o(\"281\"),zu=null,Vu){if(i=e.latestPendingTime,a=e.latestSuspendedTime,u=e.latestPingedTime,0!==i&&i<r||0!==a&&a<r||0!==u&&u<r)return Bt(e,r),void Nr(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void Nr(e,n,r,t,-1)}t&&-1!==Wu?(Bt(e,r),t=10*(1073741822-Wt(e,r)),t<Wu&&(Wu=t),t=10*(1073741822-Ir()),t=Wu-t,Nr(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function _r(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if(\"function\"===typeof n.type.getDerivedStateFromError||\"function\"===typeof r.componentDidCatch&&(null===Ku||!Ku.has(r)))return e=Jn(t,e),e=fr(n,e,1073741823),$n(n,e),void Cr(n,1073741823);break;case 3:return e=Jn(t,e),e=sr(n,e,1073741823),$n(n,e),void Cr(n,1073741823)}n=n.return}3===e.tag&&(n=Jn(t,e),n=sr(e,n,1073741823),$n(e,n),Cr(e,1073741823))}function Sr(e,t){var n=lo.unstable_getCurrentPriorityLevel(),r=void 0;if(0===(1&t.mode))r=1073741823;else if(Du&&!qu)r=Bu;else{switch(n){case lo.unstable_ImmediatePriority:r=1073741823;break;case lo.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case lo.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case lo.unstable_LowPriority:case lo.unstable_IdlePriority:r=1;break;default:o(\"313\")}null!==zu&&r===Bu&&--r}return n===lo.unstable_UserBlockingPriority&&(0===rl||r<rl)&&(rl=r),r}function Tr(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==zu&&Bu===n?zu=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,t=e.latestPingedTime,(0===t||t>n)&&(e.latestPingedTime=n),Vt(n,e),0!==(n=e.expirationTime)&&Rr(e,n)))}function Er(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ir(),t=Sr(t,e),null!==(e=Pr(e,t))&&(Ut(e,t),0!==(t=e.expirationTime)&&Rr(e,t))}function Pr(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Cr(e,t){null!==(e=Pr(e,t))&&(!Du&&0!==Bu&&t>Bu&&pr(),Ut(e,t),Du&&!qu&&zu===e||Rr(e,e.expirationTime),pl>dl&&(pl=0,o(\"185\")))}function Or(e,t,n,r,o){return lo.unstable_runWithPriority(lo.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}function Fr(){sl=1073741822-((lo.unstable_now()-cl)/10|0)}function Ar(e,t){if(0!==Zu){if(t<Zu)return;null!==Ju&&lo.unstable_cancelCallback(Ju)}Zu=t,e=lo.unstable_now()-cl,Ju=lo.unstable_scheduleCallback(Ur,{timeout:10*(1073741822-t)-e})}function Nr(e,t,n,r,o){e.expirationTime=r,0!==o||Dr()?0<o&&(e.timeoutHandle=_a(jr.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function jr(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,Fr(),fl=sl,Br(e,n)}function Mr(e,t){e.expirationTime=t,e.finishedWork=null}function Ir(){return el?fl:(Lr(),0!==nl&&1!==nl||(Fr(),fl=sl),fl)}function Rr(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===Xu?(Yu=Xu=e,e.nextScheduledRoot=e):(Xu=Xu.nextScheduledRoot=e,Xu.nextScheduledRoot=Yu)):t>e.expirationTime&&(e.expirationTime=t),el||(al?ul&&(tl=e,nl=1073741823,Wr(e,1073741823,!1)):1073741823===t?zr(1073741823,!1):Ar(e,t))}function Lr(){var e=0,t=null;if(null!==Xu)for(var n=Xu,r=Yu;null!==r;){var i=r.expirationTime;if(0===i){if((null===n||null===Xu)&&o(\"244\"),r===r.nextScheduledRoot){Yu=Xu=r.nextScheduledRoot=null;break}if(r===Yu)Yu=i=r.nextScheduledRoot,Xu.nextScheduledRoot=i,r.nextScheduledRoot=null;else{if(r===Xu){Xu=n,Xu.nextScheduledRoot=Yu,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(i>e&&(e=i,t=r),r===Xu)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}tl=t,nl=e}function Dr(){return!!hl||!!lo.unstable_shouldYield()&&(hl=!0)}function Ur(){try{if(!Dr()&&null!==Yu){Fr();var e=Yu;do{var t=e.expirationTime;0!==t&&sl<=t&&(e.nextExpirationTimeToWorkOn=sl),e=e.nextScheduledRoot}while(e!==Yu)}zr(0,!0)}finally{hl=!1}}function zr(e,t){if(Lr(),t)for(Fr(),fl=sl;null!==tl&&0!==nl&&e<=nl&&!(hl&&sl>nl);)Wr(tl,nl,sl>nl),Lr(),Fr(),fl=sl;else for(;null!==tl&&0!==nl&&e<=nl;)Wr(tl,nl,!1),Lr();if(t&&(Zu=0,Ju=null),0!==nl&&Ar(tl,nl),pl=0,ml=null,null!==ll)for(e=ll,ll=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ol||(ol=!0,il=e)}}if(ol)throw e=il,il=null,ol=!1,e}function Br(e,t){el&&o(\"253\"),tl=e,nl=t,Wr(e,t,!1),zr(1073741823,!1)}function Wr(e,t,n){if(el&&o(\"245\"),el=!0,n){var r=e.finishedWork;null!==r?Vr(e,r,t):(e.finishedWork=null,r=e.timeoutHandle,-1!==r&&(e.timeoutHandle=-1,Sa(r)),kr(e,n),null!==(r=e.finishedWork)&&(Dr()?e.finishedWork=r:Vr(e,r,t)))}else r=e.finishedWork,null!==r?Vr(e,r,t):(e.finishedWork=null,r=e.timeoutHandle,-1!==r&&(e.timeoutHandle=-1,Sa(r)),kr(e,n),null!==(r=e.finishedWork)&&Vr(e,r,t));el=!1}function Vr(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===ll?ll=[r]:ll.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===ml?pl++:(ml=e,pl=0),lo.unstable_runWithPriority(lo.unstable_ImmediatePriority,function(){br(e,t)})}function Hr(e){null===tl&&o(\"246\"),tl.expirationTime=0,ol||(ol=!0,il=e)}function qr(e,t){var n=al;al=!0;try{return e(t)}finally{(al=n)||el||zr(1073741823,!1)}}function $r(e,t){if(al&&!ul){ul=!0;try{return e(t)}finally{ul=!1}}return e(t)}function Gr(e,t,n){al||el||0===rl||(zr(rl,!1),rl=0);var r=al;al=!0;try{return lo.unstable_runWithPriority(lo.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(al=r)||el||zr(1073741823,!1)}}function Qr(e,t,n,r,i){var a=t.current;e:if(n){n=n._reactInternalFiber;t:{2===Oe(n)&&1===n.tag||o(\"170\");var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(wt(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);o(\"171\"),u=void 0}if(1===n.tag){var l=n.type;if(wt(l)){n=St(n,l,u);break e}}n=u}else n=Oa;return null===t.context?t.context=n:t.pendingContext=n,t=i,i=Hn(r),i.payload={element:e},t=void 0===t?null:t,null!==t&&(i.callback=t),gr(),$n(a,i),Cr(a,r),r}function Kr(e,t,n,r){var o=t.current;return o=Sr(Ir(),o),Qr(e,t,n,o,r)}function Yr(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Xr(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:li,key:null==r?null:\"\"+r,children:e,containerInfo:t,implementation:n}}function Zr(e){var t=1073741822-25*(1+((1073741822-Ir()+500)/25|0));t>=Lu&&(t=Lu-1),this._expirationTime=Lu=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Jr(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function eo(e,t,n){t=Ft(3,null,null,t?3:0),e={current:t,containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function to(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||\" react-mount-point-unstable \"!==e.nodeValue))}function no(e,t){if(t||(t=e?9===e.nodeType?e.documentElement:e.firstChild:null,t=!(!t||1!==t.nodeType||!t.hasAttribute(\"data-reactroot\"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new eo(e,!1,t)}function ro(e,t,n,r,o){var i=n._reactRootContainer;if(i){if(\"function\"===typeof o){var a=o;o=function(){var e=Yr(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=no(n,r),\"function\"===typeof o){var u=o;o=function(){var e=Yr(i._internalRoot);u.call(e)}}$r(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Yr(i._internalRoot)}function oo(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return to(t)||o(\"200\"),Xr(e,t,null,n)}function io(e,t){return to(e)||o(\"299\",\"unstable_createRoot\"),new eo(e,!0,null!=t&&!0===t.hydrate)}var ao=n(45),uo=n(224),lo=n(225);ao||o(\"227\");var co=!1,so=null,fo=!1,po=null,mo={onError:function(e){co=!0,so=e}},ho=null,yo={},vo=[],go={},bo={},wo={},xo=null,ko=null,_o=null,So=null,To={injectEventPluginOrder:function(e){ho&&o(\"101\"),ho=Array.prototype.slice.call(e),l()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];yo.hasOwnProperty(t)&&yo[t]===r||(yo[t]&&o(\"102\",t),yo[t]=r,n=!0)}n&&l()}},Eo=Math.random().toString(36).slice(2),Po=\"__reactInternalInstance$\"+Eo,Co=\"__reactEventHandlers$\"+Eo,Oo=!(\"undefined\"===typeof window||!window.document||!window.document.createElement),Fo={animationend:E(\"Animation\",\"AnimationEnd\"),animationiteration:E(\"Animation\",\"AnimationIteration\"),animationstart:E(\"Animation\",\"AnimationStart\"),transitionend:E(\"Transition\",\"TransitionEnd\")},Ao={},No={};Oo&&(No=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Fo.animationend.animation,delete Fo.animationiteration.animation,delete Fo.animationstart.animation),\"TransitionEvent\"in window||delete Fo.transitionend.transition);var jo=P(\"animationend\"),Mo=P(\"animationiteration\"),Io=P(\"animationstart\"),Ro=P(\"transitionend\"),Lo=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Do=null,Uo=null,zo=null;uo(A.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():\"unknown\"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=O)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():\"unknown\"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=O)},persist:function(){this.isPersistent=O},isPersistent:F,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=F,this._dispatchInstances=this._dispatchListeners=null}}),A.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},A.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return uo(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=uo({},r.Interface,e),n.extend=r.extend,M(n),n},M(A);var Bo=A.extend({data:null}),Wo=A.extend({data:null}),Vo=[9,13,27,32],Ho=Oo&&\"CompositionEvent\"in window,qo=null;Oo&&\"documentMode\"in document&&(qo=document.documentMode);var $o=Oo&&\"TextEvent\"in window&&!qo,Go=Oo&&(!Ho||qo&&8<qo&&11>=qo),Qo=String.fromCharCode(32),Ko={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",captured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Yo=!1,Xo=!1,Zo={eventTypes:Ko,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(Ho)e:{switch(e){case\"compositionstart\":o=Ko.compositionStart;break e;case\"compositionend\":o=Ko.compositionEnd;break e;case\"compositionupdate\":o=Ko.compositionUpdate;break e}o=void 0}else Xo?I(e,n)&&(o=Ko.compositionEnd):\"keydown\"===e&&229===n.keyCode&&(o=Ko.compositionStart);return o?(Go&&\"ko\"!==n.locale&&(Xo||o!==Ko.compositionStart?o===Ko.compositionEnd&&Xo&&(i=C()):(Do=r,Uo=\"value\"in Do?Do.value:Do.textContent,Xo=!0)),o=Bo.getPooled(o,t,n,r),i?o.data=i:null!==(i=R(n))&&(o.data=i),T(o),i=o):i=null,(e=$o?L(e,n):D(e,n))?(t=Wo.getPooled(Ko.beforeInput,t,n,r),t.data=e,T(t)):t=null,null===i?t:null===t?i:[i,t]}},Jo=null,ei=null,ti=null,ni=!1,ri={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0},oi=ao.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;oi.hasOwnProperty(\"ReactCurrentDispatcher\")||(oi.ReactCurrentDispatcher={current:null});var ii=/^(.*)[\\\\\\/]/,ai=\"function\"===typeof Symbol&&Symbol.for,ui=ai?Symbol.for(\"react.element\"):60103,li=ai?Symbol.for(\"react.portal\"):60106,ci=ai?Symbol.for(\"react.fragment\"):60107,si=ai?Symbol.for(\"react.strict_mode\"):60108,fi=ai?Symbol.for(\"react.profiler\"):60114,di=ai?Symbol.for(\"react.provider\"):60109,pi=ai?Symbol.for(\"react.context\"):60110,mi=ai?Symbol.for(\"react.concurrent_mode\"):60111,hi=ai?Symbol.for(\"react.forward_ref\"):60112,yi=ai?Symbol.for(\"react.suspense\"):60113,vi=ai?Symbol.for(\"react.memo\"):60115,gi=ai?Symbol.for(\"react.lazy\"):60116,bi=\"function\"===typeof Symbol&&Symbol.iterator,wi=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xi=Object.prototype.hasOwnProperty,ki={},_i={},Si={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(e){Si[e]=new ie(e,0,!1,e,null)}),[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(e){var t=e[0];Si[t]=new ie(t,1,!1,e[1],null)}),[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(e){Si[e]=new ie(e,2,!1,e.toLowerCase(),null)}),[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(e){Si[e]=new ie(e,2,!1,e,null)}),\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(e){Si[e]=new ie(e,3,!1,e.toLowerCase(),null)}),[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(e){Si[e]=new ie(e,3,!0,e,null)}),[\"capture\",\"download\"].forEach(function(e){Si[e]=new ie(e,4,!1,e,null)}),[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(e){Si[e]=new ie(e,6,!1,e,null)}),[\"rowSpan\",\"start\"].forEach(function(e){Si[e]=new ie(e,5,!1,e.toLowerCase(),null)});var Ti=/[\\-:]([a-z])/g;\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(e){var t=e.replace(Ti,ae);Si[t]=new ie(t,1,!1,e,null)}),\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(e){var t=e.replace(Ti,ae);Si[t]=new ie(t,1,!1,e,\"http://www.w3.org/1999/xlink\")}),[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(e){var t=e.replace(Ti,ae);Si[t]=new ie(t,1,!1,e,\"http://www.w3.org/XML/1998/namespace\")}),[\"tabIndex\",\"crossOrigin\"].forEach(function(e){Si[e]=new ie(e,1,!1,e.toLowerCase(),null)});var Ei={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}},Pi=null,Ci=null,Oi=!1;Oo&&(Oi=Q(\"input\")&&(!document.documentMode||9<document.documentMode));var Fi={eventTypes:Ei,_isInputEventSupported:Oi,extractEvents:function(e,t,n,r){var o=t?g(t):window,i=void 0,a=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if(\"select\"===u||\"input\"===u&&\"file\"===o.type?i=ge:$(o)?Oi?i=Se:(i=ke,a=xe):(u=o.nodeName)&&\"input\"===u.toLowerCase()&&(\"checkbox\"===o.type||\"radio\"===o.type)&&(i=_e),i&&(i=i(e,t)))return he(i,n,r);a&&a(e,o,t),\"blur\"===e&&(e=o._wrapperState)&&e.controlled&&\"number\"===o.type&&me(o,\"number\",o.value)}},Ai=A.extend({view:null,detail:null}),Ni={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"},ji=0,Mi=0,Ii=!1,Ri=!1,Li=Ai.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ee,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if(\"movementX\"in e)return e.movementX;var t=ji;return ji=e.screenX,Ii?\"mousemove\"===e.type?e.screenX-t:0:(Ii=!0,0)},movementY:function(e){if(\"movementY\"in e)return e.movementY;var t=Mi;return Mi=e.screenY,Ri?\"mousemove\"===e.type?e.screenY-t:0:(Ri=!0,0)}}),Di=Li.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ui={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},zi={eventTypes:Ui,extractEvents:function(e,t,n,r){var o=\"mouseover\"===e||\"pointerover\"===e,i=\"mouseout\"===e||\"pointerout\"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?y(t):null):i=null,i===t)return null;var a=void 0,u=void 0,l=void 0,c=void 0;\"mouseout\"===e||\"mouseover\"===e?(a=Li,u=Ui.mouseLeave,l=Ui.mouseEnter,c=\"mouse\"):\"pointerout\"!==e&&\"pointerover\"!==e||(a=Di,u=Ui.pointerLeave,l=Ui.pointerEnter,c=\"pointer\");var s=null==i?o:g(i);if(o=null==t?o:g(t),e=a.getPooled(u,i,n,r),e.type=c+\"leave\",e.target=s,e.relatedTarget=o,n=a.getPooled(l,t,n,r),n.type=c+\"enter\",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(t=i,o=r,c=0,a=t;a;a=w(a))c++;for(a=0,l=o;l;l=w(l))a++;for(;0<c-a;)t=w(t),c--;for(;0<a-c;)o=w(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=w(t),o=w(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=w(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=w(r);for(r=0;r<t.length;r++)_(t[r],\"bubbled\",e);for(r=i.length;0<r--;)_(i[r],\"captured\",n);return[e,n]}},Bi=Object.prototype.hasOwnProperty,Wi=A.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Vi=A.extend({clipboardData:function(e){return\"clipboardData\"in e?e.clipboardData:window.clipboardData}}),Hi=Ai.extend({relatedTarget:null}),qi={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},$i={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Gi=Ai.extend({key:function(e){if(e.key){var t=qi[e.key]||e.key;if(\"Unidentified\"!==t)return t}return\"keypress\"===e.type?(e=je(e),13===e?\"Enter\":String.fromCharCode(e)):\"keydown\"===e.type||\"keyup\"===e.type?$i[e.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ee,charCode:function(e){return\"keypress\"===e.type?je(e):0},keyCode:function(e){return\"keydown\"===e.type||\"keyup\"===e.type?e.keyCode:0},which:function(e){return\"keypress\"===e.type?je(e):\"keydown\"===e.type||\"keyup\"===e.type?e.keyCode:0}}),Qi=Li.extend({dataTransfer:null}),Ki=Ai.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ee}),Yi=A.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Xi=Li.extend({deltaX:function(e){return\"deltaX\"in e?e.deltaX:\"wheelDeltaX\"in e?-e.wheelDeltaX:0},deltaY:function(e){return\"deltaY\"in e?e.deltaY:\"wheelDeltaY\"in e?-e.wheelDeltaY:\"wheelDelta\"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),Zi=[[\"abort\",\"abort\"],[jo,\"animationEnd\"],[Mo,\"animationIteration\"],[Io,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[Ro,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ji={},ea={};[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(e){Me(e,!0)}),Zi.forEach(function(e){Me(e,!1)});var ta={eventTypes:Ji,isInteractiveTopLevelEventType:function(e){return void 0!==(e=ea[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=ea[e];if(!o)return null;switch(e){case\"keypress\":if(0===je(n))return null;case\"keydown\":case\"keyup\":e=Gi;break;case\"blur\":case\"focus\":e=Hi;break;case\"click\":if(2===n.button)return null;case\"auxclick\":case\"dblclick\":case\"mousedown\":case\"mousemove\":case\"mouseup\":case\"mouseout\":case\"mouseover\":case\"contextmenu\":e=Li;break;case\"drag\":case\"dragend\":case\"dragenter\":case\"dragexit\":case\"dragleave\":case\"dragover\":case\"dragstart\":case\"drop\":e=Qi;break;case\"touchcancel\":case\"touchend\":case\"touchmove\":case\"touchstart\":e=Ki;break;case jo:case Mo:case Io:e=Wi;break;case Ro:e=Yi;break;case\"scroll\":e=Ai;break;case\"wheel\":e=Xi;break;case\"copy\":case\"cut\":case\"paste\":e=Vi;break;case\"gotpointercapture\":case\"lostpointercapture\":case\"pointercancel\":case\"pointerdown\":case\"pointermove\":case\"pointerout\":case\"pointerover\":case\"pointerup\":e=Di;break;default:e=A}return t=e.getPooled(o,t,n,r),T(t),t}},na=ta.isInteractiveTopLevelEventType,ra=[],oa=!0,ia={},aa=0,ua=\"_reactListenersID\"+(\"\"+Math.random()).slice(2),la=Oo&&\"documentMode\"in document&&11>=document.documentMode,ca={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},sa=null,fa=null,da=null,pa=!1,ma={eventTypes:ca,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=ze(i),o=wo.onSelect;for(var a=0;a<o.length;a++){var u=o[a];if(!i.hasOwnProperty(u)||!i[u]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?g(t):window,e){case\"focus\":($(i)||\"true\"===i.contentEditable)&&(sa=i,fa=t,da=null);break;case\"blur\":da=fa=sa=null;break;case\"mousedown\":pa=!0;break;case\"contextmenu\":case\"mouseup\":case\"dragend\":return pa=!1,Ke(n,r);case\"selectionchange\":if(la)break;case\"keydown\":case\"keyup\":return Ke(n,r)}return null}};To.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \")),xo=b,ko=v,_o=g,To.injectEventPluginsByName({SimpleEventPlugin:ta,EnterLeaveEventPlugin:zi,ChangeEventPlugin:Fi,SelectEventPlugin:ma,BeforeInputEventPlugin:Zo});var ha={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"},ya=void 0,va=function(e){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==ha.svg||\"innerHTML\"in e)e.innerHTML=t;else{for(ya=ya||document.createElement(\"div\"),ya.innerHTML=\"<svg>\"+t+\"</svg>\",t=ya.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}),ga={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ba=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(ga).forEach(function(e){ba.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ga[t]=ga[e]})});var wa=uo({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),xa=null,ka=null,_a=\"function\"===typeof setTimeout?setTimeout:void 0,Sa=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ta=lo.unstable_scheduleCallback,Ea=lo.unstable_cancelCallback;new Set;var Pa=[],Ca=-1,Oa={},Fa={current:Oa},Aa={current:!1},Na=Oa,ja=null,Ma=null,Ia=(new ao.Component).refs,Ra={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===Oe(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ir();r=Sr(r,e);var o=Hn(r);o.payload=t,void 0!==n&&null!==n&&(o.callback=n),gr(),$n(e,o),Cr(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ir();r=Sr(r,e);var o=Hn(r);o.tag=Tu,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),gr(),$n(e,o),Cr(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ir();n=Sr(n,e);var r=Hn(n);r.tag=Eu,void 0!==t&&null!==t&&(r.callback=t),gr(),$n(e,r),Cr(e,n)}},La=Array.isArray,Da=Jt(!0),Ua=Jt(!1),za={},Ba={current:za},Wa={current:za},Va={current:za},Ha=0,qa=2,$a=4,Ga=8,Qa=16,Ka=32,Ya=64,Xa=128,Za=oi.ReactCurrentDispatcher,Ja=0,eu=null,tu=null,nu=null,ru=null,ou=null,iu=null,au=0,uu=null,lu=0,cu=!1,su=null,fu=0,du={readContext:Bn,useCallback:an,useContext:an,useEffect:an,useImperativeHandle:an,useLayoutEffect:an,useMemo:an,useReducer:an,useRef:an,useState:an,useDebugValue:an},pu={readContext:Bn,useCallback:function(e,t){return sn().memoizedState=[e,void 0===t?null:t],e},useContext:Bn,useEffect:function(e,t){return hn(516,Xa|Ya,e,t)},useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,hn(4,$a|Ka,vn.bind(null,t,e),n)},useLayoutEffect:function(e,t){return hn(4,$a|Ka,e,t)},useMemo:function(e,t){var n=sn();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=sn();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},e=e.dispatch=bn.bind(null,eu,e),[r.memoizedState,e]},useRef:function(e){var t=sn();return e={current:e},t.memoizedState=e},useState:function(e){var t=sn();return\"function\"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=t.queue={last:null,dispatch:null,lastRenderedReducer:dn,lastRenderedState:e},e=e.dispatch=bn.bind(null,eu,e),[t.memoizedState,e]},useDebugValue:gn},mu={readContext:Bn,useCallback:function(e,t){var n=fn();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&un(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Bn,useEffect:function(e,t){return yn(516,Xa|Ya,e,t)},useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,yn(4,$a|Ka,vn.bind(null,t,e),n)},useLayoutEffect:function(e,t){return yn(4,$a|Ka,e,t)},useMemo:function(e,t){var n=fn();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&un(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:pn,useRef:function(){return fn().memoizedState},useState:function(e){return pn(dn)},useDebugValue:gn},hu=null,yu=null,vu=!1,gu=oi.ReactCurrentOwner,bu=!1,wu={current:null},xu=null,ku=null,_u=null,Su=0,Tu=1,Eu=2,Pu=3,Cu=!1,Ou=void 0,Fu=void 0,Au=void 0,Nu=void 0;Ou=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fu=function(){},Au=function(e,t,n,r,o){var i=e.memoizedProps;if(i!==r){var a=t.stateNode;switch(en(Ba.current),e=null,n){case\"input\":i=ce(a,i),r=ce(a,r),e=[];break;case\"option\":i=Xe(a,i),r=Xe(a,r),e=[];break;case\"select\":i=uo({},i,{value:void 0}),r=uo({},r,{value:void 0}),e=[];break;case\"textarea\":i=Je(a,i),r=Je(a,r),e=[];break;default:\"function\"!==typeof i.onClick&&\"function\"===typeof r.onClick&&(a.onclick=ft)}lt(n,r),a=n=void 0;var u=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if(\"style\"===n){var l=i[n];for(a in l)l.hasOwnProperty(a)&&(u||(u={}),u[a]=\"\")}else\"dangerouslySetInnerHTML\"!==n&&\"children\"!==n&&\"suppressContentEditableWarning\"!==n&&\"suppressHydrationWarning\"!==n&&\"autoFocus\"!==n&&(bo.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(l=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&c!==l&&(null!=c||null!=l))if(\"style\"===n)if(l){for(a in l)!l.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(u||(u={}),u[a]=\"\");for(a in c)c.hasOwnProperty(a)&&l[a]!==c[a]&&(u||(u={}),u[a]=c[a])}else u||(e||(e=[]),e.push(n,u)),u=c;else\"dangerouslySetInnerHTML\"===n?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(e=e||[]).push(n,\"\"+c)):\"children\"===n?l===c||\"string\"!==typeof c&&\"number\"!==typeof c||(e=e||[]).push(n,\"\"+c):\"suppressContentEditableWarning\"!==n&&\"suppressHydrationWarning\"!==n&&(bo.hasOwnProperty(n)?(null!=c&&st(o,n),e||l===c||(e=[])):(e=e||[]).push(n,c))}u&&(e=e||[]).push(\"style\",u),o=e,(t.updateQueue=o)&&er(t)}},Nu=function(e,t,n,r){n!==r&&er(t)};var ju=\"function\"===typeof WeakSet?WeakSet:Set,Mu=\"function\"===typeof WeakMap?WeakMap:Map,Iu=oi.ReactCurrentDispatcher,Ru=oi.ReactCurrentOwner,Lu=1073741822,Du=!1,Uu=null,zu=null,Bu=0,Wu=-1,Vu=!1,Hu=null,qu=!1,$u=null,Gu=null,Qu=null,Ku=null,Yu=null,Xu=null,Zu=0,Ju=void 0,el=!1,tl=null,nl=0,rl=0,ol=!1,il=null,al=!1,ul=!1,ll=null,cl=lo.unstable_now(),sl=1073741822-(cl/10|0),fl=sl,dl=50,pl=0,ml=null,hl=!1;Jo=function(e,t,n){switch(t){case\"input\":if(de(e,n),t=n.name,\"radio\"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+t)+'][type=\"radio\"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=b(r);i||o(\"90\"),Z(r),de(r,i)}}}break;case\"textarea\":tt(e,n);break;case\"select\":null!=(t=n.value)&&Ze(e,!!n.multiple,t,!1)}},Zr.prototype.render=function(e){this._defer||o(\"250\"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Jr;return Qr(e,t,null,n,r._onCommit),r},Zr.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Zr.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||o(\"251\"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,i=t;i!==this;)r=i,i=i._next;null===r&&o(\"251\"),r._next=i._next,this._next=t,e.firstBatch=this}this._defer=!1,Br(e,n),t=this._next,this._next=null,t=e.firstBatch=t,null!==t&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Zr.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Jr.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Jr.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];\"function\"!==typeof n&&o(\"191\",n),n()}}},eo.prototype.render=function(e,t){var n=this._internalRoot,r=new Jr;return t=void 0===t?null:t,null!==t&&r.then(t),Kr(e,n,null,r._onCommit),r},eo.prototype.unmount=function(e){var t=this._internalRoot,n=new Jr;return e=void 0===e?null:e,null!==e&&n.then(e),Kr(null,t,null,n._onCommit),n},eo.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Jr;return n=void 0===n?null:n,null!==n&&o.then(n),Kr(t,r,e,o._onCommit),o},eo.prototype.createBatch=function(){var e=new Zr(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},W=qr,V=Gr,H=function(){el||0===rl||(zr(rl,!1),rl=0)};var yl={createPortal:oo,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&(\"function\"===typeof e.render?o(\"188\"):o(\"268\",Object.keys(e))),e=Ne(t),e=null===e?null:e.stateNode},hydrate:function(e,t,n){return to(t)||o(\"200\"),ro(null,e,t,!0,n)},render:function(e,t,n){return to(t)||o(\"200\"),ro(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return to(n)||o(\"200\"),(null==e||void 0===e._reactInternalFiber)&&o(\"38\"),ro(e,t,n,!1,r)},unmountComponentAtNode:function(e){return to(e)||o(\"40\"),!!e._reactRootContainer&&($r(function(){ro(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return oo.apply(void 0,arguments)},unstable_batchedUpdates:qr,unstable_interactiveUpdates:Gr,flushSync:function(e,t){el&&o(\"187\");var n=al;al=!0;try{return Or(e,t)}finally{al=n,zr(1073741823,!1)}},unstable_createRoot:io,unstable_flushControlled:function(e){var t=al;al=!0;try{Or(e)}finally{(al=t)||el||zr(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[v,g,b,To.injectEventPluginsByName,go,T,function(e){d(e,S)},z,B,Ue,h]}};!function(e){var t=e.findFiberByHostInstance;Ct(uo({},e,{overrideProps:null,currentDispatcherRef:oi.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Ne(e),null===e?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:y,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var vl={default:yl},gl=vl&&yl||vl;e.exports=gl.default||gl},function(e,t,n){\"use strict\";function r(e){if(null===e||void 0===e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}var o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t[\"_\"+String.fromCharCode(n)]=n;if(\"0123456789\"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(\"\"))return!1;var r={};return\"abcdefghijklmnopqrst\".split(\"\").forEach(function(e){r[e]=e}),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},r)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,u,l=r(e),c=1;c<arguments.length;c++){n=Object(arguments[c]);for(var s in n)i.call(n,s)&&(l[s]=n[s]);if(o){u=o(n);for(var f=0;f<u.length;f++)a.call(n,u[f])&&(l[u[f]]=n[u[f]])}}return l}},function(e,t,n){\"use strict\";e.exports=n(226)},function(e,t,n){\"use strict\";(function(e){function n(){if(!m){var e=c.expirationTime;h?_():h=!0,k(i,e)}}function r(){var e=c,t=c.next;if(c===t)c=null;else{var r=c.previous;c=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var o=f,i=p;f=e,p=t;try{var a=r()}finally{f=o,p=i}if(\"function\"===typeof a)if(a={callback:a,priorityLevel:e,expirationTime:t,next:null,previous:null},null===c)c=a.next=a.previous=a;else{r=null,e=c;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==c);null===r?r=c:r===c&&(c=a,n()),t=r.previous,t.next=r.previous=a,a.next=r,a.previous=t}}function o(){if(-1===d&&null!==c&&1===c.priorityLevel){m=!0;try{do{r()}while(null!==c&&1===c.priorityLevel)}finally{m=!1,null!==c?n():h=!1}}}function i(e){m=!0;var i=s;s=e;try{if(e)for(;null!==c;){var a=t.unstable_now();if(!(c.expirationTime<=a))break;do{r()}while(null!==c&&c.expirationTime<=a)}else if(null!==c)do{r()}while(null!==c&&!S())}finally{m=!1,s=i,null!==c?n():h=!1,o()}}function a(e){u=b(function(t){g(l),e(t)}),l=v(function(){w(u),e(t.unstable_now())},100)}Object.defineProperty(t,\"__esModule\",{value:!0});var u,l,c=null,s=!1,f=3,d=-1,p=-1,m=!1,h=!1,y=Date,v=\"function\"===typeof setTimeout?setTimeout:void 0,g=\"function\"===typeof clearTimeout?clearTimeout:void 0,b=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,w=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return y.now()};var k,_,S,T=null;if(\"undefined\"!==typeof window?T=window:\"undefined\"!==typeof e&&(T=e),T&&T._schedMock){var E=T._schedMock;k=E[0],_=E[1],S=E[2],t.unstable_now=E[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var P=null,C=function(e){if(null!==P)try{P(e)}finally{P=null}};k=function(e){null!==P?setTimeout(k,0,e):(P=e,setTimeout(C,0,!1))},_=function(){P=null},S=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof b&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof w&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var O=null,F=!1,A=-1,N=!1,j=!1,M=0,I=33,R=33;S=function(){return M<=t.unstable_now()};var L=new MessageChannel,D=L.port2;L.port1.onmessage=function(){F=!1;var e=O,n=A;O=null,A=-1;var r=t.unstable_now(),o=!1;if(0>=M-r){if(!(-1!==n&&n<=r))return N||(N=!0,a(U)),O=e,void(A=n);o=!0}if(null!==e){j=!0;try{e(o)}finally{j=!1}}};var U=function(e){if(null!==O){a(U);var t=e-M+R;t<R&&I<R?(8>t&&(t=8),R=t<I?I:t):I=t,M=e+R,F||(F=!0,D.postMessage(void 0))}else N=!1};k=function(e,t){O=e,A=t,j||0>t?D.postMessage(void 0):N||(N=!0,a(U))},_=function(){O=null,F=!1,A=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=f,i=d;f=e,d=t.unstable_now();try{return n()}finally{f=r,d=i,o()}},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var n=3;break;default:n=f}var r=f,i=d;f=n,d=t.unstable_now();try{return e()}finally{f=r,d=i,o()}},t.unstable_scheduleCallback=function(e,r){var o=-1!==d?d:t.unstable_now();if(\"object\"===typeof r&&null!==r&&\"number\"===typeof r.timeout)r=o+r.timeout;else switch(f){case 1:r=o+-1;break;case 2:r=o+250;break;case 5:r=o+1073741823;break;case 4:r=o+1e4;break;default:r=o+5e3}if(e={callback:e,priorityLevel:f,expirationTime:r,next:null,previous:null},null===c)c=e.next=e.previous=e,n();else{o=null;var i=c;do{if(i.expirationTime>r){o=i;break}i=i.next}while(i!==c);null===o?o=c:o===c&&(c=e,n()),r=o.previous,r.next=o.previous=e,e.next=o,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)c=null;else{e===c&&(c=t);var n=e.previous;n.next=t,t.previous=n}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=f;return function(){var r=f,i=d;f=n,d=t.unstable_now();try{return e.apply(this,arguments)}finally{f=r,d=i,o()}}},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_shouldYield=function(){return!s&&(null!==c&&c.expirationTime<p||S())},t.unstable_continueExecution=function(){null!==c&&n()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return c}}).call(t,n(108))},function(e,t){},function(e,t,n){\"use strict\";var r=n(229),o=n(234);r.default.__addLocaleData(o.default),r.default.defaultLocale=\"en\",t.default=r.default},function(e,t,n){\"use strict\";function r(e,t,n){var o=\"string\"===typeof e?r.__parse(e):e;if(!o||\"messageFormatPattern\"!==o.type)throw new TypeError(\"A message must be provided as a String or AST.\");n=this._mergeFormats(r.formats,n),i.defineProperty(this,\"_locale\",{value:this._resolveLocale(t)});var a=this._findPluralRuleFunction(this._locale),u=this._compilePattern(o,t,n,a),l=this;this.format=function(t){try{return l._format(u,t)}catch(t){throw t.variableId?new Error(\"The intl string context variable '\"+t.variableId+\"' was not provided to the string '\"+e+\"'\"):t}}}var o=n(102),i=n(230),a=n(231),u=n(232);t.default=r,i.defineProperty(r,\"formats\",{enumerable:!0,value:{number:{currency:{style:\"currency\"},percent:{style:\"percent\"}},date:{short:{month:\"numeric\",day:\"numeric\",year:\"2-digit\"},medium:{month:\"short\",day:\"numeric\",year:\"numeric\"},long:{month:\"long\",day:\"numeric\",year:\"numeric\"},full:{weekday:\"long\",month:\"long\",day:\"numeric\",year:\"numeric\"}},time:{short:{hour:\"numeric\",minute:\"numeric\"},medium:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\"},long:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"},full:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"}}}}),i.defineProperty(r,\"__localeData__\",{value:i.objCreate(null)}),i.defineProperty(r,\"__addLocaleData\",{value:function(e){if(!e||!e.locale)throw new Error(\"Locale data provided to IntlMessageFormat is missing a `locale` property\");r.__localeData__[e.locale.toLowerCase()]=e}}),i.defineProperty(r,\"__parse\",{value:u.default.parse}),i.defineProperty(r,\"defaultLocale\",{enumerable:!0,writable:!0,value:void 0}),r.prototype.resolvedOptions=function(){return{locale:this._locale}},r.prototype._compilePattern=function(e,t,n,r){return new a.default(t,n,r).compile(e)},r.prototype._findPluralRuleFunction=function(e){for(var t=r.__localeData__,n=t[e.toLowerCase()];n;){if(n.pluralRuleFunction)return n.pluralRuleFunction;n=n.parentLocale&&t[n.parentLocale.toLowerCase()]}throw new Error(\"Locale data added to IntlMessageFormat is missing a `pluralRuleFunction` for :\"+e)},r.prototype._format=function(e,t){var n,r,i,a,u,l,c=\"\";for(n=0,r=e.length;n<r;n+=1)if(\"string\"!==typeof(i=e[n])){if(a=i.id,!t||!o.hop.call(t,a))throw l=new Error(\"A value must be provided for: \"+a),l.variableId=a,l;u=t[a],i.options?c+=this._format(i.getOption(u),t):c+=i.format(u)}else c+=i;return c},r.prototype._mergeFormats=function(e,t){var n,r,a={};for(n in e)o.hop.call(e,n)&&(a[n]=r=i.objCreate(e[n]),t&&o.hop.call(t,n)&&o.extend(r,t[n]));return a},r.prototype._resolveLocale=function(e){\"string\"===typeof e&&(e=[e]),e=(e||[]).concat(r.defaultLocale);var t,n,o,i,a=r.__localeData__;for(t=0,n=e.length;t<n;t+=1)for(o=e[t].toLowerCase().split(\"-\");o.length;){if(i=a[o.join(\"-\")])return i.locale;o.pop()}var u=e.pop();throw new Error(\"No locale data has been added to IntlMessageFormat for: \"+e.join(\", \")+\", or the default locale: \"+u)}},function(e,t,n){\"use strict\";var r=n(102),o=function(){try{return!!Object.defineProperty({},\"a\",{})}catch(e){return!1}}(),i=(!o&&Object.prototype.__defineGetter__,o?Object.defineProperty:function(e,t,n){\"get\"in n&&e.__defineGetter__?e.__defineGetter__(t,n.get):(!r.hop.call(e,t)||\"value\"in n)&&(e[t]=n.value)}),a=Object.create||function(e,t){function n(){}var o,a;n.prototype=e,o=new n;for(a in t)r.hop.call(t,a)&&i(o,a,t[a]);return o};t.defineProperty=i,t.objCreate=a},function(e,t,n){\"use strict\";function r(e,t,n){this.locales=e,this.formats=t,this.pluralFn=n}function o(e){this.id=e}function i(e,t,n,r,o){this.id=e,this.useOrdinal=t,this.offset=n,this.options=r,this.pluralFn=o}function a(e,t,n,r){this.id=e,this.offset=t,this.numberFormat=n,this.string=r}function u(e,t){this.id=e,this.options=t}t.default=r,r.prototype.compile=function(e){return this.pluralStack=[],this.currentPlural=null,this.pluralNumberFormat=null,this.compileMessage(e)},r.prototype.compileMessage=function(e){if(!e||\"messageFormatPattern\"!==e.type)throw new Error('Message AST is not of type: \"messageFormatPattern\"');var t,n,r,o=e.elements,i=[];for(t=0,n=o.length;t<n;t+=1)switch(r=o[t],r.type){case\"messageTextElement\":i.push(this.compileMessageText(r));break;case\"argumentElement\":i.push(this.compileArgument(r));break;default:throw new Error(\"Message element does not have a valid type\")}return i},r.prototype.compileMessageText=function(e){return this.currentPlural&&/(^|[^\\\\])#/g.test(e.value)?(this.pluralNumberFormat||(this.pluralNumberFormat=new Intl.NumberFormat(this.locales)),new a(this.currentPlural.id,this.currentPlural.format.offset,this.pluralNumberFormat,e.value)):e.value.replace(/\\\\#/g,\"#\")},r.prototype.compileArgument=function(e){var t=e.format;if(!t)return new o(e.id);var n,r=this.formats,a=this.locales,l=this.pluralFn;switch(t.type){case\"numberFormat\":return n=r.number[t.style],{id:e.id,format:new Intl.NumberFormat(a,n).format};case\"dateFormat\":return n=r.date[t.style],{id:e.id,format:new Intl.DateTimeFormat(a,n).format};case\"timeFormat\":return n=r.time[t.style],{id:e.id,format:new Intl.DateTimeFormat(a,n).format};case\"pluralFormat\":return n=this.compileOptions(e),new i(e.id,t.ordinal,t.offset,n,l);case\"selectFormat\":return n=this.compileOptions(e),new u(e.id,n);default:throw new Error(\"Message element does not have a valid format type\")}},r.prototype.compileOptions=function(e){var t=e.format,n=t.options,r={};this.pluralStack.push(this.currentPlural),this.currentPlural=\"pluralFormat\"===t.type?e:null;var o,i,a;for(o=0,i=n.length;o<i;o+=1)a=n[o],r[a.selector]=this.compileMessage(a.value);return this.currentPlural=this.pluralStack.pop(),r},o.prototype.format=function(e){return e||\"number\"===typeof e?\"string\"===typeof e?e:String(e):\"\"},i.prototype.getOption=function(e){var t=this.options;return t[\"=\"+e]||t[this.pluralFn(e-this.offset,this.useOrdinal)]||t.other},a.prototype.format=function(e){var t=this.numberFormat.format(e-this.offset);return this.string.replace(/(^|[^\\\\])#/g,\"$1\"+t).replace(/\\\\#/g,\"#\")},u.prototype.getOption=function(e){var t=this.options;return t[e]||t.other}},function(e,t,n){\"use strict\";t=e.exports=n(233).default,t.default=t},function(e,t,n){\"use strict\";t.default=function(){function e(t,n,r,o){this.message=t,this.expected=n,this.found=r,this.location=o,this.name=\"SyntaxError\",\"function\"===typeof Error.captureStackTrace&&Error.captureStackTrace(this,e)}function t(t){function n(){return o(Qe,Ge)}function r(e){var n,r,o=Ke[e];if(o)return o;for(n=e-1;!Ke[n];)n--;for(o=Ke[n],o={line:o.line,column:o.column,seenCR:o.seenCR};n<e;)r=t.charAt(n),\"\\n\"===r?(o.seenCR||o.line++,o.column=1,o.seenCR=!1):\"\\r\"===r||\"\\u2028\"===r||\"\\u2029\"===r?(o.line++,o.column=1,o.seenCR=!0):(o.column++,o.seenCR=!1),n++;return Ke[e]=o,o}function o(e,t){var n=r(e),o=r(t);return{start:{offset:e,line:n.line,column:n.column},end:{offset:t,line:o.line,column:o.column}}}function i(e){Ge<Ye||(Ge>Ye&&(Ye=Ge,Xe=[]),Xe.push(e))}function a(t,n,r,o){return null!==n&&function(e){var t=1;for(e.sort(function(e,t){return e.description<t.description?-1:e.description>t.description?1:0});t<e.length;)e[t-1]===e[t]?e.splice(t,1):t++}(n),new e(null!==t?t:function(e,t){var n,r,o,i=new Array(e.length);for(o=0;o<e.length;o++)i[o]=e[o].description;return n=e.length>1?i.slice(0,-1).join(\", \")+\" or \"+i[e.length-1]:i[0],r=t?'\"'+function(e){function t(e){return e.charCodeAt(0).toString(16).toUpperCase()}return e.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\x08/g,\"\\\\b\").replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\f/g,\"\\\\f\").replace(/\\r/g,\"\\\\r\").replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g,function(e){return\"\\\\x0\"+t(e)}).replace(/[\\x10-\\x1F\\x80-\\xFF]/g,function(e){return\"\\\\x\"+t(e)}).replace(/[\\u0100-\\u0FFF]/g,function(e){return\"\\\\u0\"+t(e)}).replace(/[\\u1000-\\uFFFF]/g,function(e){return\"\\\\u\"+t(e)})}(t)+'\"':\"end of input\",\"Expected \"+n+\" but \"+r+\" found.\"}(n,r),n,r,o)}function u(){return l()}function l(){var e,t,n;for(e=Ge,t=[],n=c();n!==N;)t.push(n),n=c();return t!==N&&(Qe=e,t=I(t)),e=t}function c(){var e;return e=f(),e===N&&(e=p()),e}function s(){var e,n,r,o,i,a;if(e=Ge,n=[],r=Ge,o=S(),o!==N?(i=O(),i!==N?(a=S(),a!==N?(o=[o,i,a],r=o):(Ge=r,r=N)):(Ge=r,r=N)):(Ge=r,r=N),r!==N)for(;r!==N;)n.push(r),r=Ge,o=S(),o!==N?(i=O(),i!==N?(a=S(),a!==N?(o=[o,i,a],r=o):(Ge=r,r=N)):(Ge=r,r=N)):(Ge=r,r=N);else n=N;return n!==N&&(Qe=e,n=R(n)),e=n,e===N&&(e=Ge,n=_(),e=n!==N?t.substring(e,Ge):n),e}function f(){var e,t;return e=Ge,t=s(),t!==N&&(Qe=e,t=L(t)),e=t}function d(){var e,n,r;if((e=P())===N){if(e=Ge,n=[],D.test(t.charAt(Ge))?(r=t.charAt(Ge),Ge++):(r=N,0===Ze&&i(U)),r!==N)for(;r!==N;)n.push(r),D.test(t.charAt(Ge))?(r=t.charAt(Ge),Ge++):(r=N,0===Ze&&i(U));else n=N;e=n!==N?t.substring(e,Ge):n}return e}function p(){var e,n,r,o,a,u,l,c,s;return e=Ge,123===t.charCodeAt(Ge)?(n=z,Ge++):(n=N,0===Ze&&i(B)),n!==N?(r=S(),r!==N?(o=d(),o!==N?(a=S(),a!==N?(u=Ge,44===t.charCodeAt(Ge)?(l=W,Ge++):(l=N,0===Ze&&i(V)),l!==N?(c=S(),c!==N?(s=m(),s!==N?(l=[l,c,s],u=l):(Ge=u,u=N)):(Ge=u,u=N)):(Ge=u,u=N),u===N&&(u=null),u!==N?(l=S(),l!==N?(125===t.charCodeAt(Ge)?(c=H,Ge++):(c=N,0===Ze&&i(q)),c!==N?(Qe=e,n=$(o,u),e=n):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N),e}function m(){var e;return e=h(),e===N&&(e=y())===N&&(e=v())===N&&(e=g()),e}function h(){var e,n,r,o,a,u,l;return e=Ge,t.substr(Ge,6)===G?(n=G,Ge+=6):(n=N,0===Ze&&i(Q)),n===N&&(t.substr(Ge,4)===K?(n=K,Ge+=4):(n=N,0===Ze&&i(Y)),n===N&&(t.substr(Ge,4)===X?(n=X,Ge+=4):(n=N,0===Ze&&i(Z)))),n!==N?(r=S(),r!==N?(o=Ge,44===t.charCodeAt(Ge)?(a=W,Ge++):(a=N,0===Ze&&i(V)),a!==N?(u=S(),u!==N?(l=O(),l!==N?(a=[a,u,l],o=a):(Ge=o,o=N)):(Ge=o,o=N)):(Ge=o,o=N),o===N&&(o=null),o!==N?(Qe=e,n=J(n,o),e=n):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N),e}function y(){var e,n,r,o,a,u;return e=Ge,t.substr(Ge,6)===ee?(n=ee,Ge+=6):(n=N,0===Ze&&i(te)),n!==N?(r=S(),r!==N?(44===t.charCodeAt(Ge)?(o=W,Ge++):(o=N,0===Ze&&i(V)),o!==N?(a=S(),a!==N?(u=k(),u!==N?(Qe=e,n=ne(u),e=n):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N),e}function v(){var e,n,r,o,a,u;return e=Ge,t.substr(Ge,13)===re?(n=re,Ge+=13):(n=N,0===Ze&&i(oe)),n!==N?(r=S(),r!==N?(44===t.charCodeAt(Ge)?(o=W,Ge++):(o=N,0===Ze&&i(V)),o!==N?(a=S(),a!==N?(u=k(),u!==N?(Qe=e,n=ie(u),e=n):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N),e}function g(){var e,n,r,o,a;if(e=Ge,t.substr(Ge,6)===ae?(n=ae,Ge+=6):(n=N,0===Ze&&i(ue)),n!==N)if(S()!==N)if(44===t.charCodeAt(Ge)?(r=W,Ge++):(r=N,0===Ze&&i(V)),r!==N)if(S()!==N){if(o=[],(a=w())!==N)for(;a!==N;)o.push(a),a=w();else o=N;o!==N?(Qe=e,n=le(o),e=n):(Ge=e,e=N)}else Ge=e,e=N;else Ge=e,e=N;else Ge=e,e=N;else Ge=e,e=N;return e}function b(){var e,n,r,o;return e=Ge,n=Ge,61===t.charCodeAt(Ge)?(r=ce,Ge++):(r=N,0===Ze&&i(se)),r!==N?(o=P(),o!==N?(r=[r,o],n=r):(Ge=n,n=N)):(Ge=n,n=N),e=n!==N?t.substring(e,Ge):n,e===N&&(e=O()),e}function w(){var e,n,r,o,a,u,c,s,f;return e=Ge,n=S(),n!==N?(r=b(),r!==N?(o=S(),o!==N?(123===t.charCodeAt(Ge)?(a=z,Ge++):(a=N,0===Ze&&i(B)),a!==N?(u=S(),u!==N?(c=l(),c!==N?(s=S(),s!==N?(125===t.charCodeAt(Ge)?(f=H,Ge++):(f=N,0===Ze&&i(q)),f!==N?(Qe=e,n=fe(r,c),e=n):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N),e}function x(){var e,n,r,o;return e=Ge,t.substr(Ge,7)===de?(n=de,Ge+=7):(n=N,0===Ze&&i(pe)),n!==N?(r=S(),r!==N?(o=P(),o!==N?(Qe=e,n=me(o),e=n):(Ge=e,e=N)):(Ge=e,e=N)):(Ge=e,e=N),e}function k(){var e,t,n,r;if(e=Ge,t=x(),t===N&&(t=null),t!==N)if(S()!==N){if(n=[],(r=w())!==N)for(;r!==N;)n.push(r),r=w();else n=N;n!==N?(Qe=e,t=he(t,n),e=t):(Ge=e,e=N)}else Ge=e,e=N;else Ge=e,e=N;return e}function _(){var e,n;if(Ze++,e=[],ve.test(t.charAt(Ge))?(n=t.charAt(Ge),Ge++):(n=N,0===Ze&&i(ge)),n!==N)for(;n!==N;)e.push(n),ve.test(t.charAt(Ge))?(n=t.charAt(Ge),Ge++):(n=N,0===Ze&&i(ge));else e=N;return Ze--,e===N&&(n=N,0===Ze&&i(ye)),e}function S(){var e,n,r;for(Ze++,e=Ge,n=[],r=_();r!==N;)n.push(r),r=_();return e=n!==N?t.substring(e,Ge):n,Ze--,e===N&&(n=N,0===Ze&&i(be)),e}function T(){var e;return we.test(t.charAt(Ge))?(e=t.charAt(Ge),Ge++):(e=N,0===Ze&&i(xe)),e}function E(){var e;return ke.test(t.charAt(Ge))?(e=t.charAt(Ge),Ge++):(e=N,0===Ze&&i(_e)),e}function P(){var e,n,r,o,a,u;if(e=Ge,48===t.charCodeAt(Ge)?(n=Se,Ge++):(n=N,0===Ze&&i(Te)),n===N){if(n=Ge,r=Ge,Ee.test(t.charAt(Ge))?(o=t.charAt(Ge),Ge++):(o=N,0===Ze&&i(Pe)),o!==N){for(a=[],u=T();u!==N;)a.push(u),u=T();a!==N?(o=[o,a],r=o):(Ge=r,r=N)}else Ge=r,r=N;n=r!==N?t.substring(n,Ge):r}return n!==N&&(Qe=e,n=Ce(n)),e=n}function C(){var e,n,r,o,a,u,l,c;return Oe.test(t.charAt(Ge))?(e=t.charAt(Ge),Ge++):(e=N,0===Ze&&i(Fe)),e===N&&(e=Ge,t.substr(Ge,2)===Ae?(n=Ae,Ge+=2):(n=N,0===Ze&&i(Ne)),n!==N&&(Qe=e,n=je()),(e=n)===N&&(e=Ge,t.substr(Ge,2)===Me?(n=Me,Ge+=2):(n=N,0===Ze&&i(Ie)),n!==N&&(Qe=e,n=Re()),(e=n)===N&&(e=Ge,t.substr(Ge,2)===Le?(n=Le,Ge+=2):(n=N,0===Ze&&i(De)),n!==N&&(Qe=e,n=Ue()),(e=n)===N&&(e=Ge,t.substr(Ge,2)===ze?(n=ze,Ge+=2):(n=N,0===Ze&&i(Be)),n!==N&&(Qe=e,n=We()),(e=n)===N&&(e=Ge,t.substr(Ge,2)===Ve?(n=Ve,Ge+=2):(n=N,0===Ze&&i(He)),n!==N?(r=Ge,o=Ge,a=E(),a!==N?(u=E(),u!==N?(l=E(),l!==N?(c=E(),c!==N?(a=[a,u,l,c],o=a):(Ge=o,o=N)):(Ge=o,o=N)):(Ge=o,o=N)):(Ge=o,o=N),r=o!==N?t.substring(r,Ge):o,r!==N?(Qe=e,n=qe(r),e=n):(Ge=e,e=N)):(Ge=e,e=N)))))),e}function O(){var e,t,n;if(e=Ge,t=[],(n=C())!==N)for(;n!==N;)t.push(n),n=C();else t=N;return t!==N&&(Qe=e,t=$e(t)),e=t}var F,A=arguments.length>1?arguments[1]:{},N={},j={start:u},M=u,I=function(e){return{type:\"messageFormatPattern\",elements:e,location:n()}},R=function(e){var t,n,r,o,i,a=\"\";for(t=0,r=e.length;t<r;t+=1)for(o=e[t],n=0,i=o.length;n<i;n+=1)a+=o[n];return a},L=function(e){return{type:\"messageTextElement\",value:e,location:n()}},D=/^[^ \\t\\n\\r,.+={}#]/,U={type:\"class\",value:\"[^ \\\\t\\\\n\\\\r,.+={}#]\",description:\"[^ \\\\t\\\\n\\\\r,.+={}#]\"},z=\"{\",B={type:\"literal\",value:\"{\",description:'\"{\"'},W=\",\",V={type:\"literal\",value:\",\",description:'\",\"'},H=\"}\",q={type:\"literal\",value:\"}\",description:'\"}\"'},$=function(e,t){return{type:\"argumentElement\",id:e,format:t&&t[2],location:n()}},G=\"number\",Q={type:\"literal\",value:\"number\",description:'\"number\"'},K=\"date\",Y={type:\"literal\",value:\"date\",description:'\"date\"'},X=\"time\",Z={type:\"literal\",value:\"time\",description:'\"time\"'},J=function(e,t){return{type:e+\"Format\",style:t&&t[2],location:n()}},ee=\"plural\",te={type:\"literal\",value:\"plural\",description:'\"plural\"'},ne=function(e){return{type:e.type,ordinal:!1,offset:e.offset||0,options:e.options,location:n()}},re=\"selectordinal\",oe={type:\"literal\",value:\"selectordinal\",description:'\"selectordinal\"'},ie=function(e){return{type:e.type,ordinal:!0,offset:e.offset||0,options:e.options,location:n()}},ae=\"select\",ue={type:\"literal\",value:\"select\",description:'\"select\"'},le=function(e){return{type:\"selectFormat\",options:e,location:n()}},ce=\"=\",se={type:\"literal\",value:\"=\",description:'\"=\"'},fe=function(e,t){return{type:\"optionalFormatPattern\",selector:e,value:t,location:n()}},de=\"offset:\",pe={type:\"literal\",value:\"offset:\",description:'\"offset:\"'},me=function(e){return e},he=function(e,t){return{type:\"pluralFormat\",offset:e,options:t,location:n()}},ye={type:\"other\",description:\"whitespace\"},ve=/^[ \\t\\n\\r]/,ge={type:\"class\",value:\"[ \\\\t\\\\n\\\\r]\",description:\"[ \\\\t\\\\n\\\\r]\"},be={type:\"other\",description:\"optionalWhitespace\"},we=/^[0-9]/,xe={type:\"class\",value:\"[0-9]\",description:\"[0-9]\"},ke=/^[0-9a-f]/i,_e={type:\"class\",value:\"[0-9a-f]i\",description:\"[0-9a-f]i\"},Se=\"0\",Te={type:\"literal\",value:\"0\",description:'\"0\"'},Ee=/^[1-9]/,Pe={type:\"class\",value:\"[1-9]\",description:\"[1-9]\"},Ce=function(e){return parseInt(e,10)},Oe=/^[^{}\\\\\\0-\\x1F\\x7f \\t\\n\\r]/,Fe={type:\"class\",value:\"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\",description:\"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\"},Ae=\"\\\\\\\\\",Ne={type:\"literal\",value:\"\\\\\\\\\",description:'\"\\\\\\\\\\\\\\\\\"'},je=function(){return\"\\\\\"},Me=\"\\\\#\",Ie={type:\"literal\",value:\"\\\\#\",description:'\"\\\\\\\\#\"'},Re=function(){return\"\\\\#\"},Le=\"\\\\{\",De={type:\"literal\",value:\"\\\\{\",description:'\"\\\\\\\\{\"'},Ue=function(){return\"{\"},ze=\"\\\\}\",Be={type:\"literal\",value:\"\\\\}\",description:'\"\\\\\\\\}\"'},We=function(){return\"}\"},Ve=\"\\\\u\",He={type:\"literal\",value:\"\\\\u\",description:'\"\\\\\\\\u\"'},qe=function(e){return String.fromCharCode(parseInt(e,16))},$e=function(e){return e.join(\"\")},Ge=0,Qe=0,Ke=[{line:1,column:1,seenCR:!1}],Ye=0,Xe=[],Ze=0;if(\"startRule\"in A){if(!(A.startRule in j))throw new Error(\"Can't start parsing from rule \\\"\"+A.startRule+'\".');M=j[A.startRule]}if((F=M())!==N&&Ge===t.length)return F;throw F!==N&&Ge<t.length&&i({type:\"end\",description:\"end of input\"}),a(null,Xe,Ye<t.length?t.charAt(Ye):null,Ye<t.length?o(Ye,Ye+1):o(Ye,Ye))}return function(e,t){function n(){this.constructor=e}n.prototype=t.prototype,e.prototype=new n}(e,Error),{SyntaxError:e,parse:t}}()},function(e,t,n){\"use strict\";t.default={locale:\"en\",pluralRuleFunction:function(e,t){var n=String(e).split(\".\"),r=!n[1],o=Number(n[0])==e,i=o&&n[0].slice(-1),a=o&&n[0].slice(-2);return t?1==i&&11!=a?\"one\":2==i&&12!=a?\"two\":3==i&&13!=a?\"few\":\"other\":1==e&&r?\"one\":\"other\"}}},function(e,t){},function(e,t,n){\"use strict\";var r=n(237).default;n(242),t=e.exports=r,t.default=t},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(238),o=n(241);r.default.__addLocaleData(o.default),r.default.defaultLocale=\"en\",t.default=r.default},function(e,t,n){\"use strict\";function r(e,t){t=t||{},a.isArray(e)&&(e=e.concat()),a.defineProperty(this,\"_locale\",{value:this._resolveLocale(e)}),a.defineProperty(this,\"_options\",{value:{style:this._resolveStyle(t.style),units:this._isValidUnits(t.units)&&t.units}}),a.defineProperty(this,\"_locales\",{value:e}),a.defineProperty(this,\"_fields\",{value:this._findFields(this._locale)}),a.defineProperty(this,\"_messages\",{value:a.objCreate(null)});var n=this;this.format=function(e,t){return n._format(e,t)}}Object.defineProperty(t,\"__esModule\",{value:!0});var o=n(101),i=n(239),a=n(240);t.default=r;var u=[\"second\",\"second-short\",\"minute\",\"minute-short\",\"hour\",\"hour-short\",\"day\",\"day-short\",\"month\",\"month-short\",\"year\",\"year-short\"],l=[\"best fit\",\"numeric\"];a.defineProperty(r,\"__localeData__\",{value:a.objCreate(null)}),a.defineProperty(r,\"__addLocaleData\",{value:function(){for(var e=0;e<arguments.length;e++){var t=arguments[e];if(!t||!t.locale)throw new Error(\"Locale data provided to IntlRelativeFormat is missing a `locale` property value\");r.__localeData__[t.locale.toLowerCase()]=t,o.default.__addLocaleData(t)}}}),a.defineProperty(r,\"defaultLocale\",{enumerable:!0,writable:!0,value:void 0}),a.defineProperty(r,\"thresholds\",{enumerable:!0,value:{second:45,\"second-short\":45,minute:45,\"minute-short\":45,hour:22,\"hour-short\":22,day:26,\"day-short\":26,month:11,\"month-short\":11}}),r.prototype.resolvedOptions=function(){return{locale:this._locale,style:this._options.style,units:this._options.units}},r.prototype._compileMessage=function(e){var t,n=this._locales,r=(this._locale,this._fields[e]),i=r.relativeTime,a=\"\",u=\"\";for(t in i.future)i.future.hasOwnProperty(t)&&(a+=\" \"+t+\" {\"+i.future[t].replace(\"{0}\",\"#\")+\"}\");for(t in i.past)i.past.hasOwnProperty(t)&&(u+=\" \"+t+\" {\"+i.past[t].replace(\"{0}\",\"#\")+\"}\");var l=\"{when, select, future {{0, plural, \"+a+\"}}past {{0, plural, \"+u+\"}}}\";return new o.default(l,n)},r.prototype._getMessage=function(e){var t=this._messages;return t[e]||(t[e]=this._compileMessage(e)),t[e]},r.prototype._getRelativeUnits=function(e,t){var n=this._fields[t];if(n.relative)return n.relative[e]},r.prototype._findFields=function(e){for(var t=r.__localeData__,n=t[e.toLowerCase()];n;){if(n.fields)return n.fields;n=n.parentLocale&&t[n.parentLocale.toLowerCase()]}throw new Error(\"Locale data added to IntlRelativeFormat is missing `fields` for :\"+e)},r.prototype._format=function(e,t){var n=t&&void 0!==t.now?t.now:a.dateNow();if(void 0===e&&(e=n),!isFinite(n))throw new RangeError(\"The `now` option provided to IntlRelativeFormat#format() is not in valid range.\");if(!isFinite(e))throw new RangeError(\"The date value provided to IntlRelativeFormat#format() is not in valid range.\");var r=i.default(n,e),o=this._options.units||this._selectUnits(r),u=r[o];if(\"numeric\"!==this._options.style){var l=this._getRelativeUnits(u,o);if(l)return l}return this._getMessage(o).format({0:Math.abs(u),when:u<0?\"past\":\"future\"})},r.prototype._isValidUnits=function(e){if(!e||a.arrIndexOf.call(u,e)>=0)return!0;if(\"string\"===typeof e){var t=/s$/.test(e)&&e.substr(0,e.length-1);if(t&&a.arrIndexOf.call(u,t)>=0)throw new Error('\"'+e+'\" is not a valid IntlRelativeFormat `units` value, did you mean: '+t)}throw new Error('\"'+e+'\" is not a valid IntlRelativeFormat `units` value, it must be one of: \"'+u.join('\", \"')+'\"')},r.prototype._resolveLocale=function(e){\"string\"===typeof e&&(e=[e]),e=(e||[]).concat(r.defaultLocale);var t,n,o,i,a=r.__localeData__;for(t=0,n=e.length;t<n;t+=1)for(o=e[t].toLowerCase().split(\"-\");o.length;){if(i=a[o.join(\"-\")])return i.locale;o.pop()}var u=e.pop();throw new Error(\"No locale data has been added to IntlRelativeFormat for: \"+e.join(\", \")+\", or the default locale: \"+u)},r.prototype._resolveStyle=function(e){if(!e)return l[0];if(a.arrIndexOf.call(l,e)>=0)return e;throw new Error('\"'+e+'\" is not a valid IntlRelativeFormat `style` value, it must be one of: \"'+l.join('\", \"')+'\"')},r.prototype._selectUnits=function(e){var t,n,o,i=u.filter(function(e){return e.indexOf(\"-short\")<1});for(t=0,n=i.length;t<n&&(o=i[t],!(Math.abs(e[o])<r.thresholds[o]));t+=1);return o}},function(e,t,n){\"use strict\";function r(e){return 400*e/146097}function o(e){var t=new Date(e);return t.setHours(0,0,0,0),t}function i(e,t){var n=o(e),r=o(t),i=n.getTime()-n.getTimezoneOffset()*l,a=r.getTime()-r.getTimezoneOffset()*l;return Math.round((i-a)/c)}function a(e,t){e=+e,t=+t;var n=u(t-e),o=u(n/1e3),a=u(o/60),l=u(a/60),c=i(t,e),s=u(c/7),f=r(c),d=u(12*f),p=u(f);return{millisecond:n,second:o,\"second-short\":o,minute:a,\"minute-short\":a,hour:l,\"hour-short\":l,day:c,\"day-short\":c,week:s,\"week-short\":s,month:d,\"month-short\":d,year:p,\"year-short\":p}}Object.defineProperty(t,\"__esModule\",{value:!0});var u=Math.round,l=6e4,c=864e5;t.default=a},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=Object.prototype.hasOwnProperty,o=Object.prototype.toString,i=function(){try{return!!Object.defineProperty({},\"a\",{})}catch(e){return!1}}(),a=(!i&&Object.prototype.__defineGetter__,i?Object.defineProperty:function(e,t,n){\"get\"in n&&e.__defineGetter__?e.__defineGetter__(t,n.get):(!r.call(e,t)||\"value\"in n)&&(e[t]=n.value)});t.defineProperty=a;var u=Object.create||function(e,t){function n(){}var o,i;n.prototype=e,o=new n;for(i in t)r.call(t,i)&&a(o,i,t[i]);return o};t.objCreate=u;var l=Array.prototype.indexOf||function(e,t){var n=this;if(!n.length)return-1;for(var r=t||0,o=n.length;r<o;r++)if(n[r]===e)return r;return-1};t.arrIndexOf=l;var c=Array.isArray||function(e){return\"[object Array]\"===o.call(e)};t.isArray=c;var s=Date.now||function(){return(new Date).getTime()};t.dateNow=s},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default={locale:\"en\",pluralRuleFunction:function(e,t){var n=String(e).split(\".\"),r=!n[1],o=Number(n[0])==e,i=o&&n[0].slice(-1),a=o&&n[0].slice(-2);return t?1==i&&11!=a?\"one\":2==i&&12!=a?\"two\":3==i&&13!=a?\"few\":\"other\":1==e&&r?\"one\":\"other\"},fields:{year:{displayName:\"year\",relative:{0:\"this year\",1:\"next year\",\"-1\":\"last year\"},relativeTime:{future:{one:\"in {0} year\",other:\"in {0} years\"},past:{one:\"{0} year ago\",other:\"{0} years ago\"}}},\"year-short\":{displayName:\"yr.\",relative:{0:\"this yr.\",1:\"next yr.\",\"-1\":\"last yr.\"},relativeTime:{future:{one:\"in {0} yr.\",other:\"in {0} yr.\"},past:{one:\"{0} yr. ago\",other:\"{0} yr. ago\"}}},month:{displayName:\"month\",relative:{0:\"this month\",1:\"next month\",\"-1\":\"last month\"},relativeTime:{future:{one:\"in {0} month\",other:\"in {0} months\"},past:{one:\"{0} month ago\",other:\"{0} months ago\"}}},\"month-short\":{displayName:\"mo.\",relative:{0:\"this mo.\",1:\"next mo.\",\"-1\":\"last mo.\"},relativeTime:{future:{one:\"in {0} mo.\",other:\"in {0} mo.\"},past:{one:\"{0} mo. ago\",other:\"{0} mo. ago\"}}},week:{displayName:\"week\",relativePeriod:\"the week of {0}\",relative:{0:\"this week\",1:\"next week\",\"-1\":\"last week\"},relativeTime:{future:{one:\"in {0} week\",other:\"in {0} weeks\"},past:{one:\"{0} week ago\",other:\"{0} weeks ago\"}}},\"week-short\":{displayName:\"wk.\",relativePeriod:\"the week of {0}\",relative:{0:\"this wk.\",1:\"next wk.\",\"-1\":\"last wk.\"},relativeTime:{future:{one:\"in {0} wk.\",other:\"in {0} wk.\"},past:{one:\"{0} wk. ago\",other:\"{0} wk. ago\"}}},day:{displayName:\"day\",relative:{0:\"today\",1:\"tomorrow\",\"-1\":\"yesterday\"},relativeTime:{future:{one:\"in {0} day\",other:\"in {0} days\"},past:{one:\"{0} day ago\",other:\"{0} days ago\"}}},\"day-short\":{displayName:\"day\",relative:{0:\"today\",1:\"tomorrow\",\"-1\":\"yesterday\"},relativeTime:{future:{one:\"in {0} day\",other:\"in {0} days\"},past:{one:\"{0} day ago\",other:\"{0} days ago\"}}},hour:{displayName:\"hour\",relative:{0:\"this hour\"},relativeTime:{future:{one:\"in {0} hour\",other:\"in {0} hours\"},past:{one:\"{0} hour ago\",other:\"{0} hours ago\"}}},\"hour-short\":{displayName:\"hr.\",relative:{0:\"this hour\"},relativeTime:{future:{one:\"in {0} hr.\",other:\"in {0} hr.\"},past:{one:\"{0} hr. ago\",other:\"{0} hr. ago\"}}},minute:{displayName:\"minute\",relative:{0:\"this minute\"},relativeTime:{future:{one:\"in {0} minute\",other:\"in {0} minutes\"},past:{one:\"{0} minute ago\",other:\"{0} minutes ago\"}}},\"minute-short\":{displayName:\"min.\",relative:{0:\"this minute\"},relativeTime:{future:{one:\"in {0} min.\",other:\"in {0} min.\"},past:{one:\"{0} min. ago\",other:\"{0} min. ago\"}}},second:{displayName:\"second\",relative:{0:\"now\"},relativeTime:{future:{one:\"in {0} second\",other:\"in {0} seconds\"},past:{one:\"{0} second ago\",other:\"{0} seconds ago\"}}},\"second-short\":{displayName:\"sec.\",relative:{0:\"now\"},relativeTime:{future:{one:\"in {0} sec.\",other:\"in {0} sec.\"},past:{one:\"{0} sec. ago\",other:\"{0} sec. ago\"}}}}}},function(e,t){},function(e,t,n){\"use strict\";function r(){}function o(){}var i=n(244);o.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,o,a){if(a!==i){var u=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw u.name=\"Invariant Violation\",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:r};return n.PropTypes=n,n}},function(e,t,n){\"use strict\";e.exports=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"},function(e,t,n){\"use strict\";function r(e){return i.isMemo(e)?c:s[e.$$typeof]||a}function o(e,t,n){if(\"string\"!==typeof t){if(y){var i=h(t);i&&i!==y&&o(e,i,n)}var a=d(t);p&&(a=a.concat(p(t)));for(var l=r(e),c=r(t),s=0;s<a.length;++s){var v=a[s];if(!u[v]&&(!n||!n[v])&&(!c||!c[v])&&(!l||!l[v])){var g=m(t,v);try{f(e,v,g)}catch(e){}}}return e}return e}var i=n(118),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},u={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},c={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};s[i.ForwardRef]=l;var f=Object.defineProperty,d=Object.getOwnPropertyNames,p=Object.getOwnPropertySymbols,m=Object.getOwnPropertyDescriptor,h=Object.getPrototypeOf,y=Object.prototype;e.exports=o},function(e,t,n){\"use strict\";function r(e){if(\"object\"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case p:case m:case l:case s:case c:case y:return e;default:switch(e=e&&e.$$typeof){case d:case h:case f:return e;default:return t}}case g:case v:case u:return t}}}function o(e){return r(e)===m}Object.defineProperty(t,\"__esModule\",{value:!0});var i=\"function\"===typeof Symbol&&Symbol.for,a=i?Symbol.for(\"react.element\"):60103,u=i?Symbol.for(\"react.portal\"):60106,l=i?Symbol.for(\"react.fragment\"):60107,c=i?Symbol.for(\"react.strict_mode\"):60108,s=i?Symbol.for(\"react.profiler\"):60114,f=i?Symbol.for(\"react.provider\"):60109,d=i?Symbol.for(\"react.context\"):60110,p=i?Symbol.for(\"react.async_mode\"):60111,m=i?Symbol.for(\"react.concurrent_mode\"):60111,h=i?Symbol.for(\"react.forward_ref\"):60112,y=i?Symbol.for(\"react.suspense\"):60113,v=i?Symbol.for(\"react.memo\"):60115,g=i?Symbol.for(\"react.lazy\"):60116;t.typeOf=r,t.AsyncMode=p,t.ConcurrentMode=m,t.ContextConsumer=d,t.ContextProvider=f,t.Element=a,t.ForwardRef=h,t.Fragment=l,t.Lazy=g,t.Memo=v,t.Portal=u,t.Profiler=s,t.StrictMode=c,t.Suspense=y,t.isValidElementType=function(e){return\"string\"===typeof e||\"function\"===typeof e||e===l||e===m||e===s||e===c||e===y||\"object\"===typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===v||e.$$typeof===f||e.$$typeof===d||e.$$typeof===h)},t.isAsyncMode=function(e){return o(e)||r(e)===p},t.isConcurrentMode=o,t.isContextConsumer=function(e){return r(e)===d},t.isContextProvider=function(e){return r(e)===f},t.isElement=function(e){return\"object\"===typeof e&&null!==e&&e.$$typeof===a},t.isForwardRef=function(e){return r(e)===h},t.isFragment=function(e){return r(e)===l},t.isLazy=function(e){return r(e)===g},t.isMemo=function(e){return r(e)===v},t.isPortal=function(e){return r(e)===u},t.isProfiler=function(e){return r(e)===s},t.isStrictMode=function(e){return r(e)===c},t.isSuspense=function(e){return r(e)===y}},function(e,t,n){\"use strict\";function r(e){return JSON.stringify(e.map(function(e){return e&&\"object\"===typeof e?o(e):e}))}function o(e){return Object.keys(e).sort().map(function(t){var n;return n={},n[t]=e[t],n})}var i=function(e,t){return void 0===t&&(t={}),function(){for(var n,o=[],i=0;i<arguments.length;i++)o[i]=arguments[i];var a=r(o),u=a&&t[a];return u||(u=new((n=e).bind.apply(n,[void 0].concat(o))),a&&(t[a]=u)),u}};t.a=i},function(e,t,n){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var o=n(105),i=r(o),a=n(252),u=r(a),l=n(253),c=r(l),s=(0,i.default)({},c.default,u.default);t.default=s,e.exports=t.default},function(e,t,n){n(250),e.exports=n(7).Object.assign},function(e,t,n){var r=n(27);r(r.S+r.F,\"Object\",{assign:n(251)})},function(e,t,n){\"use strict\";var r=n(22),o=n(69),i=n(114),a=n(109),u=n(68),l=n(76),c=Object.assign;e.exports=!c||n(46)(function(){var e={},t={},n=Symbol(),r=\"abcdefghijklmnopqrst\";return e[n]=7,r.split(\"\").forEach(function(e){t[e]=e}),7!=c({},e)[n]||Object.keys(c({},t)).join(\"\")!=r})?function(e,t){for(var n=u(e),c=arguments.length,s=1,f=i.f,d=a.f;c>s;)for(var p,m=l(arguments[s++]),h=f?o(m).concat(f(m)):o(m),y=h.length,v=0;y>v;)p=h[v++],r&&!d.call(m,p)||(n[p]=m[p]);return n}:c},function(e,t){e.exports={\"action.name.connect\":\"Connect\",\"availableCarriers.title\":\"Available Carriers\",\"batchList.create\":\"Create Batch\",\"batch.selectOrigin.originLocation.required\":\"Please specify where the Shipments will be sent from.\",\"batch.selectOrigin.originLocation\":\"Origin Location\",\"batch.confirmOrders.selectedOrderIndexes.required\":\"Please select at least one order.\",\"batch.prepareBookForm.hasTroubleWhileFetchingData\":\"Trouble fetching data from Temando API. Order cannot be included in this Batch.\",\"batch.prepareBookForm.international\":\"This is an international route\",\"batch.prepareBookForm.packageEmpty\":\"Package Empty\",\"batch.prepareBookForm.packages.packageType\":\"Package Type\",\"batch.prepareBookForm.packages.totalWeight\":\"Total Weight\",\"batch.prepareBookForm.packages.weightUnit\":\"Weight Unit\",\"batch.prepareBookForm.packages.packageContents\":\"Package Contents\",\"batch.prepareBookForm.packages.addPackage\":\"+ Add Another Package\",\"batch.prepareBookForm.packages.prePack\":\"Pre-pack(x1)\",\"batch.prepareBookForm.hideDetails\":\"Hide Details\",\"batch.prepareBookForm.showDetails\":\"Show Details\",\"batch.prepareBookForm.packages.title\":\"1. Select Packaging\",\"batch.prepareBookForm.quote.title\":\"2. Get and select a Shipping Quote\",\"batch.prepareBookForm.bookingSummary.title\":\"3. Booking Summary\",\"batch.prepareBookForm.bookingSummary.selectedService\":\"Fulfill with Selected Service\",\"batch.prepareBookForm.bookingSummary.noSelectedService\":\"No Service Selected\",\"batch.prepareBookForm.packages.required\":\"Packages must be selected.\",\"batch.prepareBookForm.packages.weight.required\":\"Packages must have a weight.\",\"batch.prepareBookForm.packages.weight.maximum.greater\":\"Exceeds maximum allowable weight ({maximumWeight} {weightUnit}) for this package type.\",\"batch.prepareBookForm.packages.weight.unit.required\":\"Weight units must be selected.\",\"batch.prepareBookForm.packages.items.required\":\"Package must have at least one item.\",\"batch.prepareBookForm.packages.items.packedMaximum.greater\":\"Packed items is more than the quantity ordered. Please correct and try again.\",\"batch.prepareBookForm.selectedService.required\":\"Quote must be selected.\",\"batch.prepareBookForm.weightUnit.missing\":\"Product has a missing weight.\",\"batch.error.unableToBookOrders.title\":\"Unable to Book Orders.\",\"batch.error.unableToBookOrders.detail\":\"There are Fields that are missing required information. Please check that all selected Orders across all pages are populated correctly.\",\"batch.error.fetchTemandoOrderError\":\"One or more orders can not be included in this Batch. Please see relevant order(s) for error details.\",\"batchList.refresh\":\"Refresh\",\"carriersList.column.action\":\"Action\",\"carriersList.column.name\":\"Name\",\"carriersList.column.services\":\"Services\",\"containerDropdownField.customBox\":\"Custom Box\",\"containerDropdownField.customSatchel\":\"Custom Satchel\",\"containerForm.notFound\":\"Container not found\",\"dateTimeInput.buttonText\":\"Select Date\",\"dispatchList.create\":\"Create Dispatch\",\"dispatchList.refresh\":\"Refresh\",\"error.checkYourData\":\"Something went wrong. Check data entered and try again.\",\"error.checkYourDataErrorCode\":\"Something went wrong. Check data entered and try again. Support code: {errorCode}\",\"error.errorCode\":\"Support code: {errorCode}\",\"error.genericProblem\":\"Something went wrong.\",\"error.genericProblemErrorCode\":\"Something went wrong. Support code: {errorCode}\",\"error.noAccess\":\"Access denied.\",\"error.noAccessErrorCode\":\"Access denied. Support code: {errorCode}\",\"form.carrierActivateUpsExisting.accessLicenseNumber\":\"Access license number\",\"form.carrierActivateUpsExisting.accountNumber\":\"Account number\",\"form.carrierActivateUpsExisting.addressLine\":\"Address\",\"form.carrierActivateUpsExisting.administrativeArea\":\"State / province code\",\"form.carrierActivateUpsExisting.fullName\":\"Full name\",\"form.carrierActivateUpsExisting.iso31662CountryCode\":\"Country code\",\"form.carrierActivateUpsExisting.locality\":\"City\",\"form.carrierActivateUpsExisting.password\":\"Password\",\"form.carrierActivateUpsExisting.phone\":\"Phone\",\"form.carrierActivateUpsExisting.postalCode\":\"Postal code\",\"form.carrierActivateUpsExisting.username\":\"Login / username\",\"form.sample.dimensionUnit\":\"Dimensions unit\",\"form.sample.height\":\"Height\",\"form.sample.length\":\"Length\",\"form.sample.name\":\"Name\",\"form.sample.type\":\"Type\",\"form.sample.weight\":\"Weight\",\"form.sample.weightUnit\":\"Weight unit\",\"form.sample.width\":\"Width\",\"form.validate.date\":\"Enter a date\",\"form.validate.number\":\"Enter a number\",\"form.validate.time\":\"Enter a time\",\"gettingStarted.carriers.buttonLabel\":\"Activate a Carrier\",\"gettingStarted.carriers.sentence\":\"Add carriers you would like to use\",\"gettingStarted.locations.buttonLabel\":\"Create a Location\",\"gettingStarted.locations.sentence\":\"Add an initial shipping location\",\"gettingStarted.orders.buttonLabel\":\"My Orders\",\"gettingStarted.orders.sentence\":\"Ship your first order\",\"gettingStarted.packaging.buttonLabel\":\"Create Packaging\",\"gettingStarted.packaging.sentence\":\"Add your package types\",\"gettingStarted.stepsHeading\":\"Steps to get up and running\",\"grid.actionsColumnTitle\":\"Actions\",\"grid.noRecords\":\"We couldn't find any records.\",\"grid.recordsFound\":\"{count, number} {count, plural, one {record} other {records}} found\",\"handleTokenExpiry.error\":\"Session expired. Refresh the page.\",\"icon.trash\":\"Trash can icon\",\"locationForm.notFound\":\"Location not found\",\"notice.entrypointFailed\":\"Something went wrong. Try refreshing the page.\",\"notice.failed\":\"Loading Failed\",\"notice.loading\":\"Loading...\",\"orderShip.bookShipment\":\"Book Shipment\",\"orderShip.additionalInformation\":\"Additional Information\",\"orderShip.customerReference\":\"Shipment Reference\",\"orderShip.customerReferenceHelpText\":\"This field is used to associate bookings between a carrier and a customer. The \\u2018Magento Customer ID\\u2019 will be used, however this can be edited if required.\",\"orderShip.customerReference.error.length\":\"Maximum of 15 characters.\",\"orderShip.routeInformation\":\"Route Information\",\"orderShip.originLocation\":\"Origin Location\",\"orderShip.isShipmentInternational\":\"International\",\"orderShip.isInternationalRoute\":\"This is an international route\",\"orderShip.packages\":\"Packages\",\"orderShip.itemsOrdered\":\"Items Ordered\",\"orderShip.internationalItemDetails\":\"International Item Details\",\"orderShip.comments\":\"Shipment Comments\",\"orderShip.comments.controlLabel\":\"Comments\",\"orderShip.controlSet.hasNeverExpandedWarning\":\"Review inside this form section before quoting and booking.\",\"orderShip.customersChoice\":\"Use customer's choice\",\"orderShip.exportAuInfo\":\"Australian Export Information\",\"orderShip.exportAuInfo.exportDeclarationNumber\":\"Export Declaration Number (EDN)\",\"orderShip.exportUsInfo\":\"United States Export Information\",\"orderShip.exportUsInfo.electronicExportInformation\":\"Electronic Export Information (EEI)\",\"orderShip.exportUsInfo.exemptionExclusionLegend\":\"Exemption Exclusion Legend (EEL)\",\"orderShip.exportUsInfo.internalTransactionNumber\":\"Internal Transaction Number (ITN)\",\"orderShip.internationalInfo\":\"International Shipment Information\",\"orderShip.nonExclusiveCarriers\":\"All non-exclusive carriers\",\"orderShip.packages.itemMissingWeight\":\"One or more items has a missing weight. Please validate Gross Weight.\",\"orderShip.timePeriod.between\":\"Between {start} and {end}\",\"orderShip.timePeriod.from\":\"From {start}\",\"orderShip.timePeriod.upTo\":\"Up to {end}\",\"orderShip.item.missingWeight\":\"Item has missing weight\",\"orderShip.packagesSection.packages.items.packedMaximum.greater\":\"Packed items is more than the quantity ordered. Please correct and try again.\",\"powered.by.temando\":\"- Powered by Temando\\xae\",\"returnShip.addressInformation\":\"Address Information\",\"returnShip.authorisedItemsToReturn\":\"Authorised Items to Return\",\"returnShip.bookReturn\":\"Book Return\",\"returnShip.destinationLocation\":\"Return Address\",\"returnShip.orderShippingAddress\":\"Order Shipping Address\",\"returnShip.packages\":\"Return Packages\",\"ship.addPackage\":\"Add Another Package\",\"ship.getQuotes\":\"Get Quotes\",\"ship.hideQuoteErrors\":\"Hide All Errors\",\"ship.moreQuoteErrors\":\"Show {count} More Errors\",\"ship.noQuotes\":\"No eligible quotes for current selection.\",\"ship.package.code\":\"Code\",\"ship.package.dimensionUnits\":\"Dim. Units\",\"ship.package.height\":\"Height\",\"ship.package.length\":\"Length\",\"ship.package.packageType\":\"Package Type\",\"ship.package.width\":\"Width\",\"ship.package.prepackaging\":\"Pre-Packaging\",\"ship.quoteFromLabel\":\"Quote from Shipping Experience\",\"ship.quotes\":\"Shipping Quotes\",\"ship.showQuoteErrors\":\"Show Errors\",\"ship.someQuoteErrors\":\"Some errors have been returned while quoting.\",\"ship.validationErrorsQuotes\":\"Unable to get quotes. There is an issue with the information provided. Check the information and try again.\",\"ship.weight\":\"Weight\",\"upcomingCarriers.title\":\"Upcoming Carriers\",\"user.billingDetails.useForShippingOrigin.label\":\"Use billing address for first shipping origin\",\"userRegistration.welcomeParagraph\":\"Experience a new level of efficiency with Magento Shipping. Magento Shipping addresses common challenges in the pre- to post-purchase stages, by balancing great customer experience with streamlined fulfillment. Sign up now to gain improved operational efficiency, reduced shipping costs, and increased customer satisfaction with Magento Shipping.\",\"userRegistration.welcomeTitle\":\"Welcome to Magento Shipping\",\"workflow.carrierActivateUps.existingDone\":\"Thank you for submitting your UPS account details. We will verify the information with the carrier and notify you when this carrier is live in your account.\",\"workflow.carrierActivateUps.hasExisting\":\"Do you have an existing UPS account?\",\"workflow.carrierActivateUps.new\":\"Creating a new UPS account is not yet supported.\"}},function(e,t){e.exports={\"common.countries.ad\":\"Andorra\",\"common.countries.ae\":\"United Arab Emirates\",\"common.countries.af\":\"Afghanistan\",\"common.countries.ag\":\"Antigua and Barbuda\",\"common.countries.ai\":\"Anguilla\",\"common.countries.al\":\"Albania\",\"common.countries.am\":\"Armenia\",\"common.countries.ao\":\"Angola\",\"common.countries.aq\":\"Antarctica\",\"common.countries.ar\":\"Argentina\",\"common.countries.as\":\"American Samoa\",\"common.countries.at\":\"Austria\",\"common.countries.au\":\"Australia\",\"common.countries.aw\":\"Aruba\",\"common.countries.ax\":\"Aland Islands\",\"common.countries.az\":\"Azerbaijan\",\"common.countries.ba\":\"Bosnia and Herzegovina\",\"common.countries.bb\":\"Barbados\",\"common.countries.bd\":\"Bangladesh\",\"common.countries.be\":\"Belgium\",\"common.countries.bf\":\"Burkina Faso\",\"common.countries.bg\":\"Bulgaria\",\"common.countries.bh\":\"Bahrain\",\"common.countries.bi\":\"Burundi\",\"common.countries.bj\":\"Benin\",\"common.countries.bl\":\"Saint Barthelemy\",\"common.countries.bm\":\"Bermuda\",\"common.countries.bn\":\"Brunei\",\"common.countries.bo\":\"Bolivia\",\"common.countries.bq\":\"Bonaire, Saint Eustatius and Saba \",\"common.countries.br\":\"Brazil\",\"common.countries.bs\":\"Bahamas\",\"common.countries.bt\":\"Bhutan\",\"common.countries.bv\":\"Bouvet Island\",\"common.countries.bw\":\"Botswana\",\"common.countries.by\":\"Belarus\",\"common.countries.bz\":\"Belize\",\"common.countries.ca\":\"Canada\",\"common.countries.cc\":\"Cocos Islands\",\"common.countries.cd\":\"Democratic Republic of the Congo\",\"common.countries.cf\":\"Central African Republic\",\"common.countries.cg\":\"Republic of the Congo\",\"common.countries.ch\":\"Switzerland\",\"common.countries.ci\":\"Ivory Coast\",\"common.countries.ck\":\"Cook Islands\",\"common.countries.cl\":\"Chile\",\"common.countries.cm\":\"Cameroon\",\"common.countries.cn\":\"China\",\"common.countries.co\":\"Colombia\",\"common.countries.cr\":\"Costa Rica\",\"common.countries.cu\":\"Cuba\",\"common.countries.cv\":\"Cape Verde\",\"common.countries.cw\":\"Curacao\",\"common.countries.cx\":\"Christmas Island\",\"common.countries.cy\":\"Cyprus\",\"common.countries.cz\":\"Czech Republic\",\"common.countries.de\":\"Germany\",\"common.countries.dj\":\"Djibouti\",\"common.countries.dk\":\"Denmark\",\"common.countries.dm\":\"Dominica\",\"common.countries.do\":\"Dominican Republic\",\"common.countries.dz\":\"Algeria\",\"common.countries.ec\":\"Ecuador\",\"common.countries.ee\":\"Estonia\",\"common.countries.eg\":\"Egypt\",\"common.countries.eh\":\"Western Sahara\",\"common.countries.er\":\"Eritrea\",\"common.countries.es\":\"Spain\",\"common.countries.et\":\"Ethiopia\",\"common.countries.fi\":\"Finland\",\"common.countries.fj\":\"Fiji\",\"common.countries.fk\":\"Falkland Islands\",\"common.countries.fm\":\"Micronesia\",\"common.countries.fo\":\"Faroe Islands\",\"common.countries.fr\":\"France\",\"common.countries.ga\":\"Gabon\",\"common.countries.gb\":\"United Kingdom\",\"common.countries.gd\":\"Grenada\",\"common.countries.ge\":\"Georgia\",\"common.countries.gf\":\"French Guiana\",\"common.countries.gg\":\"Guernsey\",\"common.countries.gh\":\"Ghana\",\"common.countries.gi\":\"Gibraltar\",\"common.countries.gl\":\"Greenland\",\"common.countries.gm\":\"Gambia\",\"common.countries.gn\":\"Guinea\",\"common.countries.gp\":\"Guadeloupe\",\"common.countries.gq\":\"Equatorial Guinea\",\"common.countries.gr\":\"Greece\",\"common.countries.gs\":\"South Georgia and the South Sandwich Islands\",\"common.countries.gt\":\"Guatemala\",\"common.countries.gu\":\"Guam\",\"common.countries.gw\":\"Guinea-Bissau\",\"common.countries.gy\":\"Guyana\",\"common.countries.hk\":\"Hong Kong\",\"common.countries.hm\":\"Heard Island and McDonald Islands\",\"common.countries.hn\":\"Honduras\",\"common.countries.hr\":\"Croatia\",\"common.countries.ht\":\"Haiti\",\"common.countries.hu\":\"Hungary\",\"common.countries.id\":\"Indonesia\",\"common.countries.ie\":\"Ireland\",\"common.countries.il\":\"Israel\",\"common.countries.im\":\"Isle of Man\",\"common.countries.in\":\"India\",\"common.countries.io\":\"British Indian Ocean Territory\",\"common.countries.iq\":\"Iraq\",\"common.countries.ir\":\"Iran\",\"common.countries.is\":\"Iceland\",\"common.countries.it\":\"Italy\",\"common.countries.je\":\"Jersey\",\"common.countries.jm\":\"Jamaica\",\"common.countries.jo\":\"Jordan\",\"common.countries.jp\":\"Japan\",\"common.countries.ke\":\"Kenya\",\"common.countries.kg\":\"Kyrgyzstan\",\"common.countries.kh\":\"Cambodia\",\"common.countries.ki\":\"Kiribati\",\"common.countries.km\":\"Comoros\",\"common.countries.kn\":\"Saint Kitts and Nevis\",\"common.countries.kp\":\"North Korea\",\"common.countries.kr\":\"South Korea\",\"common.countries.kw\":\"Kuwait\",\"common.countries.ky\":\"Cayman Islands\",\"common.countries.kz\":\"Kazakhstan\",\"common.countries.la\":\"Laos\",\"common.countries.lb\":\"Lebanon\",\"common.countries.lc\":\"Saint Lucia\",\"common.countries.li\":\"Liechtenstein\",\"common.countries.lk\":\"Sri Lanka\",\"common.countries.lr\":\"Liberia\",\"common.countries.ls\":\"Lesotho\",\"common.countries.lt\":\"Lithuania\",\"common.countries.lu\":\"Luxembourg\",\"common.countries.lv\":\"Latvia\",\"common.countries.ly\":\"Libya\",\"common.countries.ma\":\"Morocco\",\"common.countries.mc\":\"Monaco\",\"common.countries.md\":\"Moldova\",\"common.countries.me\":\"Montenegro\",\"common.countries.mf\":\"Saint Martin\",\"common.countries.mg\":\"Madagascar\",\"common.countries.mh\":\"Marshall Islands\",\"common.countries.mk\":\"Macedonia\",\"common.countries.ml\":\"Mali\",\"common.countries.mm\":\"Myanmar\",\"common.countries.mn\":\"Mongolia\",\"common.countries.mo\":\"Macao\",\"common.countries.mp\":\"Northern Mariana Islands\",\"common.countries.mq\":\"Martinique\",\"common.countries.mr\":\"Mauritania\",\"common.countries.ms\":\"Montserrat\",\"common.countries.mt\":\"Malta\",\"common.countries.mu\":\"Mauritius\",\"common.countries.mv\":\"Maldives\",\"common.countries.mw\":\"Malawi\",\"common.countries.mx\":\"Mexico\",\"common.countries.my\":\"Malaysia\",\"common.countries.mz\":\"Mozambique\",\"common.countries.na\":\"Namibia\",\"common.countries.nc\":\"New Caledonia\",\"common.countries.ne\":\"Niger\",\"common.countries.nf\":\"Norfolk Island\",\"common.countries.ng\":\"Nigeria\",\"common.countries.ni\":\"Nicaragua\",\"common.countries.nl\":\"Netherlands\",\"common.countries.no\":\"Norway\",\"common.countries.np\":\"Nepal\",\"common.countries.nr\":\"Nauru\",\"common.countries.nu\":\"Niue\",\"common.countries.nz\":\"New Zealand\",\"common.countries.om\":\"Oman\",\"common.countries.pa\":\"Panama\",\"common.countries.pe\":\"Peru\",\"common.countries.pf\":\"French Polynesia\",\"common.countries.pg\":\"Papua New Guinea\",\"common.countries.ph\":\"Philippines\",\"common.countries.pk\":\"Pakistan\",\"common.countries.pl\":\"Poland\",\"common.countries.pm\":\"Saint Pierre and Miquelon\",\"common.countries.pn\":\"Pitcairn\",\"common.countries.pr\":\"Puerto Rico\",\"common.countries.ps\":\"Palestinian Territory\",\"common.countries.pt\":\"Portugal\",\"common.countries.pw\":\"Palau\",\"common.countries.py\":\"Paraguay\",\"common.countries.qa\":\"Qatar\",\"common.countries.re\":\"Reunion\",\"common.countries.ro\":\"Romania\",\"common.countries.rs\":\"Serbia\",\"common.countries.ru\":\"Russia\",\"common.countries.rw\":\"Rwanda\",\"common.countries.sa\":\"Saudi Arabia\",\"common.countries.sb\":\"Solomon Islands\",\"common.countries.sc\":\"Seychelles\",\"common.countries.sd\":\"Sudan\",\"common.countries.se\":\"Sweden\",\"common.countries.sg\":\"Singapore\",\"common.countries.sh\":\"Saint Helena\",\"common.countries.si\":\"Slovenia\",\"common.countries.sj\":\"Svalbard and Jan Mayen\",\"common.countries.sk\":\"Slovakia\",\"common.countries.sl\":\"Sierra Leone\",\"common.countries.sm\":\"San Marino\",\"common.countries.sn\":\"Senegal\",\"common.countries.so\":\"Somalia\",\"common.countries.sr\":\"Suriname\",\"common.countries.ss\":\"South Sudan\",\"common.countries.st\":\"Sao Tome and Principe\",\"common.countries.sv\":\"El Salvador\",\"common.countries.sx\":\"Sint Maarten\",\"common.countries.sy\":\"Syria\",\"common.countries.sz\":\"Swaziland\",\"common.countries.tc\":\"Turks and Caicos Islands\",\"common.countries.td\":\"Chad\",\"common.countries.tf\":\"French Southern Territories\",\"common.countries.tg\":\"Togo\",\"common.countries.th\":\"Thailand\",\"common.countries.tj\":\"Tajikistan\",\"common.countries.tk\":\"Tokelau\",\"common.countries.tl\":\"East Timor\",\"common.countries.tm\":\"Turkmenistan\",\"common.countries.tn\":\"Tunisia\",\"common.countries.to\":\"Tonga\",\"common.countries.tr\":\"Turkey\",\"common.countries.tt\":\"Trinidad and Tobago\",\"common.countries.tv\":\"Tuvalu\",\"common.countries.tw\":\"Taiwan\",\"common.countries.tz\":\"Tanzania\",\"common.countries.ua\":\"Ukraine\",\"common.countries.ug\":\"Uganda\",\"common.countries.um\":\"United States Minor Outlying Islands\",\"common.countries.us\":\"United States\",\"common.countries.uy\":\"Uruguay\",\"common.countries.uz\":\"Uzbekistan\",\"common.countries.va\":\"Vatican\",\"common.countries.vc\":\"Saint Vincent and the Grenadines\",\"common.countries.ve\":\"Venezuela\",\"common.countries.vg\":\"British Virgin Islands\",\"common.countries.vi\":\"U.S. Virgin Islands\",\"common.countries.vn\":\"Vietnam\",\"common.countries.vu\":\"Vanuatu\",\"common.countries.wf\":\"Wallis and Futuna\",\"common.countries.ws\":\"Samoa\",\"common.countries.xk\":\"Kosovo\",\"common.countries.ye\":\"Yemen\",\"common.countries.yt\":\"Mayotte\",\"common.countries.za\":\"South Africa\",\"common.countries.zm\":\"Zambia\",\"common.countries.zw\":\"Zimbabwe\",\"common.usStates.al\":\"Alabama\",\"common.usStates.ak\":\"Alaska\",\"common.usStates.az\":\"Arizona\",\"common.usStates.ar\":\"Arkansas\",\"common.usStates.ca\":\"California\",\"common.usStates.co\":\"Colorado\",\"common.usStates.ct\":\"Connecticut\",\"common.usStates.de\":\"Delaware\",\"common.usStates.fl\":\"Florida\",\"common.usStates.ga\":\"Georgia\",\"common.usStates.hi\":\"Hawaii\",\"common.usStates.id\":\"Idaho\",\"common.usStates.il\":\"Illinois\",\"common.usStates.in\":\"Indiana\",\"common.usStates.ia\":\"Iowa\",\"common.usStates.ks\":\"Kansas\",\"common.usStates.ky\":\"Kentucky\",\"common.usStates.la\":\"Louisiana\",\"common.usStates.me\":\"Maine\",\"common.usStates.md\":\"Maryland\",\"common.usStates.ma\":\"Massachusetts\",\"common.usStates.mi\":\"Michigan\",\"common.usStates.mn\":\"Minnesota\",\"common.usStates.ms\":\"Mississippi\",\"common.usStates.mo\":\"Missouri\",\"common.usStates.mt\":\"Montana\",\"common.usStates.ne\":\"Nebraska\",\"common.usStates.nv\":\"Nevada\",\"common.usStates.nh\":\"New Hampshire\",\"common.usStates.nj\":\"New Jersey\",\"common.usStates.nm\":\"New Mexico\",\"common.usStates.ny\":\"New York\",\"common.usStates.nc\":\"North Carolina\",\"common.usStates.nd\":\"North Dakota\",\"common.usStates.oh\":\"Ohio\",\"common.usStates.ok\":\"Oklahoma\",\"common.usStates.or\":\"Oregon\",\"common.usStates.pa\":\"Pennsylvania\",\"common.usStates.ri\":\"Rhode Island\",\"common.usStates.sc\":\"South Carolina\",\"common.usStates.sd\":\"South Dakota\",\"common.usStates.tn\":\"Tennessee\",\"common.usStates.tx\":\"Texas\",\"common.usStates.ut\":\"Utah\",\"common.usStates.vt\":\"Vermont\",\"common.usStates.va\":\"Virginia\",\"common.usStates.wa\":\"Washington\",\"common.usStates.wv\":\"West Virginia\",\"common.usStates.wi\":\"Wisconsin\",\"common.usStates.wy\":\"Wyoming\",\"common.auStates.qld\":\"Queensland\",\"common.auStates.nsw\":\"New South Wales\",\"common.auStates.act\":\"Australian Capital Territory\",\"common.auStates.vic\":\"Victoria\",\"common.auStates.tas\":\"Tasmania\",\"common.auStates.sa\":\"South Australia\",\"common.auStates.wa\":\"Western Australia\",\"common.auStates.nt\":\"Northern Territory\",\"common.back\":\"Back\",\"common.cancel\":\"Cancel\",\"common.continue\":\"Continue\",\"common.finish\":\"Finish\",\"common.no\":\"No\",\"common.next\":\"Next\",\"common.print\":\"Print\",\"common.select\":\"Select\",\"common.submitForm\":\"Save\",\"common.yes\":\"Yes\",\"common.retry\":\"Retry\",\"common.dimensionUnit.mm\":\"mm\",\"common.dimensionUnit.cm\":\"cm\",\"common.dimensionUnit.m\":\"m\",\"common.dimensionUnit.in\":\"in\",\"common.dimensionUnit.ft\":\"ft\",\"common.weightUnit.g\":\"g\",\"common.weightUnit.kg\":\"kg\",\"common.weightUnit.oz\":\"oz\",\"common.weightUnit.lb\":\"lb\",\"common.addressType.business\":\"Business\",\"common.addressType.residential\":\"Residential\",\"common.addressType.postOfficeBox\":\"Post office box\",\"common.validation.required\":\"This is a required field\",\"common.validation.greaterThan\":\"This number must be greater than {greaterThan}\"}}])});","UOL_PagSeguro/js/jquery.dataTables.min.js":"/*! DataTables 1.10.12\r\n * \u00c2\u00a92008-2015 SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\n/**\r\n * @summary     DataTables\r\n * @description Paginate, search and order HTML tables\r\n * @version     1.10.12\r\n * @file        jquery.dataTables.js\r\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\r\n * @contact     www.sprymedia.co.uk/contact\r\n * @copyright   Copyright 2008-2015 SpryMedia Ltd.\r\n *\r\n * This source file is free software, available under the following license:\r\n *   MIT license - http://datatables.net/license\r\n *\r\n * This source file is distributed in the hope that it will be useful, but\r\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\r\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\r\n *\r\n * For details please refer to: http://www.datatables.net\r\n */\r\n\r\n/*jslint evil: true, undef: true, browser: true */\r\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\r\n\r\n(function( factory ) {\r\n    \"use strict\";\r\n\r\n    if ( typeof define === 'function' && define.amd ) {\r\n        // AMD\r\n        define( ['jquery'], function ( $ ) {\r\n            return factory( $, window, document );\r\n        } );\r\n    }\r\n    else if ( typeof exports === 'object' ) {\r\n        // CommonJS\r\n        module.exports = function (root, $) {\r\n            if ( ! root ) {\r\n                // CommonJS environments without a window global must pass a\r\n                // root. This will give an error otherwise\r\n                root = window;\r\n            }\r\n\r\n            if ( ! $ ) {\r\n                $ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\r\n                    require('jquery') :\r\n                    require('jquery')( root );\r\n            }\r\n\r\n            return factory( $, root, root.document );\r\n        };\r\n    }\r\n    else {\r\n        // Browser\r\n        factory( jQuery, window, document );\r\n    }\r\n}\r\n(function( $, window, document, undefined ) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * DataTables is a plug-in for the jQuery Javascript library. It is a highly\r\n     * flexible tool, based upon the foundations of progressive enhancement,\r\n     * which will add advanced interaction controls to any HTML table. For a\r\n     * full list of features please refer to\r\n     * [DataTables.net](href=\"http://datatables.net).\r\n     *\r\n     * Note that the `DataTable` object is not a global variable but is aliased\r\n     * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\r\n     * be  accessed.\r\n     *\r\n     *  @class\r\n     *  @param {object} [init={}] Configuration object for DataTables. Options\r\n     *    are defined by {@link DataTable.defaults}\r\n     *  @requires jQuery 1.7+\r\n     *\r\n     *  @example\r\n     *    // Basic initialisation\r\n     *    $(document).ready( function {\r\n\t *      $('#example').dataTable();\r\n\t *    } );\r\n     *\r\n     *  @example\r\n     *    // Initialisation with configuration options - in this case, disable\r\n     *    // pagination and sorting.\r\n     *    $(document).ready( function {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"paginate\": false,\r\n\t *        \"sort\": false\r\n\t *      } );\r\n\t *    } );\r\n     */\r\n    var DataTable = function ( options )\r\n    {\r\n        /**\r\n         * Perform a jQuery selector action on the table's TR elements (from the tbody) and\r\n         * return the resulting jQuery object.\r\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n         *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\r\n         *    criterion (\"applied\") or all TR elements (i.e. no filter).\r\n         *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\r\n         *    Can be either 'current', whereby the current sorting of the table is used, or\r\n         *    'original' whereby the original order the data was read into the table is used.\r\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n         *    'current' and filter is 'applied', regardless of what they might be given as.\r\n         *  @returns {object} jQuery object, filtered by the given selector.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Highlight every second row\r\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\r\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\r\n\t\t *      oTable.fnFilter('Webkit');\r\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\r\n\t\t *      oTable.fnFilter('');\r\n\t\t *    } );\r\n         */\r\n        this.$ = function ( sSelector, oOpts )\r\n        {\r\n            return this.api(true).$( sSelector, oOpts );\r\n        };\r\n\r\n\r\n        /**\r\n         * Almost identical to $ in operation, but in this case returns the data for the matched\r\n         * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\r\n         * rather than any descendants, so the data can be obtained for the row/cell. If matching\r\n         * rows are found, the data returned is the original data array/object that was used to\r\n         * create the row (or a generated array if from a DOM source).\r\n         *\r\n         * This method is often useful in-combination with $ where both functions are given the\r\n         * same parameters and the array indexes will match identically.\r\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n         *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\r\n         *    criterion (\"applied\") or all elements (i.e. no filter).\r\n         *  @param {string} [oOpts.order=current] Order of the data in the processed array.\r\n         *    Can be either 'current', whereby the current sorting of the table is used, or\r\n         *    'original' whereby the original order the data was read into the table is used.\r\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n         *    'current' and filter is 'applied', regardless of what they might be given as.\r\n         *  @returns {array} Data for the matched elements. If any elements, as a result of the\r\n         *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\r\n         *    entry in the array.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Get the data from the first row in the table\r\n\t\t *      var data = oTable._('tr:first');\r\n\t\t *\r\n\t\t *      // Do something useful with the data\r\n\t\t *      alert( \"First cell is: \"+data[0] );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Filter to 'Webkit' and get all data for\r\n\t\t *      oTable.fnFilter('Webkit');\r\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\r\n\t\t *\r\n\t\t *      // Do something with the data\r\n\t\t *      alert( data.length+\" rows matched the search\" );\r\n\t\t *    } );\r\n         */\r\n        this._ = function ( sSelector, oOpts )\r\n        {\r\n            return this.api(true).rows( sSelector, oOpts ).data();\r\n        };\r\n\r\n\r\n        /**\r\n         * Create a DataTables Api instance, with the currently selected tables for\r\n         * the Api's context.\r\n         * @param {boolean} [traditional=false] Set the API instance's context to be\r\n         *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\r\n         *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\r\n         *   or if all tables captured in the jQuery object should be used.\r\n         * @return {DataTables.Api}\r\n         */\r\n        this.api = function ( traditional )\r\n        {\r\n            return traditional ?\r\n                new _Api(\r\n                    _fnSettingsFromNode( this[ _ext.iApiIndex ] )\r\n                ) :\r\n                new _Api( this );\r\n        };\r\n\r\n\r\n        /**\r\n         * Add a single new row or multiple rows of data to the table. Please note\r\n         * that this is suitable for client-side processing only - if you are using\r\n         * server-side processing (i.e. \"bServerSide\": true), then to add data, you\r\n         * must add it to the data source, i.e. the server-side, through an Ajax call.\r\n         *  @param {array|object} data The data to be added to the table. This can be:\r\n         *    <ul>\r\n         *      <li>1D array of data - add a single row with the data provided</li>\r\n         *      <li>2D array of arrays - add multiple rows in a single call</li>\r\n         *      <li>object - data object when using <i>mData</i></li>\r\n         *      <li>array of objects - multiple data objects when using <i>mData</i></li>\r\n         *    </ul>\r\n         *  @param {bool} [redraw=true] redraw the table or not\r\n         *  @returns {array} An array of integers, representing the list of indexes in\r\n         *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\r\n         *    the table.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    // Global var for counter\r\n         *    var giCount = 2;\r\n         *\r\n         *    $(document).ready(function() {\r\n\t\t *      $('#example').dataTable();\r\n\t\t *    } );\r\n         *\r\n         *    function fnClickAddRow() {\r\n\t\t *      $('#example').dataTable().fnAddData( [\r\n\t\t *        giCount+\".1\",\r\n\t\t *        giCount+\".2\",\r\n\t\t *        giCount+\".3\",\r\n\t\t *        giCount+\".4\" ]\r\n\t\t *      );\r\n\t\t *\r\n\t\t *      giCount++;\r\n\t\t *    }\r\n         */\r\n        this.fnAddData = function( data, redraw )\r\n        {\r\n            var api = this.api( true );\r\n\r\n            /* Check if we want to add multiple rows or not */\r\n            var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\r\n                api.rows.add( data ) :\r\n                api.row.add( data );\r\n\r\n            if ( redraw === undefined || redraw ) {\r\n                api.draw();\r\n            }\r\n\r\n            return rows.flatten().toArray();\r\n        };\r\n\r\n\r\n        /**\r\n         * This function will make DataTables recalculate the column sizes, based on the data\r\n         * contained in the table and the sizes applied to the columns (in the DOM, CSS or\r\n         * through the sWidth parameter). This can be useful when the width of the table's\r\n         * parent element changes (for example a window resize).\r\n         *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable( {\r\n\t\t *        \"sScrollY\": \"200px\",\r\n\t\t *        \"bPaginate\": false\r\n\t\t *      } );\r\n\t\t *\r\n\t\t *      $(window).bind('resize', function () {\r\n\t\t *        oTable.fnAdjustColumnSizing();\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        this.fnAdjustColumnSizing = function ( bRedraw )\r\n        {\r\n            var api = this.api( true ).columns.adjust();\r\n            var settings = api.settings()[0];\r\n            var scroll = settings.oScroll;\r\n\r\n            if ( bRedraw === undefined || bRedraw ) {\r\n                api.draw( false );\r\n            }\r\n            else if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\r\n                /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\r\n                _fnScrollDraw( settings );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * Quickly and simply clear a table\r\n         *  @param {bool} [bRedraw=true] redraw the table or not\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\r\n\t\t *      oTable.fnClearTable();\r\n\t\t *    } );\r\n         */\r\n        this.fnClearTable = function( bRedraw )\r\n        {\r\n            var api = this.api( true ).clear();\r\n\r\n            if ( bRedraw === undefined || bRedraw ) {\r\n                api.draw();\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * The exact opposite of 'opening' a row, this function will close any rows which\r\n         * are currently 'open'.\r\n         *  @param {node} nTr the table row to 'close'\r\n         *  @returns {int} 0 on success, or 1 if failed (can't find the row)\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable;\r\n\t\t *\r\n\t\t *      // 'open' an information row when a row is clicked on\r\n\t\t *      $('#example tbody tr').click( function () {\r\n\t\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t\t *          oTable.fnClose( this );\r\n\t\t *        } else {\r\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *\r\n\t\t *      oTable = $('#example').dataTable();\r\n\t\t *    } );\r\n         */\r\n        this.fnClose = function( nTr )\r\n        {\r\n            this.api( true ).row( nTr ).child.hide();\r\n        };\r\n\r\n\r\n        /**\r\n         * Remove a row for the table\r\n         *  @param {mixed} target The index of the row from aoData to be deleted, or\r\n         *    the TR element you want to delete\r\n         *  @param {function|null} [callBack] Callback function\r\n         *  @param {bool} [redraw=true] Redraw the table or not\r\n         *  @returns {array} The row that was deleted\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Immediately remove the first row\r\n\t\t *      oTable.fnDeleteRow( 0 );\r\n\t\t *    } );\r\n         */\r\n        this.fnDeleteRow = function( target, callback, redraw )\r\n        {\r\n            var api = this.api( true );\r\n            var rows = api.rows( target );\r\n            var settings = rows.settings()[0];\r\n            var data = settings.aoData[ rows[0][0] ];\r\n\r\n            rows.remove();\r\n\r\n            if ( callback ) {\r\n                callback.call( this, settings, data );\r\n            }\r\n\r\n            if ( redraw === undefined || redraw ) {\r\n                api.draw();\r\n            }\r\n\r\n            return data;\r\n        };\r\n\r\n\r\n        /**\r\n         * Restore the table to it's original state in the DOM by removing all of DataTables\r\n         * enhancements, alterations to the DOM structure of the table and event listeners.\r\n         *  @param {boolean} [remove=false] Completely remove the table from the DOM\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *      oTable.fnDestroy();\r\n\t\t *    } );\r\n         */\r\n        this.fnDestroy = function ( remove )\r\n        {\r\n            this.api( true ).destroy( remove );\r\n        };\r\n\r\n\r\n        /**\r\n         * Redraw the table\r\n         *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\r\n\t\t *      oTable.fnDraw();\r\n\t\t *    } );\r\n         */\r\n        this.fnDraw = function( complete )\r\n        {\r\n            // Note that this isn't an exact match to the old call to _fnDraw - it takes\r\n            // into account the new data, but can hold position.\r\n            this.api( true ).draw( complete );\r\n        };\r\n\r\n\r\n        /**\r\n         * Filter the input based on data\r\n         *  @param {string} sInput String to filter the table on\r\n         *  @param {int|null} [iColumn] Column to limit filtering to\r\n         *  @param {bool} [bRegex=false] Treat as regular expression or not\r\n         *  @param {bool} [bSmart=true] Perform smart filtering or not\r\n         *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\r\n         *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Sometime later - filter...\r\n\t\t *      oTable.fnFilter( 'test string' );\r\n\t\t *    } );\r\n         */\r\n        this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\r\n        {\r\n            var api = this.api( true );\r\n\r\n            if ( iColumn === null || iColumn === undefined ) {\r\n                api.search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n            }\r\n            else {\r\n                api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n            }\r\n\r\n            api.draw();\r\n        };\r\n\r\n\r\n        /**\r\n         * Get the data for the whole table, an individual row or an individual cell based on the\r\n         * provided parameters.\r\n         *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\r\n         *    a TR node then the data source for the whole row will be returned. If given as a\r\n         *    TD/TH cell node then iCol will be automatically calculated and the data for the\r\n         *    cell returned. If given as an integer, then this is treated as the aoData internal\r\n         *    data index for the row (see fnGetPosition) and the data for that row used.\r\n         *  @param {int} [col] Optional column index that you want the data of.\r\n         *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\r\n         *    returned. If mRow is defined, just data for that row, and is iCol is\r\n         *    defined, only data for the designated cell is returned.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    // Row data\r\n         *    $(document).ready(function() {\r\n\t\t *      oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      oTable.$('tr').click( function () {\r\n\t\t *        var data = oTable.fnGetData( this );\r\n\t\t *        // ... do something with the array / object of data for the row\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Individual cell data\r\n         *    $(document).ready(function() {\r\n\t\t *      oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      oTable.$('td').click( function () {\r\n\t\t *        var sData = oTable.fnGetData( this );\r\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        this.fnGetData = function( src, col )\r\n        {\r\n            var api = this.api( true );\r\n\r\n            if ( src !== undefined ) {\r\n                var type = src.nodeName ? src.nodeName.toLowerCase() : '';\r\n\r\n                return col !== undefined || type == 'td' || type == 'th' ?\r\n                    api.cell( src, col ).data() :\r\n                api.row( src ).data() || null;\r\n            }\r\n\r\n            return api.data().toArray();\r\n        };\r\n\r\n\r\n        /**\r\n         * Get an array of the TR nodes that are used in the table's body. Note that you will\r\n         * typically want to use the '$' API method in preference to this as it is more\r\n         * flexible.\r\n         *  @param {int} [iRow] Optional row index for the TR element you want\r\n         *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\r\n         *    in the table's body, or iRow is defined, just the TR element requested.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Get the nodes from the table\r\n\t\t *      var nNodes = oTable.fnGetNodes( );\r\n\t\t *    } );\r\n         */\r\n        this.fnGetNodes = function( iRow )\r\n        {\r\n            var api = this.api( true );\r\n\r\n            return iRow !== undefined ?\r\n                api.row( iRow ).node() :\r\n                api.rows().nodes().flatten().toArray();\r\n        };\r\n\r\n\r\n        /**\r\n         * Get the array indexes of a particular cell from it's DOM element\r\n         * and column index including hidden columns\r\n         *  @param {node} node this can either be a TR, TD or TH in the table's body\r\n         *  @returns {int} If nNode is given as a TR, then a single index is returned, or\r\n         *    if given as a cell, an array of [row index, column index (visible),\r\n         *    column index (all)] is given.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      $('#example tbody td').click( function () {\r\n\t\t *        // Get the position of the current data from the node\r\n\t\t *        var aPos = oTable.fnGetPosition( this );\r\n\t\t *\r\n\t\t *        // Get the data array for this row\r\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\r\n\t\t *\r\n\t\t *        // Update the data array and return the value\r\n\t\t *        aData[ aPos[1] ] = 'clicked';\r\n\t\t *        this.innerHTML = 'clicked';\r\n\t\t *      } );\r\n\t\t *\r\n\t\t *      // Init DataTables\r\n\t\t *      oTable = $('#example').dataTable();\r\n\t\t *    } );\r\n         */\r\n        this.fnGetPosition = function( node )\r\n        {\r\n            var api = this.api( true );\r\n            var nodeName = node.nodeName.toUpperCase();\r\n\r\n            if ( nodeName == 'TR' ) {\r\n                return api.row( node ).index();\r\n            }\r\n            else if ( nodeName == 'TD' || nodeName == 'TH' ) {\r\n                var cell = api.cell( node ).index();\r\n\r\n                return [\r\n                    cell.row,\r\n                    cell.columnVisible,\r\n                    cell.column\r\n                ];\r\n            }\r\n            return null;\r\n        };\r\n\r\n\r\n        /**\r\n         * Check to see if a row is 'open' or not.\r\n         *  @param {node} nTr the table row to check\r\n         *  @returns {boolean} true if the row is currently open, false otherwise\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable;\r\n\t\t *\r\n\t\t *      // 'open' an information row when a row is clicked on\r\n\t\t *      $('#example tbody tr').click( function () {\r\n\t\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t\t *          oTable.fnClose( this );\r\n\t\t *        } else {\r\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *\r\n\t\t *      oTable = $('#example').dataTable();\r\n\t\t *    } );\r\n         */\r\n        this.fnIsOpen = function( nTr )\r\n        {\r\n            return this.api( true ).row( nTr ).child.isShown();\r\n        };\r\n\r\n\r\n        /**\r\n         * This function will place a new row directly after a row which is currently\r\n         * on display on the page, with the HTML contents that is passed into the\r\n         * function. This can be used, for example, to ask for confirmation that a\r\n         * particular record should be deleted.\r\n         *  @param {node} nTr The table row to 'open'\r\n         *  @param {string|node|jQuery} mHtml The HTML to put into the row\r\n         *  @param {string} sClass Class to give the new TD cell\r\n         *  @returns {node} The row opened. Note that if the table row passed in as the\r\n         *    first parameter, is not found in the table, this method will silently\r\n         *    return.\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable;\r\n\t\t *\r\n\t\t *      // 'open' an information row when a row is clicked on\r\n\t\t *      $('#example tbody tr').click( function () {\r\n\t\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t\t *          oTable.fnClose( this );\r\n\t\t *        } else {\r\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *\r\n\t\t *      oTable = $('#example').dataTable();\r\n\t\t *    } );\r\n         */\r\n        this.fnOpen = function( nTr, mHtml, sClass )\r\n        {\r\n            return this.api( true )\r\n                .row( nTr )\r\n                .child( mHtml, sClass )\r\n                .show()\r\n                .child()[0];\r\n        };\r\n\r\n\r\n        /**\r\n         * Change the pagination - provides the internal logic for pagination in a simple API\r\n         * function. With this function you can have a DataTables table go to the next,\r\n         * previous, first or last pages.\r\n         *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\r\n         *    or page number to jump to (integer), note that page 0 is the first page.\r\n         *  @param {bool} [bRedraw=true] Redraw the table or not\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *      oTable.fnPageChange( 'next' );\r\n\t\t *    } );\r\n         */\r\n        this.fnPageChange = function ( mAction, bRedraw )\r\n        {\r\n            var api = this.api( true ).page( mAction );\r\n\r\n            if ( bRedraw === undefined || bRedraw ) {\r\n                api.draw(false);\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * Show a particular column\r\n         *  @param {int} iCol The column whose display should be changed\r\n         *  @param {bool} bShow Show (true) or hide (false) the column\r\n         *  @param {bool} [bRedraw=true] Redraw the table or not\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Hide the second column after initialisation\r\n\t\t *      oTable.fnSetColumnVis( 1, false );\r\n\t\t *    } );\r\n         */\r\n        this.fnSetColumnVis = function ( iCol, bShow, bRedraw )\r\n        {\r\n            var api = this.api( true ).column( iCol ).visible( bShow );\r\n\r\n            if ( bRedraw === undefined || bRedraw ) {\r\n                api.columns.adjust().draw();\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * Get the settings for a particular table for external manipulation\r\n         *  @returns {object} DataTables settings object. See\r\n         *    {@link DataTable.models.oSettings}\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *      var oSettings = oTable.fnSettings();\r\n\t\t *\r\n\t\t *      // Show an example parameter from the settings\r\n\t\t *      alert( oSettings._iDisplayStart );\r\n\t\t *    } );\r\n         */\r\n        this.fnSettings = function()\r\n        {\r\n            return _fnSettingsFromNode( this[_ext.iApiIndex] );\r\n        };\r\n\r\n\r\n        /**\r\n         * Sort the table by a particular column\r\n         *  @param {int} iCol the data index to sort on. Note that this will not match the\r\n         *    'display index' if you have hidden data entries\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Sort immediately with columns 0 and 1\r\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\r\n\t\t *    } );\r\n         */\r\n        this.fnSort = function( aaSort )\r\n        {\r\n            this.api( true ).order( aaSort ).draw();\r\n        };\r\n\r\n\r\n        /**\r\n         * Attach a sort listener to an element for a given column\r\n         *  @param {node} nNode the element to attach the sort listener to\r\n         *  @param {int} iColumn the column that a click on this node will sort on\r\n         *  @param {function} [fnCallback] callback function when sort is run\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *\r\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\r\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\r\n\t\t *    } );\r\n         */\r\n        this.fnSortListener = function( nNode, iColumn, fnCallback )\r\n        {\r\n            this.api( true ).order.listener( nNode, iColumn, fnCallback );\r\n        };\r\n\r\n\r\n        /**\r\n         * Update a table cell or row - this method will accept either a single value to\r\n         * update the cell with, an array of values with one element for each column or\r\n         * an object in the same format as the original data source. The function is\r\n         * self-referencing in order to make the multi column updates easier.\r\n         *  @param {object|array|string} mData Data to update the cell/row with\r\n         *  @param {node|int} mRow TR element you want to update or the aoData index\r\n         *  @param {int} [iColumn] The column to update, give as null or undefined to\r\n         *    update a whole row.\r\n         *  @param {bool} [bRedraw=true] Redraw the table or not\r\n         *  @param {bool} [bAction=true] Perform pre-draw actions or not\r\n         *  @returns {int} 0 on success, 1 on error\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\r\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\r\n\t\t *    } );\r\n         */\r\n        this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\r\n        {\r\n            var api = this.api( true );\r\n\r\n            if ( iColumn === undefined || iColumn === null ) {\r\n                api.row( mRow ).data( mData );\r\n            }\r\n            else {\r\n                api.cell( mRow, iColumn ).data( mData );\r\n            }\r\n\r\n            if ( bAction === undefined || bAction ) {\r\n                api.columns.adjust();\r\n            }\r\n\r\n            if ( bRedraw === undefined || bRedraw ) {\r\n                api.draw();\r\n            }\r\n            return 0;\r\n        };\r\n\r\n\r\n        /**\r\n         * Provide a common method for plug-ins to check the version of DataTables being used, in order\r\n         * to ensure compatibility.\r\n         *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\r\n         *    formats \"X\" and \"X.Y\" are also acceptable.\r\n         *  @returns {boolean} true if this version of DataTables is greater or equal to the required\r\n         *    version, or false if this version of DataTales is not suitable\r\n         *  @method\r\n         *  @dtopt API\r\n         *  @deprecated Since v1.10\r\n         *\r\n         *  @example\r\n         *    $(document).ready(function() {\r\n\t\t *      var oTable = $('#example').dataTable();\r\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\r\n\t\t *    } );\r\n         */\r\n        this.fnVersionCheck = _ext.fnVersionCheck;\r\n\r\n\r\n        var _that = this;\r\n        var emptyInit = options === undefined;\r\n        var len = this.length;\r\n\r\n        if ( emptyInit ) {\r\n            options = {};\r\n        }\r\n\r\n        this.oApi = this.internal = _ext.internal;\r\n\r\n        // Extend with old style plug-in API methods\r\n        for ( var fn in DataTable.ext.internal ) {\r\n            if ( fn ) {\r\n                this[fn] = _fnExternApiFunc(fn);\r\n            }\r\n        }\r\n\r\n        this.each(function() {\r\n            // For each initialisation we want to give it a clean initialisation\r\n            // object that can be bashed around\r\n            var o = {};\r\n            var oInit = len > 1 ? // optimisation for single table case\r\n                _fnExtend( o, options, true ) :\r\n                options;\r\n\r\n            /*global oInit,_that,emptyInit*/\r\n            var i=0, iLen, j, jLen, k, kLen;\r\n            var sId = this.getAttribute( 'id' );\r\n            var bInitHandedOff = false;\r\n            var defaults = DataTable.defaults;\r\n            var $this = $(this);\r\n\r\n\r\n            /* Sanity check */\r\n            if ( this.nodeName.toLowerCase() != 'table' )\r\n            {\r\n                _fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\r\n                return;\r\n            }\r\n\r\n            /* Backwards compatibility for the defaults */\r\n            _fnCompatOpts( defaults );\r\n            _fnCompatCols( defaults.column );\r\n\r\n            /* Convert the camel-case defaults to Hungarian */\r\n            _fnCamelToHungarian( defaults, defaults, true );\r\n            _fnCamelToHungarian( defaults.column, defaults.column, true );\r\n\r\n            /* Setting up the initialisation object */\r\n            _fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\r\n\r\n\r\n\r\n            /* Check to see if we are re-initialising a table */\r\n            var allSettings = DataTable.settings;\r\n            for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\r\n            {\r\n                var s = allSettings[i];\r\n\r\n                /* Base check on table node */\r\n                if ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )\r\n                {\r\n                    var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\r\n                    var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\r\n\r\n                    if ( emptyInit || bRetrieve )\r\n                    {\r\n                        return s.oInstance;\r\n                    }\r\n                    else if ( bDestroy )\r\n                    {\r\n                        s.oInstance.fnDestroy();\r\n                        break;\r\n                    }\r\n                    else\r\n                    {\r\n                        _fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                /* If the element we are initialising has the same ID as a table which was previously\r\n                 * initialised, but the table nodes don't match (from before) then we destroy the old\r\n                 * instance by simply deleting it. This is under the assumption that the table has been\r\n                 * destroyed by other methods. Anyone using non-id selectors will need to do this manually\r\n                 */\r\n                if ( s.sTableId == this.id )\r\n                {\r\n                    allSettings.splice( i, 1 );\r\n                    break;\r\n                }\r\n            }\r\n\r\n            /* Ensure the table has an ID - required for accessibility */\r\n            if ( sId === null || sId === \"\" )\r\n            {\r\n                sId = \"DataTables_Table_\"+(DataTable.ext._unique++);\r\n                this.id = sId;\r\n            }\r\n\r\n            /* Create the settings object for this table and set some of the default parameters */\r\n            var oSettings = $.extend( true, {}, DataTable.models.oSettings, {\r\n                \"sDestroyWidth\": $this[0].style.width,\r\n                \"sInstance\":     sId,\r\n                \"sTableId\":      sId\r\n            } );\r\n            oSettings.nTable = this;\r\n            oSettings.oApi   = _that.internal;\r\n            oSettings.oInit  = oInit;\r\n\r\n            allSettings.push( oSettings );\r\n\r\n            // Need to add the instance after the instance after the settings object has been added\r\n            // to the settings array, so we can self reference the table instance if more than one\r\n            oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\r\n\r\n            // Backwards compatibility, before we apply all the defaults\r\n            _fnCompatOpts( oInit );\r\n\r\n            if ( oInit.oLanguage )\r\n            {\r\n                _fnLanguageCompat( oInit.oLanguage );\r\n            }\r\n\r\n            // If the length menu is given, but the init display length is not, use the length menu\r\n            if ( oInit.aLengthMenu && ! oInit.iDisplayLength )\r\n            {\r\n                oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\r\n                    oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\r\n            }\r\n\r\n            // Apply the defaults and init options to make a single init object will all\r\n            // options defined from defaults and instance options.\r\n            oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\r\n\r\n\r\n            // Map the initialisation options onto the settings object\r\n            _fnMap( oSettings.oFeatures, oInit, [\r\n                \"bPaginate\",\r\n                \"bLengthChange\",\r\n                \"bFilter\",\r\n                \"bSort\",\r\n                \"bSortMulti\",\r\n                \"bInfo\",\r\n                \"bProcessing\",\r\n                \"bAutoWidth\",\r\n                \"bSortClasses\",\r\n                \"bServerSide\",\r\n                \"bDeferRender\"\r\n            ] );\r\n            _fnMap( oSettings, oInit, [\r\n                \"asStripeClasses\",\r\n                \"ajax\",\r\n                \"fnServerData\",\r\n                \"fnFormatNumber\",\r\n                \"sServerMethod\",\r\n                \"aaSorting\",\r\n                \"aaSortingFixed\",\r\n                \"aLengthMenu\",\r\n                \"sPaginationType\",\r\n                \"sAjaxSource\",\r\n                \"sAjaxDataProp\",\r\n                \"iStateDuration\",\r\n                \"sDom\",\r\n                \"bSortCellsTop\",\r\n                \"iTabIndex\",\r\n                \"fnStateLoadCallback\",\r\n                \"fnStateSaveCallback\",\r\n                \"renderer\",\r\n                \"searchDelay\",\r\n                \"rowId\",\r\n                [ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\r\n                [ \"oSearch\", \"oPreviousSearch\" ],\r\n                [ \"aoSearchCols\", \"aoPreSearchCols\" ],\r\n                [ \"iDisplayLength\", \"_iDisplayLength\" ],\r\n                [ \"bJQueryUI\", \"bJUI\" ]\r\n            ] );\r\n            _fnMap( oSettings.oScroll, oInit, [\r\n                [ \"sScrollX\", \"sX\" ],\r\n                [ \"sScrollXInner\", \"sXInner\" ],\r\n                [ \"sScrollY\", \"sY\" ],\r\n                [ \"bScrollCollapse\", \"bCollapse\" ]\r\n            ] );\r\n            _fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\r\n\r\n            /* Callback functions which are array driven */\r\n            _fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\r\n            _fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\r\n            _fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\r\n            _fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\r\n            _fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\r\n            _fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\r\n            _fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\r\n            _fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\r\n            _fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\r\n            _fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\r\n            _fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\r\n\r\n            oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\r\n\r\n            /* Browser support detection */\r\n            _fnBrowserDetect( oSettings );\r\n\r\n            var oClasses = oSettings.oClasses;\r\n\r\n            // @todo Remove in 1.11\r\n            if ( oInit.bJQueryUI )\r\n            {\r\n                /* Use the JUI classes object for display. You could clone the oStdClasses object if\r\n                 * you want to have multiple tables with multiple independent classes\r\n                 */\r\n                $.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );\r\n\r\n                if ( oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\" )\r\n                {\r\n                    /* Set the DOM to use a layout suitable for jQuery UI's theming */\r\n                    oSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\r\n                }\r\n\r\n                if ( ! oSettings.renderer ) {\r\n                    oSettings.renderer = 'jqueryui';\r\n                }\r\n                else if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {\r\n                    oSettings.renderer.header = 'jqueryui';\r\n                }\r\n            }\r\n            else\r\n            {\r\n                $.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\r\n            }\r\n            $this.addClass( oClasses.sTable );\r\n\r\n\r\n            if ( oSettings.iInitDisplayStart === undefined )\r\n            {\r\n                /* Display start point, taking into account the save saving */\r\n                oSettings.iInitDisplayStart = oInit.iDisplayStart;\r\n                oSettings._iDisplayStart = oInit.iDisplayStart;\r\n            }\r\n\r\n            if ( oInit.iDeferLoading !== null )\r\n            {\r\n                oSettings.bDeferLoading = true;\r\n                var tmp = $.isArray( oInit.iDeferLoading );\r\n                oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\r\n                oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\r\n            }\r\n\r\n            /* Language definitions */\r\n            var oLanguage = oSettings.oLanguage;\r\n            $.extend( true, oLanguage, oInit.oLanguage );\r\n\r\n            if ( oLanguage.sUrl !== \"\" )\r\n            {\r\n                /* Get the language definitions from a file - because this Ajax call makes the language\r\n                 * get async to the remainder of this function we use bInitHandedOff to indicate that\r\n                 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\r\n                 */\r\n                $.ajax( {\r\n                    dataType: 'json',\r\n                    url: oLanguage.sUrl,\r\n                    success: function ( json ) {\r\n                        _fnLanguageCompat( json );\r\n                        _fnCamelToHungarian( defaults.oLanguage, json );\r\n                        $.extend( true, oLanguage, json );\r\n                        _fnInitialise( oSettings );\r\n                    },\r\n                    error: function () {\r\n                        // Error occurred loading language file, continue on as best we can\r\n                        _fnInitialise( oSettings );\r\n                    }\r\n                } );\r\n                bInitHandedOff = true;\r\n            }\r\n\r\n            /*\r\n             * Stripes\r\n             */\r\n            if ( oInit.asStripeClasses === null )\r\n            {\r\n                oSettings.asStripeClasses =[\r\n                    oClasses.sStripeOdd,\r\n                    oClasses.sStripeEven\r\n                ];\r\n            }\r\n\r\n            /* Remove row stripe classes if they are already on the table row */\r\n            var stripeClasses = oSettings.asStripeClasses;\r\n            var rowOne = $this.children('tbody').find('tr').eq(0);\r\n            if ( $.inArray( true, $.map( stripeClasses, function(el, i) {\r\n                    return rowOne.hasClass(el);\r\n                } ) ) !== -1 ) {\r\n                $('tbody tr', this).removeClass( stripeClasses.join(' ') );\r\n                oSettings.asDestroyStripes = stripeClasses.slice();\r\n            }\r\n\r\n            /*\r\n             * Columns\r\n             * See if we should load columns automatically or use defined ones\r\n             */\r\n            var anThs = [];\r\n            var aoColumnsInit;\r\n            var nThead = this.getElementsByTagName('thead');\r\n            if ( nThead.length !== 0 )\r\n            {\r\n                _fnDetectHeader( oSettings.aoHeader, nThead[0] );\r\n                anThs = _fnGetUniqueThs( oSettings );\r\n            }\r\n\r\n            /* If not given a column array, generate one with nulls */\r\n            if ( oInit.aoColumns === null )\r\n            {\r\n                aoColumnsInit = [];\r\n                for ( i=0, iLen=anThs.length ; i<iLen ; i++ )\r\n                {\r\n                    aoColumnsInit.push( null );\r\n                }\r\n            }\r\n            else\r\n            {\r\n                aoColumnsInit = oInit.aoColumns;\r\n            }\r\n\r\n            /* Add the columns */\r\n            for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\r\n            {\r\n                _fnAddColumn( oSettings, anThs ? anThs[i] : null );\r\n            }\r\n\r\n            /* Apply the column definitions */\r\n            _fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\r\n                _fnColumnOptions( oSettings, iCol, oDef );\r\n            } );\r\n\r\n            /* HTML5 attribute detection - build an mData object automatically if the\r\n             * attributes are found\r\n             */\r\n            if ( rowOne.length ) {\r\n                var a = function ( cell, name ) {\r\n                    return cell.getAttribute( 'data-'+name ) !== null ? name : null;\r\n                };\r\n\r\n                $( rowOne[0] ).children('th, td').each( function (i, cell) {\r\n                    var col = oSettings.aoColumns[i];\r\n\r\n                    if ( col.mData === i ) {\r\n                        var sort = a( cell, 'sort' ) || a( cell, 'order' );\r\n                        var filter = a( cell, 'filter' ) || a( cell, 'search' );\r\n\r\n                        if ( sort !== null || filter !== null ) {\r\n                            col.mData = {\r\n                                _:      i+'.display',\r\n                                sort:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n                                type:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n                                filter: filter !== null ? i+'.@data-'+filter : undefined\r\n                            };\r\n\r\n                            _fnColumnOptions( oSettings, i );\r\n                        }\r\n                    }\r\n                } );\r\n            }\r\n\r\n            var features = oSettings.oFeatures;\r\n\r\n            /* Must be done after everything which can be overridden by the state saving! */\r\n            if ( oInit.bStateSave )\r\n            {\r\n                features.bStateSave = true;\r\n                _fnLoadState( oSettings, oInit );\r\n                _fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\r\n            }\r\n\r\n\r\n            /*\r\n             * Sorting\r\n             * @todo For modularisation (1.11) this needs to do into a sort start up handler\r\n             */\r\n\r\n            // If aaSorting is not defined, then we use the first indicator in asSorting\r\n            // in case that has been altered, so the default sort reflects that option\r\n            if ( oInit.aaSorting === undefined )\r\n            {\r\n                var sorting = oSettings.aaSorting;\r\n                for ( i=0, iLen=sorting.length ; i<iLen ; i++ )\r\n                {\r\n                    sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\r\n                }\r\n            }\r\n\r\n            /* Do a first pass on the sorting classes (allows any size changes to be taken into\r\n             * account, and also will apply sorting disabled classes if disabled\r\n             */\r\n            _fnSortingClasses( oSettings );\r\n\r\n            if ( features.bSort )\r\n            {\r\n                _fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n                    if ( oSettings.bSorted ) {\r\n                        var aSort = _fnSortFlatten( oSettings );\r\n                        var sortedColumns = {};\r\n\r\n                        $.each( aSort, function (i, val) {\r\n                            sortedColumns[ val.src ] = val.dir;\r\n                        } );\r\n\r\n                        _fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\r\n                        _fnSortAria( oSettings );\r\n                    }\r\n                } );\r\n            }\r\n\r\n            _fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n                if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\r\n                    _fnSortingClasses( oSettings );\r\n                }\r\n            }, 'sc' );\r\n\r\n\r\n            /*\r\n             * Final init\r\n             * Cache the header, body and footer as required, creating them if needed\r\n             */\r\n\r\n            // Work around for Webkit bug 83867 - store the caption-side before removing from doc\r\n            var captions = $this.children('caption').each( function () {\r\n                this._captionSide = $this.css('caption-side');\r\n            } );\r\n\r\n            var thead = $this.children('thead');\r\n            if ( thead.length === 0 )\r\n            {\r\n                thead = $('<thead/>').appendTo(this);\r\n            }\r\n            oSettings.nTHead = thead[0];\r\n\r\n            var tbody = $this.children('tbody');\r\n            if ( tbody.length === 0 )\r\n            {\r\n                tbody = $('<tbody/>').appendTo(this);\r\n            }\r\n            oSettings.nTBody = tbody[0];\r\n\r\n            var tfoot = $this.children('tfoot');\r\n            if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") )\r\n            {\r\n                // If we are a scrolling table, and no footer has been given, then we need to create\r\n                // a tfoot element for the caption element to be appended to\r\n                tfoot = $('<tfoot/>').appendTo(this);\r\n            }\r\n\r\n            if ( tfoot.length === 0 || tfoot.children().length === 0 ) {\r\n                $this.addClass( oClasses.sNoFooter );\r\n            }\r\n            else if ( tfoot.length > 0 ) {\r\n                oSettings.nTFoot = tfoot[0];\r\n                _fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\r\n            }\r\n\r\n            /* Check if there is data passing into the constructor */\r\n            if ( oInit.aaData )\r\n            {\r\n                for ( i=0 ; i<oInit.aaData.length ; i++ )\r\n                {\r\n                    _fnAddData( oSettings, oInit.aaData[ i ] );\r\n                }\r\n            }\r\n            else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' )\r\n            {\r\n                /* Grab the data from the page - only do this when deferred loading or no Ajax\r\n                 * source since there is no point in reading the DOM data if we are then going\r\n                 * to replace it with Ajax data\r\n                 */\r\n                _fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\r\n            }\r\n\r\n            /* Copy the data index array */\r\n            oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\r\n\r\n            /* Initialisation complete - table can be drawn */\r\n            oSettings.bInitialised = true;\r\n\r\n            /* Check if we need to initialise the table (it might not have been handed off to the\r\n             * language processor)\r\n             */\r\n            if ( bInitHandedOff === false )\r\n            {\r\n                _fnInitialise( oSettings );\r\n            }\r\n        } );\r\n        _that = null;\r\n        return this;\r\n    };\r\n\r\n\r\n    /*\r\n     * It is useful to have variables which are scoped locally so only the\r\n     * DataTables functions can access them and they don't leak into global space.\r\n     * At the same time these functions are often useful over multiple files in the\r\n     * core and API, so we list, or at least document, all variables which are used\r\n     * by DataTables as private variables here. This also ensures that there is no\r\n     * clashing of variable names and that they can easily referenced for reuse.\r\n     */\r\n\r\n\r\n    // Defined else where\r\n    //  _selector_run\r\n    //  _selector_opts\r\n    //  _selector_first\r\n    //  _selector_row_indexes\r\n\r\n    var _ext; // DataTable.ext\r\n    var _Api; // DataTable.Api\r\n    var _api_register; // DataTable.Api.register\r\n    var _api_registerPlural; // DataTable.Api.registerPlural\r\n\r\n    var _re_dic = {};\r\n    var _re_new_lines = /[\\r\\n]/g;\r\n    var _re_html = /<.*?>/g;\r\n    var _re_date_start = /^[\\w\\+\\-]/;\r\n    var _re_date_end = /[\\w\\+\\-]$/;\r\n\r\n    // Escape regular expression special characters\r\n    var _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\r\n\r\n    // http://en.wikipedia.org/wiki/Foreign_exchange_market\r\n    // - \\u20BD - Russian ruble.\r\n    // - \\u20a9 - South Korean Won\r\n    // - \\u20BA - Turkish Lira\r\n    // - \\u20B9 - Indian Rupee\r\n    // - R - Brazil (R$) and South Africa\r\n    // - fr - Swiss Franc\r\n    // - kr - Swedish krona, Norwegian krone and Danish krone\r\n    // - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\r\n    //   standards as thousands separators.\r\n    var _re_formatted_numeric = /[',$\u00c2\u00a3\u00e2\u201a\u00ac\u00c2\u00a5%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi;\r\n\r\n\r\n    var _empty = function ( d ) {\r\n        return !d || d === true || d === '-' ? true : false;\r\n    };\r\n\r\n\r\n    var _intVal = function ( s ) {\r\n        var integer = parseInt( s, 10 );\r\n        return !isNaN(integer) && isFinite(s) ? integer : null;\r\n    };\r\n\r\n    // Convert from a formatted number with characters other than `.` as the\r\n    // decimal place, to a Javascript number\r\n    var _numToDecimal = function ( num, decimalPoint ) {\r\n        // Cache created regular expressions for speed as this function is called often\r\n        if ( ! _re_dic[ decimalPoint ] ) {\r\n            _re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\r\n        }\r\n        return typeof num === 'string' && decimalPoint !== '.' ?\r\n            num.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\r\n            num;\r\n    };\r\n\r\n\r\n    var _isNumber = function ( d, decimalPoint, formatted ) {\r\n        var strType = typeof d === 'string';\r\n\r\n        // If empty return immediately so there must be a number if it is a\r\n        // formatted string (this stops the string \"k\", or \"kr\", etc being detected\r\n        // as a formatted number for currency\r\n        if ( _empty( d ) ) {\r\n            return true;\r\n        }\r\n\r\n        if ( decimalPoint && strType ) {\r\n            d = _numToDecimal( d, decimalPoint );\r\n        }\r\n\r\n        if ( formatted && strType ) {\r\n            d = d.replace( _re_formatted_numeric, '' );\r\n        }\r\n\r\n        return !isNaN( parseFloat(d) ) && isFinite( d );\r\n    };\r\n\r\n\r\n    // A string without HTML in it can be considered to be HTML still\r\n    var _isHtml = function ( d ) {\r\n        return _empty( d ) || typeof d === 'string';\r\n    };\r\n\r\n\r\n    var _htmlNumeric = function ( d, decimalPoint, formatted ) {\r\n        if ( _empty( d ) ) {\r\n            return true;\r\n        }\r\n\r\n        var html = _isHtml( d );\r\n        return ! html ?\r\n            null :\r\n            _isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\r\n                true :\r\n                null;\r\n    };\r\n\r\n\r\n    var _pluck = function ( a, prop, prop2 ) {\r\n        var out = [];\r\n        var i=0, ien=a.length;\r\n\r\n        // Could have the test in the loop for slightly smaller code, but speed\r\n        // is essential here\r\n        if ( prop2 !== undefined ) {\r\n            for ( ; i<ien ; i++ ) {\r\n                if ( a[i] && a[i][ prop ] ) {\r\n                    out.push( a[i][ prop ][ prop2 ] );\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for ( ; i<ien ; i++ ) {\r\n                if ( a[i] ) {\r\n                    out.push( a[i][ prop ] );\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n\r\n    // Basically the same as _pluck, but rather than looping over `a` we use `order`\r\n    // as the indexes to pick from `a`\r\n    var _pluck_order = function ( a, order, prop, prop2 )\r\n    {\r\n        var out = [];\r\n        var i=0, ien=order.length;\r\n\r\n        // Could have the test in the loop for slightly smaller code, but speed\r\n        // is essential here\r\n        if ( prop2 !== undefined ) {\r\n            for ( ; i<ien ; i++ ) {\r\n                if ( a[ order[i] ][ prop ] ) {\r\n                    out.push( a[ order[i] ][ prop ][ prop2 ] );\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for ( ; i<ien ; i++ ) {\r\n                out.push( a[ order[i] ][ prop ] );\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n\r\n    var _range = function ( len, start )\r\n    {\r\n        var out = [];\r\n        var end;\r\n\r\n        if ( start === undefined ) {\r\n            start = 0;\r\n            end = len;\r\n        }\r\n        else {\r\n            end = start;\r\n            start = len;\r\n        }\r\n\r\n        for ( var i=start ; i<end ; i++ ) {\r\n            out.push( i );\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n\r\n    var _removeEmpty = function ( a )\r\n    {\r\n        var out = [];\r\n\r\n        for ( var i=0, ien=a.length ; i<ien ; i++ ) {\r\n            if ( a[i] ) { // careful - will remove all falsy values!\r\n                out.push( a[i] );\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n\r\n    var _stripHtml = function ( d ) {\r\n        return d.replace( _re_html, '' );\r\n    };\r\n\r\n\r\n    /**\r\n     * Find the unique elements in a source array.\r\n     *\r\n     * @param  {array} src Source array\r\n     * @return {array} Array of unique items\r\n     * @ignore\r\n     */\r\n    var _unique = function ( src )\r\n    {\r\n        // A faster unique method is to use object keys to identify used values,\r\n        // but this doesn't work with arrays or objects, which we must also\r\n        // consider. See jsperf.com/compare-array-unique-versions/4 for more\r\n        // information.\r\n        var\r\n            out = [],\r\n            val,\r\n            i, ien=src.length,\r\n            j, k=0;\r\n\r\n        again: for ( i=0 ; i<ien ; i++ ) {\r\n            val = src[i];\r\n\r\n            for ( j=0 ; j<k ; j++ ) {\r\n                if ( out[j] === val ) {\r\n                    continue again;\r\n                }\r\n            }\r\n\r\n            out.push( val );\r\n            k++;\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n\r\n    /**\r\n     * DataTables utility methods\r\n     *\r\n     * This namespace provides helper methods that DataTables uses internally to\r\n     * create a DataTable, but which are not exclusively used only for DataTables.\r\n     * These methods can be used by extension authors to save the duplication of\r\n     * code.\r\n     *\r\n     *  @namespace\r\n     */\r\n    DataTable.util = {\r\n        /**\r\n         * Throttle the calls to a function. Arguments and context are maintained\r\n         * for the throttled function.\r\n         *\r\n         * @param {function} fn Function to be called\r\n         * @param {integer} freq Call frequency in mS\r\n         * @return {function} Wrapped function\r\n         */\r\n        throttle: function ( fn, freq ) {\r\n            var\r\n                frequency = freq !== undefined ? freq : 200,\r\n                last,\r\n                timer;\r\n\r\n            return function () {\r\n                var\r\n                    that = this,\r\n                    now  = +new Date(),\r\n                    args = arguments;\r\n\r\n                if ( last && now < last + frequency ) {\r\n                    clearTimeout( timer );\r\n\r\n                    timer = setTimeout( function () {\r\n                        last = undefined;\r\n                        fn.apply( that, args );\r\n                    }, frequency );\r\n                }\r\n                else {\r\n                    last = now;\r\n                    fn.apply( that, args );\r\n                }\r\n            };\r\n        },\r\n\r\n\r\n        /**\r\n         * Escape a string such that it can be used in a regular expression\r\n         *\r\n         *  @param {string} val string to escape\r\n         *  @returns {string} escaped string\r\n         */\r\n        escapeRegex: function ( val ) {\r\n            return val.replace( _re_escape_regex, '\\\\$1' );\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Create a mapping object that allows camel case parameters to be looked up\r\n     * for their Hungarian counterparts. The mapping is stored in a private\r\n     * parameter called `_hungarianMap` which can be accessed on the source object.\r\n     *  @param {object} o\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnHungarianMap ( o )\r\n    {\r\n        var\r\n            hungarian = 'a aa ai ao as b fn i m o s ',\r\n            match,\r\n            newKey,\r\n            map = {};\r\n\r\n        $.each( o, function (key, val) {\r\n            match = key.match(/^([^A-Z]+?)([A-Z])/);\r\n\r\n            if ( match && hungarian.indexOf(match[1]+' ') !== -1 )\r\n            {\r\n                newKey = key.replace( match[0], match[2].toLowerCase() );\r\n                map[ newKey ] = key;\r\n\r\n                if ( match[1] === 'o' )\r\n                {\r\n                    _fnHungarianMap( o[key] );\r\n                }\r\n            }\r\n        } );\r\n\r\n        o._hungarianMap = map;\r\n    }\r\n\r\n\r\n    /**\r\n     * Convert from camel case parameters to Hungarian, based on a Hungarian map\r\n     * created by _fnHungarianMap.\r\n     *  @param {object} src The model object which holds all parameters that can be\r\n     *    mapped.\r\n     *  @param {object} user The object to convert from camel case to Hungarian.\r\n     *  @param {boolean} force When set to `true`, properties which already have a\r\n     *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n     *    won't be.\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnCamelToHungarian ( src, user, force )\r\n    {\r\n        if ( ! src._hungarianMap ) {\r\n            _fnHungarianMap( src );\r\n        }\r\n\r\n        var hungarianKey;\r\n\r\n        $.each( user, function (key, val) {\r\n            hungarianKey = src._hungarianMap[ key ];\r\n\r\n            if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\r\n            {\r\n                // For objects, we need to buzz down into the object to copy parameters\r\n                if ( hungarianKey.charAt(0) === 'o' )\r\n                {\r\n                    // Copy the camelCase options over to the hungarian\r\n                    if ( ! user[ hungarianKey ] ) {\r\n                        user[ hungarianKey ] = {};\r\n                    }\r\n                    $.extend( true, user[hungarianKey], user[key] );\r\n\r\n                    _fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\r\n                }\r\n                else {\r\n                    user[hungarianKey] = user[ key ];\r\n                }\r\n            }\r\n        } );\r\n    }\r\n\r\n\r\n    /**\r\n     * Language compatibility - when certain options are given, and others aren't, we\r\n     * need to duplicate the values over, in order to provide backwards compatibility\r\n     * with older language files.\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnLanguageCompat( lang )\r\n    {\r\n        var defaults = DataTable.defaults.oLanguage;\r\n        var zeroRecords = lang.sZeroRecords;\r\n\r\n        /* Backwards compatibility - if there is no sEmptyTable given, then use the same as\r\n         * sZeroRecords - assuming that is given.\r\n         */\r\n        if ( ! lang.sEmptyTable && zeroRecords &&\r\n            defaults.sEmptyTable === \"No data available in table\" )\r\n        {\r\n            _fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\r\n        }\r\n\r\n        /* Likewise with loading records */\r\n        if ( ! lang.sLoadingRecords && zeroRecords &&\r\n            defaults.sLoadingRecords === \"Loading...\" )\r\n        {\r\n            _fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\r\n        }\r\n\r\n        // Old parameter name of the thousands separator mapped onto the new\r\n        if ( lang.sInfoThousands ) {\r\n            lang.sThousands = lang.sInfoThousands;\r\n        }\r\n\r\n        var decimal = lang.sDecimal;\r\n        if ( decimal ) {\r\n            _addNumericSort( decimal );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Map one parameter onto another\r\n     *  @param {object} o Object to map\r\n     *  @param {*} knew The new parameter name\r\n     *  @param {*} old The old parameter name\r\n     */\r\n    var _fnCompatMap = function ( o, knew, old ) {\r\n        if ( o[ knew ] !== undefined ) {\r\n            o[ old ] = o[ knew ];\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Provide backwards compatibility for the main DT options. Note that the new\r\n     * options are mapped onto the old parameters, so this is an external interface\r\n     * change only.\r\n     *  @param {object} init Object to map\r\n     */\r\n    function _fnCompatOpts ( init )\r\n    {\r\n        _fnCompatMap( init, 'ordering',      'bSort' );\r\n        _fnCompatMap( init, 'orderMulti',    'bSortMulti' );\r\n        _fnCompatMap( init, 'orderClasses',  'bSortClasses' );\r\n        _fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\r\n        _fnCompatMap( init, 'order',         'aaSorting' );\r\n        _fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\r\n        _fnCompatMap( init, 'paging',        'bPaginate' );\r\n        _fnCompatMap( init, 'pagingType',    'sPaginationType' );\r\n        _fnCompatMap( init, 'pageLength',    'iDisplayLength' );\r\n        _fnCompatMap( init, 'searching',     'bFilter' );\r\n\r\n        // Boolean initialisation of x-scrolling\r\n        if ( typeof init.sScrollX === 'boolean' ) {\r\n            init.sScrollX = init.sScrollX ? '100%' : '';\r\n        }\r\n        if ( typeof init.scrollX === 'boolean' ) {\r\n            init.scrollX = init.scrollX ? '100%' : '';\r\n        }\r\n\r\n        // Column search objects are in an array, so it needs to be converted\r\n        // element by element\r\n        var searchCols = init.aoSearchCols;\r\n\r\n        if ( searchCols ) {\r\n            for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\r\n                if ( searchCols[i] ) {\r\n                    _fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Provide backwards compatibility for column options. Note that the new options\r\n     * are mapped onto the old parameters, so this is an external interface change\r\n     * only.\r\n     *  @param {object} init Object to map\r\n     */\r\n    function _fnCompatCols ( init )\r\n    {\r\n        _fnCompatMap( init, 'orderable',     'bSortable' );\r\n        _fnCompatMap( init, 'orderData',     'aDataSort' );\r\n        _fnCompatMap( init, 'orderSequence', 'asSorting' );\r\n        _fnCompatMap( init, 'orderDataType', 'sortDataType' );\r\n\r\n        // orderData can be given as an integer\r\n        var dataSort = init.aDataSort;\r\n        if ( dataSort && ! $.isArray( dataSort ) ) {\r\n            init.aDataSort = [ dataSort ];\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Browser feature detection for capabilities, quirks\r\n     *  @param {object} settings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnBrowserDetect( settings )\r\n    {\r\n        // We don't need to do this every time DataTables is constructed, the values\r\n        // calculated are specific to the browser and OS configuration which we\r\n        // don't expect to change between initialisations\r\n        if ( ! DataTable.__browser ) {\r\n            var browser = {};\r\n            DataTable.__browser = browser;\r\n\r\n            // Scrolling feature / quirks detection\r\n            var n = $('<div/>')\r\n                .css( {\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    height: 1,\r\n                    width: 1,\r\n                    overflow: 'hidden'\r\n                } )\r\n                .append(\r\n                    $('<div/>')\r\n                        .css( {\r\n                            position: 'absolute',\r\n                            top: 1,\r\n                            left: 1,\r\n                            width: 100,\r\n                            overflow: 'scroll'\r\n                        } )\r\n                        .append(\r\n                            $('<div/>')\r\n                                .css( {\r\n                                    width: '100%',\r\n                                    height: 10\r\n                                } )\r\n                        )\r\n                )\r\n                .appendTo( 'body' );\r\n\r\n            var outer = n.children();\r\n            var inner = outer.children();\r\n\r\n            // Numbers below, in order, are:\r\n            // inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\r\n            //\r\n            // IE6 XP:                           100 100 100  83\r\n            // IE7 Vista:                        100 100 100  83\r\n            // IE 8+ Windows:                     83  83 100  83\r\n            // Evergreen Windows:                 83  83 100  83\r\n            // Evergreen Mac with scrollbars:     85  85 100  85\r\n            // Evergreen Mac without scrollbars: 100 100 100 100\r\n\r\n            // Get scrollbar width\r\n            browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\r\n\r\n            // IE6/7 will oversize a width 100% element inside a scrolling element, to\r\n            // include the width of the scrollbar, while other browsers ensure the inner\r\n            // element is contained without forcing scrolling\r\n            browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\r\n\r\n            // In rtl text layout, some browsers (most, but not all) will place the\r\n            // scrollbar on the left, rather than the right.\r\n            browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\r\n\r\n            // IE8- don't provide height and width for getBoundingClientRect\r\n            browser.bBounding = n[0].getBoundingClientRect().width ? true : false;\r\n\r\n            n.remove();\r\n        }\r\n\r\n        $.extend( settings.oBrowser, DataTable.__browser );\r\n        settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\r\n    }\r\n\r\n\r\n    /**\r\n     * Array.prototype reduce[Right] method, used for browsers which don't support\r\n     * JS 1.6. Done this way to reduce code size, since we iterate either way\r\n     *  @param {object} settings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnReduce ( that, fn, init, start, end, inc )\r\n    {\r\n        var\r\n            i = start,\r\n            value,\r\n            isSet = false;\r\n\r\n        if ( init !== undefined ) {\r\n            value = init;\r\n            isSet = true;\r\n        }\r\n\r\n        while ( i !== end ) {\r\n            if ( ! that.hasOwnProperty(i) ) {\r\n                continue;\r\n            }\r\n\r\n            value = isSet ?\r\n                fn( value, that[i], i, that ) :\r\n                that[i];\r\n\r\n            isSet = true;\r\n            i += inc;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Add a column to the list used for the table with default values\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {node} nTh The th element for this column\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAddColumn( oSettings, nTh )\r\n    {\r\n        // Add column to aoColumns array\r\n        var oDefaults = DataTable.defaults.column;\r\n        var iCol = oSettings.aoColumns.length;\r\n        var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\r\n            \"nTh\": nTh ? nTh : document.createElement('th'),\r\n            \"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\r\n            \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\r\n            \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\r\n            idx: iCol\r\n        } );\r\n        oSettings.aoColumns.push( oCol );\r\n\r\n        // Add search object for column specific search. Note that the `searchCols[ iCol ]`\r\n        // passed into extend can be undefined. This allows the user to give a default\r\n        // with only some of the parameters defined, and also not give a default\r\n        var searchCols = oSettings.aoPreSearchCols;\r\n        searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\r\n\r\n        // Use the default column options function to initialise classes etc\r\n        _fnColumnOptions( oSettings, iCol, $(nTh).data() );\r\n    }\r\n\r\n\r\n    /**\r\n     * Apply options for a column\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {int} iCol column index to consider\r\n     *  @param {object} oOptions object with sType, bVisible and bSearchable etc\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnColumnOptions( oSettings, iCol, oOptions )\r\n    {\r\n        var oCol = oSettings.aoColumns[ iCol ];\r\n        var oClasses = oSettings.oClasses;\r\n        var th = $(oCol.nTh);\r\n\r\n        // Try to get width information from the DOM. We can't get it from CSS\r\n        // as we'd need to parse the CSS stylesheet. `width` option can override\r\n        if ( ! oCol.sWidthOrig ) {\r\n            // Width attribute\r\n            oCol.sWidthOrig = th.attr('width') || null;\r\n\r\n            // Style attribute\r\n            var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\r\n            if ( t ) {\r\n                oCol.sWidthOrig = t[1];\r\n            }\r\n        }\r\n\r\n        /* User specified column options */\r\n        if ( oOptions !== undefined && oOptions !== null )\r\n        {\r\n            // Backwards compatibility\r\n            _fnCompatCols( oOptions );\r\n\r\n            // Map camel case parameters to their Hungarian counterparts\r\n            _fnCamelToHungarian( DataTable.defaults.column, oOptions );\r\n\r\n            /* Backwards compatibility for mDataProp */\r\n            if ( oOptions.mDataProp !== undefined && !oOptions.mData )\r\n            {\r\n                oOptions.mData = oOptions.mDataProp;\r\n            }\r\n\r\n            if ( oOptions.sType )\r\n            {\r\n                oCol._sManualType = oOptions.sType;\r\n            }\r\n\r\n            // `class` is a reserved word in Javascript, so we need to provide\r\n            // the ability to use a valid name for the camel case input\r\n            if ( oOptions.className && ! oOptions.sClass )\r\n            {\r\n                oOptions.sClass = oOptions.className;\r\n            }\r\n\r\n            $.extend( oCol, oOptions );\r\n            _fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\r\n\r\n            /* iDataSort to be applied (backwards compatibility), but aDataSort will take\r\n             * priority if defined\r\n             */\r\n            if ( oOptions.iDataSort !== undefined )\r\n            {\r\n                oCol.aDataSort = [ oOptions.iDataSort ];\r\n            }\r\n            _fnMap( oCol, oOptions, \"aDataSort\" );\r\n        }\r\n\r\n        /* Cache the data get and set functions for speed */\r\n        var mDataSrc = oCol.mData;\r\n        var mData = _fnGetObjectDataFn( mDataSrc );\r\n        var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\r\n\r\n        var attrTest = function( src ) {\r\n            return typeof src === 'string' && src.indexOf('@') !== -1;\r\n        };\r\n        oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\r\n                attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\r\n            );\r\n        oCol._setter = null;\r\n\r\n        oCol.fnGetData = function (rowData, type, meta) {\r\n            var innerData = mData( rowData, type, undefined, meta );\r\n\r\n            return mRender && type ?\r\n                mRender( innerData, type, rowData, meta ) :\r\n                innerData;\r\n        };\r\n        oCol.fnSetData = function ( rowData, val, meta ) {\r\n            return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\r\n        };\r\n\r\n        // Indicate if DataTables should read DOM data as an object or array\r\n        // Used in _fnGetRowElements\r\n        if ( typeof mDataSrc !== 'number' ) {\r\n            oSettings._rowReadObject = true;\r\n        }\r\n\r\n        /* Feature sorting overrides column specific when off */\r\n        if ( !oSettings.oFeatures.bSort )\r\n        {\r\n            oCol.bSortable = false;\r\n            th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\r\n        }\r\n\r\n        /* Check that the class assignment is correct for sorting */\r\n        var bAsc = $.inArray('asc', oCol.asSorting) !== -1;\r\n        var bDesc = $.inArray('desc', oCol.asSorting) !== -1;\r\n        if ( !oCol.bSortable || (!bAsc && !bDesc) )\r\n        {\r\n            oCol.sSortingClass = oClasses.sSortableNone;\r\n            oCol.sSortingClassJUI = \"\";\r\n        }\r\n        else if ( bAsc && !bDesc )\r\n        {\r\n            oCol.sSortingClass = oClasses.sSortableAsc;\r\n            oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\r\n        }\r\n        else if ( !bAsc && bDesc )\r\n        {\r\n            oCol.sSortingClass = oClasses.sSortableDesc;\r\n            oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\r\n        }\r\n        else\r\n        {\r\n            oCol.sSortingClass = oClasses.sSortable;\r\n            oCol.sSortingClassJUI = oClasses.sSortJUI;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Adjust the table column widths for new data. Note: you would probably want to\r\n     * do a redraw after calling this function!\r\n     *  @param {object} settings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAdjustColumnSizing ( settings )\r\n    {\r\n        /* Not interested in doing column width calculation if auto-width is disabled */\r\n        if ( settings.oFeatures.bAutoWidth !== false )\r\n        {\r\n            var columns = settings.aoColumns;\r\n\r\n            _fnCalculateColumnWidths( settings );\r\n            for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\r\n            {\r\n                columns[i].nTh.style.width = columns[i].sWidth;\r\n            }\r\n        }\r\n\r\n        var scroll = settings.oScroll;\r\n        if ( scroll.sY !== '' || scroll.sX !== '')\r\n        {\r\n            _fnScrollDraw( settings );\r\n        }\r\n\r\n        _fnCallbackFire( settings, null, 'column-sizing', [settings] );\r\n    }\r\n\r\n\r\n    /**\r\n     * Covert the index of a visible column to the index in the data array (take account\r\n     * of hidden columns)\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {int} iMatch Visible column index to lookup\r\n     *  @returns {int} i the data index\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnVisibleToColumnIndex( oSettings, iMatch )\r\n    {\r\n        var aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\r\n        return typeof aiVis[iMatch] === 'number' ?\r\n            aiVis[iMatch] :\r\n            null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Covert the index of an index in the data array and convert it to the visible\r\n     *   column index (take account of hidden columns)\r\n     *  @param {int} iMatch Column index to lookup\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @returns {int} i the data index\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnColumnIndexToVisible( oSettings, iMatch )\r\n    {\r\n        var aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n        var iPos = $.inArray( iMatch, aiVis );\r\n\r\n        return iPos !== -1 ? iPos : null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the number of visible columns\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @returns {int} i the number of visible columns\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnVisbleColumns( oSettings )\r\n    {\r\n        var vis = 0;\r\n\r\n        // No reduce in IE8, use a loop for now\r\n        $.each( oSettings.aoColumns, function ( i, col ) {\r\n            if ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\r\n                vis++;\r\n            }\r\n        } );\r\n\r\n        return vis;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get an array of column indexes that match a given property\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {string} sParam Parameter in aoColumns to look for - typically\r\n     *    bVisible or bSearchable\r\n     *  @returns {array} Array of indexes with matched properties\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnGetColumns( oSettings, sParam )\r\n    {\r\n        var a = [];\r\n\r\n        $.map( oSettings.aoColumns, function(val, i) {\r\n            if ( val[sParam] ) {\r\n                a.push( i );\r\n            }\r\n        } );\r\n\r\n        return a;\r\n    }\r\n\r\n\r\n    /**\r\n     * Calculate the 'type' of a column\r\n     *  @param {object} settings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnColumnTypes ( settings )\r\n    {\r\n        var columns = settings.aoColumns;\r\n        var data = settings.aoData;\r\n        var types = DataTable.ext.type.detect;\r\n        var i, ien, j, jen, k, ken;\r\n        var col, cell, detectedType, cache;\r\n\r\n        // For each column, spin over the\r\n        for ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n            col = columns[i];\r\n            cache = [];\r\n\r\n            if ( ! col.sType && col._sManualType ) {\r\n                col.sType = col._sManualType;\r\n            }\r\n            else if ( ! col.sType ) {\r\n                for ( j=0, jen=types.length ; j<jen ; j++ ) {\r\n                    for ( k=0, ken=data.length ; k<ken ; k++ ) {\r\n                        // Use a cache array so we only need to get the type data\r\n                        // from the formatter once (when using multiple detectors)\r\n                        if ( cache[k] === undefined ) {\r\n                            cache[k] = _fnGetCellData( settings, k, i, 'type' );\r\n                        }\r\n\r\n                        detectedType = types[j]( cache[k], settings );\r\n\r\n                        // If null, then this type can't apply to this column, so\r\n                        // rather than testing all cells, break out. There is an\r\n                        // exception for the last type which is `html`. We need to\r\n                        // scan all rows since it is possible to mix string and HTML\r\n                        // types\r\n                        if ( ! detectedType && j !== types.length-1 ) {\r\n                            break;\r\n                        }\r\n\r\n                        // Only a single match is needed for html type since it is\r\n                        // bottom of the pile and very similar to string\r\n                        if ( detectedType === 'html' ) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // Type is valid for all data points in the column - use this\r\n                    // type\r\n                    if ( detectedType ) {\r\n                        col.sType = detectedType;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Fall back - if no type was detected, always use string\r\n                if ( ! col.sType ) {\r\n                    col.sType = 'string';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Take the column definitions and static columns arrays and calculate how\r\n     * they relate to column indexes. The callback function will then apply the\r\n     * definition found for a column to a suitable configuration object.\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\r\n     *  @param {array} aoCols The aoColumns array that defines columns individually\r\n     *  @param {function} fn Callback function - takes two parameters, the calculated\r\n     *    column index and the definition for that column.\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\r\n    {\r\n        var i, iLen, j, jLen, k, kLen, def;\r\n        var columns = oSettings.aoColumns;\r\n\r\n        // Column definitions with aTargets\r\n        if ( aoColDefs )\r\n        {\r\n            /* Loop over the definitions array - loop in reverse so first instance has priority */\r\n            for ( i=aoColDefs.length-1 ; i>=0 ; i-- )\r\n            {\r\n                def = aoColDefs[i];\r\n\r\n                /* Each definition can target multiple columns, as it is an array */\r\n                var aTargets = def.targets !== undefined ?\r\n                    def.targets :\r\n                    def.aTargets;\r\n\r\n                if ( ! $.isArray( aTargets ) )\r\n                {\r\n                    aTargets = [ aTargets ];\r\n                }\r\n\r\n                for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\r\n                {\r\n                    if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\r\n                    {\r\n                        /* Add columns that we don't yet know about */\r\n                        while( columns.length <= aTargets[j] )\r\n                        {\r\n                            _fnAddColumn( oSettings );\r\n                        }\r\n\r\n                        /* Integer, basic index */\r\n                        fn( aTargets[j], def );\r\n                    }\r\n                    else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\r\n                    {\r\n                        /* Negative integer, right to left column counting */\r\n                        fn( columns.length+aTargets[j], def );\r\n                    }\r\n                    else if ( typeof aTargets[j] === 'string' )\r\n                    {\r\n                        /* Class name matching on TH element */\r\n                        for ( k=0, kLen=columns.length ; k<kLen ; k++ )\r\n                        {\r\n                            if ( aTargets[j] == \"_all\" ||\r\n                                $(columns[k].nTh).hasClass( aTargets[j] ) )\r\n                            {\r\n                                fn( k, def );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Statically defined columns array\r\n        if ( aoCols )\r\n        {\r\n            for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\r\n            {\r\n                fn( i, aoCols[i] );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a data array to the table, creating DOM node etc. This is the parallel to\r\n     * _fnGatherData, but for adding rows from a Javascript source, rather than a\r\n     * DOM source.\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {array} aData data array to be added\r\n     *  @param {node} [nTr] TR element to add to the table - optional. If not given,\r\n     *    DataTables will create a row automatically\r\n     *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n     *    if nTr is.\r\n     *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAddData ( oSettings, aDataIn, nTr, anTds )\r\n    {\r\n        /* Create the object for storing information about this new row */\r\n        var iRow = oSettings.aoData.length;\r\n        var oData = $.extend( true, {}, DataTable.models.oRow, {\r\n            src: nTr ? 'dom' : 'data',\r\n            idx: iRow\r\n        } );\r\n\r\n        oData._aData = aDataIn;\r\n        oSettings.aoData.push( oData );\r\n\r\n        /* Create the cells */\r\n        var nTd, sThisType;\r\n        var columns = oSettings.aoColumns;\r\n\r\n        // Invalidate the column types as the new data needs to be revalidated\r\n        for ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n        {\r\n            columns[i].sType = null;\r\n        }\r\n\r\n        /* Add to the display array */\r\n        oSettings.aiDisplayMaster.push( iRow );\r\n\r\n        var id = oSettings.rowIdFn( aDataIn );\r\n        if ( id !== undefined ) {\r\n            oSettings.aIds[ id ] = oData;\r\n        }\r\n\r\n        /* Create the DOM information, or register it if already present */\r\n        if ( nTr || ! oSettings.oFeatures.bDeferRender )\r\n        {\r\n            _fnCreateTr( oSettings, iRow, nTr, anTds );\r\n        }\r\n\r\n        return iRow;\r\n    }\r\n\r\n\r\n    /**\r\n     * Add one or more TR elements to the table. Generally we'd expect to\r\n     * use this for reading data from a DOM sourced table, but it could be\r\n     * used for an TR element. Note that if a TR is given, it is used (i.e.\r\n     * it is not cloned).\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {array|node|jQuery} trs The TR element(s) to add to the table\r\n     *  @returns {array} Array of indexes for the added rows\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAddTr( settings, trs )\r\n    {\r\n        var row;\r\n\r\n        // Allow an individual node to be passed in\r\n        if ( ! (trs instanceof $) ) {\r\n            trs = $(trs);\r\n        }\r\n\r\n        return trs.map( function (i, el) {\r\n            row = _fnGetRowElements( settings, el );\r\n            return _fnAddData( settings, row.data, el, row.cells );\r\n        } );\r\n    }\r\n\r\n\r\n    /**\r\n     * Take a TR element and convert it to an index in aoData\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {node} n the TR element to find\r\n     *  @returns {int} index if the node is found, null if not\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnNodeToDataIndex( oSettings, n )\r\n    {\r\n        return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Take a TD element and convert it into a column data index (not the visible index)\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {int} iRow The row number the TD/TH can be found in\r\n     *  @param {node} n The TD/TH element to find\r\n     *  @returns {int} index if the node is found, -1 if not\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnNodeToColumnIndex( oSettings, iRow, n )\r\n    {\r\n        return $.inArray( n, oSettings.aoData[ iRow ].anCells );\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the data for a given cell from the internal cache, taking into account data mapping\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {int} rowIdx aoData row id\r\n     *  @param {int} colIdx Column index\r\n     *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\r\n     *  @returns {*} Cell data\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnGetCellData( settings, rowIdx, colIdx, type )\r\n    {\r\n        var draw           = settings.iDraw;\r\n        var col            = settings.aoColumns[colIdx];\r\n        var rowData        = settings.aoData[rowIdx]._aData;\r\n        var defaultContent = col.sDefaultContent;\r\n        var cellData       = col.fnGetData( rowData, type, {\r\n            settings: settings,\r\n            row:      rowIdx,\r\n            col:      colIdx\r\n        } );\r\n\r\n        if ( cellData === undefined ) {\r\n            if ( settings.iDrawError != draw && defaultContent === null ) {\r\n                _fnLog( settings, 0, \"Requested unknown parameter \"+\r\n                    (typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\r\n                    \" for row \"+rowIdx+\", column \"+colIdx, 4 );\r\n                settings.iDrawError = draw;\r\n            }\r\n            return defaultContent;\r\n        }\r\n\r\n        // When the data source is null and a specific data type is requested (i.e.\r\n        // not the original data), we can use default column data\r\n        if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\r\n            cellData = defaultContent;\r\n        }\r\n        else if ( typeof cellData === 'function' ) {\r\n            // If the data source is a function, then we run it and use the return,\r\n            // executing in the scope of the data object (for instances)\r\n            return cellData.call( rowData );\r\n        }\r\n\r\n        if ( cellData === null && type == 'display' ) {\r\n            return '';\r\n        }\r\n        return cellData;\r\n    }\r\n\r\n\r\n    /**\r\n     * Set the value for a specific cell, into the internal data cache\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {int} rowIdx aoData row id\r\n     *  @param {int} colIdx Column index\r\n     *  @param {*} val Value to set\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSetCellData( settings, rowIdx, colIdx, val )\r\n    {\r\n        var col     = settings.aoColumns[colIdx];\r\n        var rowData = settings.aoData[rowIdx]._aData;\r\n\r\n        col.fnSetData( rowData, val, {\r\n            settings: settings,\r\n            row:      rowIdx,\r\n            col:      colIdx\r\n        }  );\r\n    }\r\n\r\n\r\n    // Private variable that is used to match action syntax in the data property object\r\n    var __reArray = /\\[.*?\\]$/;\r\n    var __reFn = /\\(\\)$/;\r\n\r\n    /**\r\n     * Split string on periods, taking into account escaped periods\r\n     * @param  {string} str String to split\r\n     * @return {array} Split string\r\n     */\r\n    function _fnSplitObjNotation( str )\r\n    {\r\n        return $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\r\n            return s.replace(/\\\\./g, '.');\r\n        } );\r\n    }\r\n\r\n\r\n    /**\r\n     * Return a function that can be used to get data from a source object, taking\r\n     * into account the ability to use nested objects as a source\r\n     *  @param {string|int|function} mSource The data source for the object\r\n     *  @returns {function} Data get function\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnGetObjectDataFn( mSource )\r\n    {\r\n        if ( $.isPlainObject( mSource ) )\r\n        {\r\n            /* Build an object of get functions, and wrap them in a single call */\r\n            var o = {};\r\n            $.each( mSource, function (key, val) {\r\n                if ( val ) {\r\n                    o[key] = _fnGetObjectDataFn( val );\r\n                }\r\n            } );\r\n\r\n            return function (data, type, row, meta) {\r\n                var t = o[type] || o._;\r\n                return t !== undefined ?\r\n                    t(data, type, row, meta) :\r\n                    data;\r\n            };\r\n        }\r\n        else if ( mSource === null )\r\n        {\r\n            /* Give an empty string for rendering / sorting etc */\r\n            return function (data) { // type, row and meta also passed, but not used\r\n                return data;\r\n            };\r\n        }\r\n        else if ( typeof mSource === 'function' )\r\n        {\r\n            return function (data, type, row, meta) {\r\n                return mSource( data, type, row, meta );\r\n            };\r\n        }\r\n        else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\r\n            mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\r\n        {\r\n            /* If there is a . in the source string then the data source is in a\r\n             * nested object so we loop over the data for each level to get the next\r\n             * level down. On each loop we test for undefined, and if found immediately\r\n             * return. This allows entire objects to be missing and sDefaultContent to\r\n             * be used if defined, rather than throwing an error\r\n             */\r\n            var fetchData = function (data, type, src) {\r\n                var arrayNotation, funcNotation, out, innerSrc;\r\n\r\n                if ( src !== \"\" )\r\n                {\r\n                    var a = _fnSplitObjNotation( src );\r\n\r\n                    for ( var i=0, iLen=a.length ; i<iLen ; i++ )\r\n                    {\r\n                        // Check if we are dealing with special notation\r\n                        arrayNotation = a[i].match(__reArray);\r\n                        funcNotation = a[i].match(__reFn);\r\n\r\n                        if ( arrayNotation )\r\n                        {\r\n                            // Array notation\r\n                            a[i] = a[i].replace(__reArray, '');\r\n\r\n                            // Condition allows simply [] to be passed in\r\n                            if ( a[i] !== \"\" ) {\r\n                                data = data[ a[i] ];\r\n                            }\r\n                            out = [];\r\n\r\n                            // Get the remainder of the nested object to get\r\n                            a.splice( 0, i+1 );\r\n                            innerSrc = a.join('.');\r\n\r\n                            // Traverse each entry in the array getting the properties requested\r\n                            if ( $.isArray( data ) ) {\r\n                                for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\r\n                                    out.push( fetchData( data[j], type, innerSrc ) );\r\n                                }\r\n                            }\r\n\r\n                            // If a string is given in between the array notation indicators, that\r\n                            // is used to join the strings together, otherwise an array is returned\r\n                            var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\r\n                            data = (join===\"\") ? out : out.join(join);\r\n\r\n                            // The inner call to fetchData has already traversed through the remainder\r\n                            // of the source requested, so we exit from the loop\r\n                            break;\r\n                        }\r\n                        else if ( funcNotation )\r\n                        {\r\n                            // Function call\r\n                            a[i] = a[i].replace(__reFn, '');\r\n                            data = data[ a[i] ]();\r\n                            continue;\r\n                        }\r\n\r\n                        if ( data === null || data[ a[i] ] === undefined )\r\n                        {\r\n                            return undefined;\r\n                        }\r\n                        data = data[ a[i] ];\r\n                    }\r\n                }\r\n\r\n                return data;\r\n            };\r\n\r\n            return function (data, type) { // row and meta also passed, but not used\r\n                return fetchData( data, type, mSource );\r\n            };\r\n        }\r\n        else\r\n        {\r\n            /* Array or flat object mapping */\r\n            return function (data, type) { // row and meta also passed, but not used\r\n                return data[mSource];\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Return a function that can be used to set data from a source object, taking\r\n     * into account the ability to use nested objects as a source\r\n     *  @param {string|int|function} mSource The data source for the object\r\n     *  @returns {function} Data set function\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSetObjectDataFn( mSource )\r\n    {\r\n        if ( $.isPlainObject( mSource ) )\r\n        {\r\n            /* Unlike get, only the underscore (global) option is used for for\r\n             * setting data since we don't know the type here. This is why an object\r\n             * option is not documented for `mData` (which is read/write), but it is\r\n             * for `mRender` which is read only.\r\n             */\r\n            return _fnSetObjectDataFn( mSource._ );\r\n        }\r\n        else if ( mSource === null )\r\n        {\r\n            /* Nothing to do when the data source is null */\r\n            return function () {};\r\n        }\r\n        else if ( typeof mSource === 'function' )\r\n        {\r\n            return function (data, val, meta) {\r\n                mSource( data, 'set', val, meta );\r\n            };\r\n        }\r\n        else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\r\n            mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\r\n        {\r\n            /* Like the get, we need to get data from a nested object */\r\n            var setData = function (data, val, src) {\r\n                var a = _fnSplitObjNotation( src ), b;\r\n                var aLast = a[a.length-1];\r\n                var arrayNotation, funcNotation, o, innerSrc;\r\n\r\n                for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\r\n                {\r\n                    // Check if we are dealing with an array notation request\r\n                    arrayNotation = a[i].match(__reArray);\r\n                    funcNotation = a[i].match(__reFn);\r\n\r\n                    if ( arrayNotation )\r\n                    {\r\n                        a[i] = a[i].replace(__reArray, '');\r\n                        data[ a[i] ] = [];\r\n\r\n                        // Get the remainder of the nested object to set so we can recurse\r\n                        b = a.slice();\r\n                        b.splice( 0, i+1 );\r\n                        innerSrc = b.join('.');\r\n\r\n                        // Traverse each entry in the array setting the properties requested\r\n                        if ( $.isArray( val ) )\r\n                        {\r\n                            for ( var j=0, jLen=val.length ; j<jLen ; j++ )\r\n                            {\r\n                                o = {};\r\n                                setData( o, val[j], innerSrc );\r\n                                data[ a[i] ].push( o );\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            // We've been asked to save data to an array, but it\r\n                            // isn't array data to be saved. Best that can be done\r\n                            // is to just save the value.\r\n                            data[ a[i] ] = val;\r\n                        }\r\n\r\n                        // The inner call to setData has already traversed through the remainder\r\n                        // of the source and has set the data, thus we can exit here\r\n                        return;\r\n                    }\r\n                    else if ( funcNotation )\r\n                    {\r\n                        // Function call\r\n                        a[i] = a[i].replace(__reFn, '');\r\n                        data = data[ a[i] ]( val );\r\n                    }\r\n\r\n                    // If the nested object doesn't currently exist - since we are\r\n                    // trying to set the value - create it\r\n                    if ( data[ a[i] ] === null || data[ a[i] ] === undefined )\r\n                    {\r\n                        data[ a[i] ] = {};\r\n                    }\r\n                    data = data[ a[i] ];\r\n                }\r\n\r\n                // Last item in the input - i.e, the actual set\r\n                if ( aLast.match(__reFn ) )\r\n                {\r\n                    // Function call\r\n                    data = data[ aLast.replace(__reFn, '') ]( val );\r\n                }\r\n                else\r\n                {\r\n                    // If array notation is used, we just want to strip it and use the property name\r\n                    // and assign the value. If it isn't used, then we get the result we want anyway\r\n                    data[ aLast.replace(__reArray, '') ] = val;\r\n                }\r\n            };\r\n\r\n            return function (data, val) { // meta is also passed in, but not used\r\n                return setData( data, val, mSource );\r\n            };\r\n        }\r\n        else\r\n        {\r\n            /* Array or flat object mapping */\r\n            return function (data, val) { // meta is also passed in, but not used\r\n                data[mSource] = val;\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Return an array with the full table data\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @returns array {array} aData Master data array\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnGetDataMaster ( settings )\r\n    {\r\n        return _pluck( settings.aoData, '_aData' );\r\n    }\r\n\r\n\r\n    /**\r\n     * Nuke the table\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnClearTable( settings )\r\n    {\r\n        settings.aoData.length = 0;\r\n        settings.aiDisplayMaster.length = 0;\r\n        settings.aiDisplay.length = 0;\r\n        settings.aIds = {};\r\n    }\r\n\r\n\r\n    /**\r\n     * Take an array of integers (index array) and remove a target integer (value - not\r\n     * the key!)\r\n     *  @param {array} a Index array to target\r\n     *  @param {int} iTarget value to find\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnDeleteIndex( a, iTarget, splice )\r\n    {\r\n        var iTargetIndex = -1;\r\n\r\n        for ( var i=0, iLen=a.length ; i<iLen ; i++ )\r\n        {\r\n            if ( a[i] == iTarget )\r\n            {\r\n                iTargetIndex = i;\r\n            }\r\n            else if ( a[i] > iTarget )\r\n            {\r\n                a[i]--;\r\n            }\r\n        }\r\n\r\n        if ( iTargetIndex != -1 && splice === undefined )\r\n        {\r\n            a.splice( iTargetIndex, 1 );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Mark cached data as invalid such that a re-read of the data will occur when\r\n     * the cached data is next requested. Also update from the data source object.\r\n     *\r\n     * @param {object} settings DataTables settings object\r\n     * @param {int}    rowIdx   Row index to invalidate\r\n     * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\r\n     *     or 'data'\r\n     * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\r\n     *     row will be invalidated\r\n     * @memberof DataTable#oApi\r\n     *\r\n     * @todo For the modularisation of v1.11 this will need to become a callback, so\r\n     *   the sort and filter methods can subscribe to it. That will required\r\n     *   initialisation options for sorting, which is why it is not already baked in\r\n     */\r\n    function _fnInvalidate( settings, rowIdx, src, colIdx )\r\n    {\r\n        var row = settings.aoData[ rowIdx ];\r\n        var i, ien;\r\n        var cellWrite = function ( cell, col ) {\r\n            // This is very frustrating, but in IE if you just write directly\r\n            // to innerHTML, and elements that are overwritten are GC'ed,\r\n            // even if there is a reference to them elsewhere\r\n            while ( cell.childNodes.length ) {\r\n                cell.removeChild( cell.firstChild );\r\n            }\r\n\r\n            cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\r\n        };\r\n\r\n        // Are we reading last data from DOM or the data object?\r\n        if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\r\n            // Read the data from the DOM\r\n            row._aData = _fnGetRowElements(\r\n                settings, row, colIdx, colIdx === undefined ? undefined : row._aData\r\n            )\r\n                .data;\r\n        }\r\n        else {\r\n            // Reading from data object, update the DOM\r\n            var cells = row.anCells;\r\n\r\n            if ( cells ) {\r\n                if ( colIdx !== undefined ) {\r\n                    cellWrite( cells[colIdx], colIdx );\r\n                }\r\n                else {\r\n                    for ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n                        cellWrite( cells[i], i );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // For both row and cell invalidation, the cached data for sorting and\r\n        // filtering is nulled out\r\n        row._aSortData = null;\r\n        row._aFilterData = null;\r\n\r\n        // Invalidate the type for a specific column (if given) or all columns since\r\n        // the data might have changed\r\n        var cols = settings.aoColumns;\r\n        if ( colIdx !== undefined ) {\r\n            cols[ colIdx ].sType = null;\r\n        }\r\n        else {\r\n            for ( i=0, ien=cols.length ; i<ien ; i++ ) {\r\n                cols[i].sType = null;\r\n            }\r\n\r\n            // Update DataTables special `DT_*` attributes for the row\r\n            _fnRowAttributes( settings, row );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Build a data source object from an HTML row, reading the contents of the\r\n     * cells that are in the row.\r\n     *\r\n     * @param {object} settings DataTables settings object\r\n     * @param {node|object} TR element from which to read data or existing row\r\n     *   object from which to re-read the data from the cells\r\n     * @param {int} [colIdx] Optional column index\r\n     * @param {array|object} [d] Data source object. If `colIdx` is given then this\r\n     *   parameter should also be given and will be used to write the data into.\r\n     *   Only the column in question will be written\r\n     * @returns {object} Object with two parameters: `data` the data read, in\r\n     *   document order, and `cells` and array of nodes (they can be useful to the\r\n     *   caller, so rather than needing a second traversal to get them, just return\r\n     *   them from here).\r\n     * @memberof DataTable#oApi\r\n     */\r\n    function _fnGetRowElements( settings, row, colIdx, d )\r\n    {\r\n        var\r\n            tds = [],\r\n            td = row.firstChild,\r\n            name, col, o, i=0, contents,\r\n            columns = settings.aoColumns,\r\n            objectRead = settings._rowReadObject;\r\n\r\n        // Allow the data object to be passed in, or construct\r\n        d = d !== undefined ?\r\n            d :\r\n            objectRead ?\r\n            {} :\r\n                [];\r\n\r\n        var attr = function ( str, td  ) {\r\n            if ( typeof str === 'string' ) {\r\n                var idx = str.indexOf('@');\r\n\r\n                if ( idx !== -1 ) {\r\n                    var attr = str.substring( idx+1 );\r\n                    var setter = _fnSetObjectDataFn( str );\r\n                    setter( d, td.getAttribute( attr ) );\r\n                }\r\n            }\r\n        };\r\n\r\n        // Read data from a cell and store into the data object\r\n        var cellProcess = function ( cell ) {\r\n            if ( colIdx === undefined || colIdx === i ) {\r\n                col = columns[i];\r\n                contents = $.trim(cell.innerHTML);\r\n\r\n                if ( col && col._bAttrSrc ) {\r\n                    var setter = _fnSetObjectDataFn( col.mData._ );\r\n                    setter( d, contents );\r\n\r\n                    attr( col.mData.sort, cell );\r\n                    attr( col.mData.type, cell );\r\n                    attr( col.mData.filter, cell );\r\n                }\r\n                else {\r\n                    // Depending on the `data` option for the columns the data can\r\n                    // be read to either an object or an array.\r\n                    if ( objectRead ) {\r\n                        if ( ! col._setter ) {\r\n                            // Cache the setter function\r\n                            col._setter = _fnSetObjectDataFn( col.mData );\r\n                        }\r\n                        col._setter( d, contents );\r\n                    }\r\n                    else {\r\n                        d[i] = contents;\r\n                    }\r\n                }\r\n            }\r\n\r\n            i++;\r\n        };\r\n\r\n        if ( td ) {\r\n            // `tr` element was passed in\r\n            while ( td ) {\r\n                name = td.nodeName.toUpperCase();\r\n\r\n                if ( name == \"TD\" || name == \"TH\" ) {\r\n                    cellProcess( td );\r\n                    tds.push( td );\r\n                }\r\n\r\n                td = td.nextSibling;\r\n            }\r\n        }\r\n        else {\r\n            // Existing row object passed in\r\n            tds = row.anCells;\r\n\r\n            for ( var j=0, jen=tds.length ; j<jen ; j++ ) {\r\n                cellProcess( tds[j] );\r\n            }\r\n        }\r\n\r\n        // Read the ID from the DOM if present\r\n        var rowNode = row.firstChild ? row : row.nTr;\r\n\r\n        if ( rowNode ) {\r\n            var id = rowNode.getAttribute( 'id' );\r\n\r\n            if ( id ) {\r\n                _fnSetObjectDataFn( settings.rowId )( d, id );\r\n            }\r\n        }\r\n\r\n        return {\r\n            data: d,\r\n            cells: tds\r\n        };\r\n    }\r\n    /**\r\n     * Create a new TR element (and it's TD children) for a row\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {int} iRow Row to consider\r\n     *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\r\n     *    DataTables will create a row automatically\r\n     *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n     *    if nTr is.\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\r\n    {\r\n        var\r\n            row = oSettings.aoData[iRow],\r\n            rowData = row._aData,\r\n            cells = [],\r\n            nTr, nTd, oCol,\r\n            i, iLen;\r\n\r\n        if ( row.nTr === null )\r\n        {\r\n            nTr = nTrIn || document.createElement('tr');\r\n\r\n            row.nTr = nTr;\r\n            row.anCells = cells;\r\n\r\n            /* Use a private property on the node to allow reserve mapping from the node\r\n             * to the aoData array for fast look up\r\n             */\r\n            nTr._DT_RowIndex = iRow;\r\n\r\n            /* Special parameters can be given by the data source to be used on the row */\r\n            _fnRowAttributes( oSettings, row );\r\n\r\n            /* Process each column */\r\n            for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\r\n            {\r\n                oCol = oSettings.aoColumns[i];\r\n\r\n                nTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\r\n                nTd._DT_CellIndex = {\r\n                    row: iRow,\r\n                    column: i\r\n                };\r\n\r\n                cells.push( nTd );\r\n\r\n                // Need to create the HTML if new, or if a rendering function is defined\r\n                if ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\r\n                    (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\r\n                ) {\r\n                    nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\r\n                }\r\n\r\n                /* Add user defined class */\r\n                if ( oCol.sClass )\r\n                {\r\n                    nTd.className += ' '+oCol.sClass;\r\n                }\r\n\r\n                // Visibility - add or remove as required\r\n                if ( oCol.bVisible && ! nTrIn )\r\n                {\r\n                    nTr.appendChild( nTd );\r\n                }\r\n                else if ( ! oCol.bVisible && nTrIn )\r\n                {\r\n                    nTd.parentNode.removeChild( nTd );\r\n                }\r\n\r\n                if ( oCol.fnCreatedCell )\r\n                {\r\n                    oCol.fnCreatedCell.call( oSettings.oInstance,\r\n                        nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\r\n                    );\r\n                }\r\n            }\r\n\r\n            _fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );\r\n        }\r\n\r\n        // Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\r\n        // and deployed\r\n        row.nTr.setAttribute( 'role', 'row' );\r\n    }\r\n\r\n\r\n    /**\r\n     * Add attributes to a row based on the special `DT_*` parameters in a data\r\n     * source object.\r\n     *  @param {object} settings DataTables settings object\r\n     *  @param {object} DataTables row object for the row to be modified\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnRowAttributes( settings, row )\r\n    {\r\n        var tr = row.nTr;\r\n        var data = row._aData;\r\n\r\n        if ( tr ) {\r\n            var id = settings.rowIdFn( data );\r\n\r\n            if ( id ) {\r\n                tr.id = id;\r\n            }\r\n\r\n            if ( data.DT_RowClass ) {\r\n                // Remove any classes added by DT_RowClass before\r\n                var a = data.DT_RowClass.split(' ');\r\n                row.__rowc = row.__rowc ?\r\n                    _unique( row.__rowc.concat( a ) ) :\r\n                    a;\r\n\r\n                $(tr)\r\n                    .removeClass( row.__rowc.join(' ') )\r\n                    .addClass( data.DT_RowClass );\r\n            }\r\n\r\n            if ( data.DT_RowAttr ) {\r\n                $(tr).attr( data.DT_RowAttr );\r\n            }\r\n\r\n            if ( data.DT_RowData ) {\r\n                $(tr).data( data.DT_RowData );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Create the HTML header for the table\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnBuildHead( oSettings )\r\n    {\r\n        var i, ien, cell, row, column;\r\n        var thead = oSettings.nTHead;\r\n        var tfoot = oSettings.nTFoot;\r\n        var createHeader = $('th, td', thead).length === 0;\r\n        var classes = oSettings.oClasses;\r\n        var columns = oSettings.aoColumns;\r\n\r\n        if ( createHeader ) {\r\n            row = $('<tr/>').appendTo( thead );\r\n        }\r\n\r\n        for ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n            column = columns[i];\r\n            cell = $( column.nTh ).addClass( column.sClass );\r\n\r\n            if ( createHeader ) {\r\n                cell.appendTo( row );\r\n            }\r\n\r\n            // 1.11 move into sorting\r\n            if ( oSettings.oFeatures.bSort ) {\r\n                cell.addClass( column.sSortingClass );\r\n\r\n                if ( column.bSortable !== false ) {\r\n                    cell\r\n                        .attr( 'tabindex', oSettings.iTabIndex )\r\n                        .attr( 'aria-controls', oSettings.sTableId );\r\n\r\n                    _fnSortAttachListener( oSettings, column.nTh, i );\r\n                }\r\n            }\r\n\r\n            if ( column.sTitle != cell[0].innerHTML ) {\r\n                cell.html( column.sTitle );\r\n            }\r\n\r\n            _fnRenderer( oSettings, 'header' )(\r\n                oSettings, cell, column, classes\r\n            );\r\n        }\r\n\r\n        if ( createHeader ) {\r\n            _fnDetectHeader( oSettings.aoHeader, thead );\r\n        }\r\n\r\n        /* ARIA role for the rows */\r\n        $(thead).find('>tr').attr('role', 'row');\r\n\r\n        /* Deal with the footer - add classes if required */\r\n        $(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\r\n        $(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\r\n\r\n        // Cache the footer cells. Note that we only take the cells from the first\r\n        // row in the footer. If there is more than one row the user wants to\r\n        // interact with, they need to use the table().foot() method. Note also this\r\n        // allows cells to be used for multiple columns using colspan\r\n        if ( tfoot !== null ) {\r\n            var cells = oSettings.aoFooter[0];\r\n\r\n            for ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n                column = columns[i];\r\n                column.nTf = cells[i].cell;\r\n\r\n                if ( column.sClass ) {\r\n                    $(column.nTf).addClass( column.sClass );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Draw the header (or footer) element based on the column visibility states. The\r\n     * methodology here is to use the layout array from _fnDetectHeader, modified for\r\n     * the instantaneous column visibility, to construct the new layout. The grid is\r\n     * traversed over cell at a time in a rows x columns grid fashion, although each\r\n     * cell insert can cover multiple elements in the grid - which is tracks using the\r\n     * aApplied array. Cell inserts in the grid will only occur where there isn't\r\n     * already a cell in that position.\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param array {objects} aoSource Layout array from _fnDetectHeader\r\n     *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnDrawHead( oSettings, aoSource, bIncludeHidden )\r\n    {\r\n        var i, iLen, j, jLen, k, kLen, n, nLocalTr;\r\n        var aoLocal = [];\r\n        var aApplied = [];\r\n        var iColumns = oSettings.aoColumns.length;\r\n        var iRowspan, iColspan;\r\n\r\n        if ( ! aoSource )\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (  bIncludeHidden === undefined )\r\n        {\r\n            bIncludeHidden = false;\r\n        }\r\n\r\n        /* Make a copy of the master layout array, but without the visible columns in it */\r\n        for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\r\n        {\r\n            aoLocal[i] = aoSource[i].slice();\r\n            aoLocal[i].nTr = aoSource[i].nTr;\r\n\r\n            /* Remove any columns which are currently hidden */\r\n            for ( j=iColumns-1 ; j>=0 ; j-- )\r\n            {\r\n                if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\r\n                {\r\n                    aoLocal[i].splice( j, 1 );\r\n                }\r\n            }\r\n\r\n            /* Prep the applied array - it needs an element for each row */\r\n            aApplied.push( [] );\r\n        }\r\n\r\n        for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\r\n        {\r\n            nLocalTr = aoLocal[i].nTr;\r\n\r\n            /* All cells are going to be replaced, so empty out the row */\r\n            if ( nLocalTr )\r\n            {\r\n                while( (n = nLocalTr.firstChild) )\r\n                {\r\n                    nLocalTr.removeChild( n );\r\n                }\r\n            }\r\n\r\n            for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\r\n            {\r\n                iRowspan = 1;\r\n                iColspan = 1;\r\n\r\n                /* Check to see if there is already a cell (row/colspan) covering our target\r\n                 * insert point. If there is, then there is nothing to do.\r\n                 */\r\n                if ( aApplied[i][j] === undefined )\r\n                {\r\n                    nLocalTr.appendChild( aoLocal[i][j].cell );\r\n                    aApplied[i][j] = 1;\r\n\r\n                    /* Expand the cell to cover as many rows as needed */\r\n                    while ( aoLocal[i+iRowspan] !== undefined &&\r\n                    aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\r\n                    {\r\n                        aApplied[i+iRowspan][j] = 1;\r\n                        iRowspan++;\r\n                    }\r\n\r\n                    /* Expand the cell to cover as many columns as needed */\r\n                    while ( aoLocal[i][j+iColspan] !== undefined &&\r\n                    aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\r\n                    {\r\n                        /* Must update the applied array over the rows for the columns */\r\n                        for ( k=0 ; k<iRowspan ; k++ )\r\n                        {\r\n                            aApplied[i+k][j+iColspan] = 1;\r\n                        }\r\n                        iColspan++;\r\n                    }\r\n\r\n                    /* Do the actual expansion in the DOM */\r\n                    $(aoLocal[i][j].cell)\r\n                        .attr('rowspan', iRowspan)\r\n                        .attr('colspan', iColspan);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Insert the required TR nodes into the table for display\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnDraw( oSettings )\r\n    {\r\n        /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\r\n        var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\r\n        if ( $.inArray( false, aPreDraw ) !== -1 )\r\n        {\r\n            _fnProcessingDisplay( oSettings, false );\r\n            return;\r\n        }\r\n\r\n        var i, iLen, n;\r\n        var anRows = [];\r\n        var iRowCount = 0;\r\n        var asStripeClasses = oSettings.asStripeClasses;\r\n        var iStripes = asStripeClasses.length;\r\n        var iOpenRows = oSettings.aoOpenRows.length;\r\n        var oLang = oSettings.oLanguage;\r\n        var iInitDisplayStart = oSettings.iInitDisplayStart;\r\n        var bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n        var aiDisplay = oSettings.aiDisplay;\r\n\r\n        oSettings.bDrawing = true;\r\n\r\n        /* Check and see if we have an initial draw position from state saving */\r\n        if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\r\n        {\r\n            oSettings._iDisplayStart = bServerSide ?\r\n                iInitDisplayStart :\r\n                iInitDisplayStart >= oSettings.fnRecordsDisplay() ?\r\n                    0 :\r\n                    iInitDisplayStart;\r\n\r\n            oSettings.iInitDisplayStart = -1;\r\n        }\r\n\r\n        var iDisplayStart = oSettings._iDisplayStart;\r\n        var iDisplayEnd = oSettings.fnDisplayEnd();\r\n\r\n        /* Server-side processing draw intercept */\r\n        if ( oSettings.bDeferLoading )\r\n        {\r\n            oSettings.bDeferLoading = false;\r\n            oSettings.iDraw++;\r\n            _fnProcessingDisplay( oSettings, false );\r\n        }\r\n        else if ( !bServerSide )\r\n        {\r\n            oSettings.iDraw++;\r\n        }\r\n        else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\r\n        {\r\n            return;\r\n        }\r\n\r\n        if ( aiDisplay.length !== 0 )\r\n        {\r\n            var iStart = bServerSide ? 0 : iDisplayStart;\r\n            var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\r\n\r\n            for ( var j=iStart ; j<iEnd ; j++ )\r\n            {\r\n                var iDataIndex = aiDisplay[j];\r\n                var aoData = oSettings.aoData[ iDataIndex ];\r\n                if ( aoData.nTr === null )\r\n                {\r\n                    _fnCreateTr( oSettings, iDataIndex );\r\n                }\r\n\r\n                var nRow = aoData.nTr;\r\n\r\n                /* Remove the old striping classes and then add the new one */\r\n                if ( iStripes !== 0 )\r\n                {\r\n                    var sStripe = asStripeClasses[ iRowCount % iStripes ];\r\n                    if ( aoData._sRowStripe != sStripe )\r\n                    {\r\n                        $(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\r\n                        aoData._sRowStripe = sStripe;\r\n                    }\r\n                }\r\n\r\n                // Row callback functions - might want to manipulate the row\r\n                // iRowCount and j are not currently documented. Are they at all\r\n                // useful?\r\n                _fnCallbackFire( oSettings, 'aoRowCallback', null,\r\n                    [nRow, aoData._aData, iRowCount, j] );\r\n\r\n                anRows.push( nRow );\r\n                iRowCount++;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            /* Table is empty - create a row with an empty message in it */\r\n            var sZero = oLang.sZeroRecords;\r\n            if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\r\n            {\r\n                sZero = oLang.sLoadingRecords;\r\n            }\r\n            else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\r\n            {\r\n                sZero = oLang.sEmptyTable;\r\n            }\r\n\r\n            anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\r\n                .append( $('<td />', {\r\n                    'valign':  'top',\r\n                    'colSpan': _fnVisbleColumns( oSettings ),\r\n                    'class':   oSettings.oClasses.sRowEmpty\r\n                } ).html( sZero ) )[0];\r\n        }\r\n\r\n        /* Header and footer callbacks */\r\n        _fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\r\n            _fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n        _fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\r\n            _fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n        var body = $(oSettings.nTBody);\r\n\r\n        body.children().detach();\r\n        body.append( $(anRows) );\r\n\r\n        /* Call all required callback functions for the end of a draw */\r\n        _fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\r\n\r\n        /* Draw is complete, sorting and filtering must be as well */\r\n        oSettings.bSorted = false;\r\n        oSettings.bFiltered = false;\r\n        oSettings.bDrawing = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Redraw the table - taking account of the various features which are enabled\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {boolean} [holdPosition] Keep the current paging position. By default\r\n     *    the paging is reset to the first page\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnReDraw( settings, holdPosition )\r\n    {\r\n        var\r\n            features = settings.oFeatures,\r\n            sort     = features.bSort,\r\n            filter   = features.bFilter;\r\n\r\n        if ( sort ) {\r\n            _fnSort( settings );\r\n        }\r\n\r\n        if ( filter ) {\r\n            _fnFilterComplete( settings, settings.oPreviousSearch );\r\n        }\r\n        else {\r\n            // No filtering, so we want to just use the display master\r\n            settings.aiDisplay = settings.aiDisplayMaster.slice();\r\n        }\r\n\r\n        if ( holdPosition !== true ) {\r\n            settings._iDisplayStart = 0;\r\n        }\r\n\r\n        // Let any modules know about the draw hold position state (used by\r\n        // scrolling internally)\r\n        settings._drawHold = holdPosition;\r\n\r\n        _fnDraw( settings );\r\n\r\n        settings._drawHold = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Add the options to the page HTML for the table\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAddOptionsHtml ( oSettings )\r\n    {\r\n        var classes = oSettings.oClasses;\r\n        var table = $(oSettings.nTable);\r\n        var holding = $('<div/>').insertBefore( table ); // Holding element for speed\r\n        var features = oSettings.oFeatures;\r\n\r\n        // All DataTables are wrapped in a div\r\n        var insert = $('<div/>', {\r\n            id:      oSettings.sTableId+'_wrapper',\r\n            'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\r\n        } );\r\n\r\n        oSettings.nHolding = holding[0];\r\n        oSettings.nTableWrapper = insert[0];\r\n        oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\r\n\r\n        /* Loop over the user set positioning and place the elements as needed */\r\n        var aDom = oSettings.sDom.split('');\r\n        var featureNode, cOption, nNewNode, cNext, sAttr, j;\r\n        for ( var i=0 ; i<aDom.length ; i++ )\r\n        {\r\n            featureNode = null;\r\n            cOption = aDom[i];\r\n\r\n            if ( cOption == '<' )\r\n            {\r\n                /* New container div */\r\n                nNewNode = $('<div/>')[0];\r\n\r\n                /* Check to see if we should append an id and/or a class name to the container */\r\n                cNext = aDom[i+1];\r\n                if ( cNext == \"'\" || cNext == '\"' )\r\n                {\r\n                    sAttr = \"\";\r\n                    j = 2;\r\n                    while ( aDom[i+j] != cNext )\r\n                    {\r\n                        sAttr += aDom[i+j];\r\n                        j++;\r\n                    }\r\n\r\n                    /* Replace jQuery UI constants @todo depreciated */\r\n                    if ( sAttr == \"H\" )\r\n                    {\r\n                        sAttr = classes.sJUIHeader;\r\n                    }\r\n                    else if ( sAttr == \"F\" )\r\n                    {\r\n                        sAttr = classes.sJUIFooter;\r\n                    }\r\n\r\n                    /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\r\n                     * breaks the string into parts and applies them as needed\r\n                     */\r\n                    if ( sAttr.indexOf('.') != -1 )\r\n                    {\r\n                        var aSplit = sAttr.split('.');\r\n                        nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\r\n                        nNewNode.className = aSplit[1];\r\n                    }\r\n                    else if ( sAttr.charAt(0) == \"#\" )\r\n                    {\r\n                        nNewNode.id = sAttr.substr(1, sAttr.length-1);\r\n                    }\r\n                    else\r\n                    {\r\n                        nNewNode.className = sAttr;\r\n                    }\r\n\r\n                    i += j; /* Move along the position array */\r\n                }\r\n\r\n                insert.append( nNewNode );\r\n                insert = $(nNewNode);\r\n            }\r\n            else if ( cOption == '>' )\r\n            {\r\n                /* End container div */\r\n                insert = insert.parent();\r\n            }\r\n            // @todo Move options into their own plugins?\r\n            else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\r\n            {\r\n                /* Length */\r\n                featureNode = _fnFeatureHtmlLength( oSettings );\r\n            }\r\n            else if ( cOption == 'f' && features.bFilter )\r\n            {\r\n                /* Filter */\r\n                featureNode = _fnFeatureHtmlFilter( oSettings );\r\n            }\r\n            else if ( cOption == 'r' && features.bProcessing )\r\n            {\r\n                /* pRocessing */\r\n                featureNode = _fnFeatureHtmlProcessing( oSettings );\r\n            }\r\n            else if ( cOption == 't' )\r\n            {\r\n                /* Table */\r\n                featureNode = _fnFeatureHtmlTable( oSettings );\r\n            }\r\n            else if ( cOption ==  'i' && features.bInfo )\r\n            {\r\n                /* Info */\r\n                featureNode = _fnFeatureHtmlInfo( oSettings );\r\n            }\r\n            else if ( cOption == 'p' && features.bPaginate )\r\n            {\r\n                /* Pagination */\r\n                featureNode = _fnFeatureHtmlPaginate( oSettings );\r\n            }\r\n            else if ( DataTable.ext.feature.length !== 0 )\r\n            {\r\n                /* Plug-in features */\r\n                var aoFeatures = DataTable.ext.feature;\r\n                for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\r\n                {\r\n                    if ( cOption == aoFeatures[k].cFeature )\r\n                    {\r\n                        featureNode = aoFeatures[k].fnInit( oSettings );\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* Add to the 2D features array */\r\n            if ( featureNode )\r\n            {\r\n                var aanFeatures = oSettings.aanFeatures;\r\n\r\n                if ( ! aanFeatures[cOption] )\r\n                {\r\n                    aanFeatures[cOption] = [];\r\n                }\r\n\r\n                aanFeatures[cOption].push( featureNode );\r\n                insert.append( featureNode );\r\n            }\r\n        }\r\n\r\n        /* Built our DOM structure - replace the holding div with what we want */\r\n        holding.replaceWith( insert );\r\n        oSettings.nHolding = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Use the DOM source to create up an array of header cells. The idea here is to\r\n     * create a layout grid (array) of rows x columns, which contains a reference\r\n     * to the cell that that point in the grid (regardless of col/rowspan), such that\r\n     * any column / row could be removed and the new grid constructed\r\n     *  @param array {object} aLayout Array to store the calculated layout in\r\n     *  @param {node} nThead The header/footer element for the table\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnDetectHeader ( aLayout, nThead )\r\n    {\r\n        var nTrs = $(nThead).children('tr');\r\n        var nTr, nCell;\r\n        var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\r\n        var bUnique;\r\n        var fnShiftCol = function ( a, i, j ) {\r\n            var k = a[i];\r\n            while ( k[j] ) {\r\n                j++;\r\n            }\r\n            return j;\r\n        };\r\n\r\n        aLayout.splice( 0, aLayout.length );\r\n\r\n        /* We know how many rows there are in the layout - so prep it */\r\n        for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n        {\r\n            aLayout.push( [] );\r\n        }\r\n\r\n        /* Calculate a layout array */\r\n        for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n        {\r\n            nTr = nTrs[i];\r\n            iColumn = 0;\r\n\r\n            /* For every cell in the row... */\r\n            nCell = nTr.firstChild;\r\n            while ( nCell ) {\r\n                if ( nCell.nodeName.toUpperCase() == \"TD\" ||\r\n                    nCell.nodeName.toUpperCase() == \"TH\" )\r\n                {\r\n                    /* Get the col and rowspan attributes from the DOM and sanitise them */\r\n                    iColspan = nCell.getAttribute('colspan') * 1;\r\n                    iRowspan = nCell.getAttribute('rowspan') * 1;\r\n                    iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\r\n                    iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\r\n\r\n                    /* There might be colspan cells already in this row, so shift our target\r\n                     * accordingly\r\n                     */\r\n                    iColShifted = fnShiftCol( aLayout, i, iColumn );\r\n\r\n                    /* Cache calculation for unique columns */\r\n                    bUnique = iColspan === 1 ? true : false;\r\n\r\n                    /* If there is col / rowspan, copy the information into the layout grid */\r\n                    for ( l=0 ; l<iColspan ; l++ )\r\n                    {\r\n                        for ( k=0 ; k<iRowspan ; k++ )\r\n                        {\r\n                            aLayout[i+k][iColShifted+l] = {\r\n                                \"cell\": nCell,\r\n                                \"unique\": bUnique\r\n                            };\r\n                            aLayout[i+k].nTr = nTr;\r\n                        }\r\n                    }\r\n                }\r\n                nCell = nCell.nextSibling;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Get an array of unique th elements, one for each column\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {node} nHeader automatically detect the layout from this node - optional\r\n     *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\r\n     *  @returns array {node} aReturn list of unique th's\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnGetUniqueThs ( oSettings, nHeader, aLayout )\r\n    {\r\n        var aReturn = [];\r\n        if ( !aLayout )\r\n        {\r\n            aLayout = oSettings.aoHeader;\r\n            if ( nHeader )\r\n            {\r\n                aLayout = [];\r\n                _fnDetectHeader( aLayout, nHeader );\r\n            }\r\n        }\r\n\r\n        for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\r\n        {\r\n            for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\r\n            {\r\n                if ( aLayout[i][j].unique &&\r\n                    (!aReturn[j] || !oSettings.bSortCellsTop) )\r\n                {\r\n                    aReturn[j] = aLayout[i][j].cell;\r\n                }\r\n            }\r\n        }\r\n\r\n        return aReturn;\r\n    }\r\n\r\n    /**\r\n     * Create an Ajax call based on the table's settings, taking into account that\r\n     * parameters can have multiple forms, and backwards compatibility.\r\n     *\r\n     * @param {object} oSettings dataTables settings object\r\n     * @param {array} data Data to send to the server, required by\r\n     *     DataTables - may be augmented by developer callbacks\r\n     * @param {function} fn Callback function to run when data is obtained\r\n     */\r\n    function _fnBuildAjax( oSettings, data, fn )\r\n    {\r\n        // Compatibility with 1.9-, allow fnServerData and event to manipulate\r\n        _fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\r\n\r\n        // Convert to object based for 1.10+ if using the old array scheme which can\r\n        // come from server-side processing or serverParams\r\n        if ( data && $.isArray(data) ) {\r\n            var tmp = {};\r\n            var rbracket = /(.*?)\\[\\]$/;\r\n\r\n            $.each( data, function (key, val) {\r\n                var match = val.name.match(rbracket);\r\n\r\n                if ( match ) {\r\n                    // Support for arrays\r\n                    var name = match[0];\r\n\r\n                    if ( ! tmp[ name ] ) {\r\n                        tmp[ name ] = [];\r\n                    }\r\n                    tmp[ name ].push( val.value );\r\n                }\r\n                else {\r\n                    tmp[val.name] = val.value;\r\n                }\r\n            } );\r\n            data = tmp;\r\n        }\r\n\r\n        var ajaxData;\r\n        var ajax = oSettings.ajax;\r\n        var instance = oSettings.oInstance;\r\n        var callback = function ( json ) {\r\n            _fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\r\n            fn( json );\r\n        };\r\n\r\n        if ( $.isPlainObject( ajax ) && ajax.data )\r\n        {\r\n            ajaxData = ajax.data;\r\n\r\n            var newData = $.isFunction( ajaxData ) ?\r\n                ajaxData( data, oSettings ) :  // fn can manipulate data or return\r\n                ajaxData;                      // an object object or array to merge\r\n\r\n            // If the function returned something, use that alone\r\n            data = $.isFunction( ajaxData ) && newData ?\r\n                newData :\r\n                $.extend( true, data, newData );\r\n\r\n            // Remove the data property as we've resolved it already and don't want\r\n            // jQuery to do it again (it is restored at the end of the function)\r\n            delete ajax.data;\r\n        }\r\n\r\n        var baseAjax = {\r\n            \"data\": data,\r\n            \"success\": function (json) {\r\n                var error = json.error || json.sError;\r\n                if ( error ) {\r\n                    _fnLog( oSettings, 0, error );\r\n                }\r\n\r\n                oSettings.json = json;\r\n                callback( json );\r\n            },\r\n            \"dataType\": \"json\",\r\n            \"cache\": false,\r\n            \"type\": oSettings.sServerMethod,\r\n            \"error\": function (xhr, error, thrown) {\r\n                var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\r\n\r\n                if ( $.inArray( true, ret ) === -1 ) {\r\n                    if ( error == \"parsererror\" ) {\r\n                        _fnLog( oSettings, 0, 'Invalid JSON response', 1 );\r\n                    }\r\n                    else if ( xhr.readyState === 4 ) {\r\n                        _fnLog( oSettings, 0, 'Ajax error', 7 );\r\n                    }\r\n                }\r\n\r\n                _fnProcessingDisplay( oSettings, false );\r\n            }\r\n        };\r\n\r\n        // Store the data submitted for the API\r\n        oSettings.oAjaxData = data;\r\n\r\n        // Allow plug-ins and external processes to modify the data\r\n        _fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\r\n\r\n        if ( oSettings.fnServerData )\r\n        {\r\n            // DataTables 1.9- compatibility\r\n            oSettings.fnServerData.call( instance,\r\n                oSettings.sAjaxSource,\r\n                $.map( data, function (val, key) { // Need to convert back to 1.9 trad format\r\n                    return { name: key, value: val };\r\n                } ),\r\n                callback,\r\n                oSettings\r\n            );\r\n        }\r\n        else if ( oSettings.sAjaxSource || typeof ajax === 'string' )\r\n        {\r\n            // DataTables 1.9- compatibility\r\n            oSettings.jqXHR = $.ajax( $.extend( baseAjax, {\r\n                url: ajax || oSettings.sAjaxSource\r\n            } ) );\r\n        }\r\n        else if ( $.isFunction( ajax ) )\r\n        {\r\n            // Is a function - let the caller define what needs to be done\r\n            oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\r\n        }\r\n        else\r\n        {\r\n            // Object to extend the base settings\r\n            oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\r\n\r\n            // Restore for next time around\r\n            ajax.data = ajaxData;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Update the table using an Ajax call\r\n     *  @param {object} settings dataTables settings object\r\n     *  @returns {boolean} Block the table drawing or not\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAjaxUpdate( settings )\r\n    {\r\n        if ( settings.bAjaxDataGet ) {\r\n            settings.iDraw++;\r\n            _fnProcessingDisplay( settings, true );\r\n\r\n            _fnBuildAjax(\r\n                settings,\r\n                _fnAjaxParameters( settings ),\r\n                function(json) {\r\n                    _fnAjaxUpdateDraw( settings, json );\r\n                }\r\n            );\r\n\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Build up the parameters in an object needed for a server-side processing\r\n     * request. Note that this is basically done twice, is different ways - a modern\r\n     * method which is used by default in DataTables 1.10 which uses objects and\r\n     * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\r\n     * the sAjaxSource option is used in the initialisation, or the legacyAjax\r\n     * option is set.\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @returns {bool} block the table drawing or not\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAjaxParameters( settings )\r\n    {\r\n        var\r\n            columns = settings.aoColumns,\r\n            columnCount = columns.length,\r\n            features = settings.oFeatures,\r\n            preSearch = settings.oPreviousSearch,\r\n            preColSearch = settings.aoPreSearchCols,\r\n            i, data = [], dataProp, column, columnSearch,\r\n            sort = _fnSortFlatten( settings ),\r\n            displayStart = settings._iDisplayStart,\r\n            displayLength = features.bPaginate !== false ?\r\n                settings._iDisplayLength :\r\n                -1;\r\n\r\n        var param = function ( name, value ) {\r\n            data.push( { 'name': name, 'value': value } );\r\n        };\r\n\r\n        // DataTables 1.9- compatible method\r\n        param( 'sEcho',          settings.iDraw );\r\n        param( 'iColumns',       columnCount );\r\n        param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\r\n        param( 'iDisplayStart',  displayStart );\r\n        param( 'iDisplayLength', displayLength );\r\n\r\n        // DataTables 1.10+ method\r\n        var d = {\r\n            draw:    settings.iDraw,\r\n            columns: [],\r\n            order:   [],\r\n            start:   displayStart,\r\n            length:  displayLength,\r\n            search:  {\r\n                value: preSearch.sSearch,\r\n                regex: preSearch.bRegex\r\n            }\r\n        };\r\n\r\n        for ( i=0 ; i<columnCount ; i++ ) {\r\n            column = columns[i];\r\n            columnSearch = preColSearch[i];\r\n            dataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\r\n\r\n            d.columns.push( {\r\n                data:       dataProp,\r\n                name:       column.sName,\r\n                searchable: column.bSearchable,\r\n                orderable:  column.bSortable,\r\n                search:     {\r\n                    value: columnSearch.sSearch,\r\n                    regex: columnSearch.bRegex\r\n                }\r\n            } );\r\n\r\n            param( \"mDataProp_\"+i, dataProp );\r\n\r\n            if ( features.bFilter ) {\r\n                param( 'sSearch_'+i,     columnSearch.sSearch );\r\n                param( 'bRegex_'+i,      columnSearch.bRegex );\r\n                param( 'bSearchable_'+i, column.bSearchable );\r\n            }\r\n\r\n            if ( features.bSort ) {\r\n                param( 'bSortable_'+i, column.bSortable );\r\n            }\r\n        }\r\n\r\n        if ( features.bFilter ) {\r\n            param( 'sSearch', preSearch.sSearch );\r\n            param( 'bRegex', preSearch.bRegex );\r\n        }\r\n\r\n        if ( features.bSort ) {\r\n            $.each( sort, function ( i, val ) {\r\n                d.order.push( { column: val.col, dir: val.dir } );\r\n\r\n                param( 'iSortCol_'+i, val.col );\r\n                param( 'sSortDir_'+i, val.dir );\r\n            } );\r\n\r\n            param( 'iSortingCols', sort.length );\r\n        }\r\n\r\n        // If the legacy.ajax parameter is null, then we automatically decide which\r\n        // form to use, based on sAjaxSource\r\n        var legacy = DataTable.ext.legacy.ajax;\r\n        if ( legacy === null ) {\r\n            return settings.sAjaxSource ? data : d;\r\n        }\r\n\r\n        // Otherwise, if legacy has been specified then we use that to decide on the\r\n        // form\r\n        return legacy ? data : d;\r\n    }\r\n\r\n\r\n    /**\r\n     * Data the data from the server (nuking the old) and redraw the table\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {object} json json data return from the server.\r\n     *  @param {string} json.sEcho Tracking flag for DataTables to match requests\r\n     *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\r\n     *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\r\n     *  @param {array} json.aaData The data to display on this page\r\n     *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnAjaxUpdateDraw ( settings, json )\r\n    {\r\n        // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\r\n        // Support both\r\n        var compat = function ( old, modern ) {\r\n            return json[old] !== undefined ? json[old] : json[modern];\r\n        };\r\n\r\n        var data = _fnAjaxDataSrc( settings, json );\r\n        var draw            = compat( 'sEcho',                'draw' );\r\n        var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\r\n        var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\r\n\r\n        if ( draw ) {\r\n            // Protect against out of sequence returns\r\n            if ( draw*1 < settings.iDraw ) {\r\n                return;\r\n            }\r\n            settings.iDraw = draw * 1;\r\n        }\r\n\r\n        _fnClearTable( settings );\r\n        settings._iRecordsTotal   = parseInt(recordsTotal, 10);\r\n        settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\r\n\r\n        for ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n            _fnAddData( settings, data[i] );\r\n        }\r\n        settings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\r\n        settings.bAjaxDataGet = false;\r\n        _fnDraw( settings );\r\n\r\n        if ( ! settings._bInitComplete ) {\r\n            _fnInitComplete( settings, json );\r\n        }\r\n\r\n        settings.bAjaxDataGet = true;\r\n        _fnProcessingDisplay( settings, false );\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the data from the JSON data source to use for drawing a table. Using\r\n     * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\r\n     * source object, or from a processing function.\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param  {object} json Data source object / array from the server\r\n     *  @return {array} Array of data to use\r\n     */\r\n    function _fnAjaxDataSrc ( oSettings, json )\r\n    {\r\n        var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\r\n            oSettings.ajax.dataSrc :\r\n            oSettings.sAjaxDataProp; // Compatibility with 1.9-.\r\n\r\n        // Compatibility with 1.9-. In order to read from aaData, check if the\r\n        // default has been changed, if not, check for aaData\r\n        if ( dataSrc === 'data' ) {\r\n            return json.aaData || json[dataSrc];\r\n        }\r\n\r\n        return dataSrc !== \"\" ?\r\n            _fnGetObjectDataFn( dataSrc )( json ) :\r\n            json;\r\n    }\r\n\r\n    /**\r\n     * Generate the node required for filtering text\r\n     *  @returns {node} Filter control element\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFeatureHtmlFilter ( settings )\r\n    {\r\n        var classes = settings.oClasses;\r\n        var tableId = settings.sTableId;\r\n        var language = settings.oLanguage;\r\n        var previousSearch = settings.oPreviousSearch;\r\n        var features = settings.aanFeatures;\r\n        var input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\r\n\r\n        var str = language.sSearch;\r\n        str = str.match(/_INPUT_/) ?\r\n            str.replace('_INPUT_', input) :\r\n        str+input;\r\n\r\n        var filter = $('<div/>', {\r\n            'id': ! features.f ? tableId+'_filter' : null,\r\n            'class': classes.sFilter\r\n        } )\r\n            .append( $('<label/>' ).append( str ) );\r\n\r\n        var searchFn = function() {\r\n            /* Update all other filter input elements for the new display */\r\n            var n = features.f;\r\n            var val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\r\n\r\n            /* Now do the filter */\r\n            if ( val != previousSearch.sSearch ) {\r\n                _fnFilterComplete( settings, {\r\n                    \"sSearch\": val,\r\n                    \"bRegex\": previousSearch.bRegex,\r\n                    \"bSmart\": previousSearch.bSmart ,\r\n                    \"bCaseInsensitive\": previousSearch.bCaseInsensitive\r\n                } );\r\n\r\n                // Need to redraw, without resorting\r\n                settings._iDisplayStart = 0;\r\n                _fnDraw( settings );\r\n            }\r\n        };\r\n\r\n        var searchDelay = settings.searchDelay !== null ?\r\n            settings.searchDelay :\r\n            _fnDataSource( settings ) === 'ssp' ?\r\n                400 :\r\n                0;\r\n\r\n        var jqFilter = $('input', filter)\r\n            .val( previousSearch.sSearch )\r\n            .attr( 'placeholder', language.sSearchPlaceholder )\r\n            .bind(\r\n                'keyup.DT search.DT input.DT paste.DT cut.DT',\r\n                searchDelay ?\r\n                    _fnThrottle( searchFn, searchDelay ) :\r\n                    searchFn\r\n            )\r\n            .bind( 'keypress.DT', function(e) {\r\n                /* Prevent form submission */\r\n                if ( e.keyCode == 13 ) {\r\n                    return false;\r\n                }\r\n            } )\r\n            .attr('aria-controls', tableId);\r\n\r\n        // Update the input elements whenever the table is filtered\r\n        $(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\r\n            if ( settings === s ) {\r\n                // IE9 throws an 'unknown error' if document.activeElement is used\r\n                // inside an iframe or frame...\r\n                try {\r\n                    if ( jqFilter[0] !== document.activeElement ) {\r\n                        jqFilter.val( previousSearch.sSearch );\r\n                    }\r\n                }\r\n                catch ( e ) {}\r\n            }\r\n        } );\r\n\r\n        return filter[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * Filter the table using both the global filter and column based filtering\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {object} oSearch search information\r\n     *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFilterComplete ( oSettings, oInput, iForce )\r\n    {\r\n        var oPrevSearch = oSettings.oPreviousSearch;\r\n        var aoPrevSearch = oSettings.aoPreSearchCols;\r\n        var fnSaveFilter = function ( oFilter ) {\r\n            /* Save the filtering values */\r\n            oPrevSearch.sSearch = oFilter.sSearch;\r\n            oPrevSearch.bRegex = oFilter.bRegex;\r\n            oPrevSearch.bSmart = oFilter.bSmart;\r\n            oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\r\n        };\r\n        var fnRegex = function ( o ) {\r\n            // Backwards compatibility with the bEscapeRegex option\r\n            return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\r\n        };\r\n\r\n        // Resolve any column types that are unknown due to addition or invalidation\r\n        // @todo As per sort - can this be moved into an event handler?\r\n        _fnColumnTypes( oSettings );\r\n\r\n        /* In server-side processing all filtering is done by the server, so no point hanging around here */\r\n        if ( _fnDataSource( oSettings ) != 'ssp' )\r\n        {\r\n            /* Global filter */\r\n            _fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\r\n            fnSaveFilter( oInput );\r\n\r\n            /* Now do the individual column filter */\r\n            for ( var i=0 ; i<aoPrevSearch.length ; i++ )\r\n            {\r\n                _fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\r\n                    aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\r\n            }\r\n\r\n            /* Custom filtering */\r\n            _fnFilterCustom( oSettings );\r\n        }\r\n        else\r\n        {\r\n            fnSaveFilter( oInput );\r\n        }\r\n\r\n        /* Tell the draw function we have been filtering */\r\n        oSettings.bFiltered = true;\r\n        _fnCallbackFire( oSettings, null, 'search', [oSettings] );\r\n    }\r\n\r\n\r\n    /**\r\n     * Apply custom filtering functions\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFilterCustom( settings )\r\n    {\r\n        var filters = DataTable.ext.search;\r\n        var displayRows = settings.aiDisplay;\r\n        var row, rowIdx;\r\n\r\n        for ( var i=0, ien=filters.length ; i<ien ; i++ ) {\r\n            var rows = [];\r\n\r\n            // Loop over each row and see if it should be included\r\n            for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\r\n                rowIdx = displayRows[ j ];\r\n                row = settings.aoData[ rowIdx ];\r\n\r\n                if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\r\n                    rows.push( rowIdx );\r\n                }\r\n            }\r\n\r\n            // So the array reference doesn't break set the results into the\r\n            // existing array\r\n            displayRows.length = 0;\r\n            $.merge( displayRows, rows );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Filter the table on a per-column basis\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {string} sInput string to filter on\r\n     *  @param {int} iColumn column to filter\r\n     *  @param {bool} bRegex treat search string as a regular expression or not\r\n     *  @param {bool} bSmart use smart filtering or not\r\n     *  @param {bool} bCaseInsensitive Do case insenstive matching or not\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\r\n    {\r\n        if ( searchStr === '' ) {\r\n            return;\r\n        }\r\n\r\n        var data;\r\n        var display = settings.aiDisplay;\r\n        var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\r\n\r\n        for ( var i=display.length-1 ; i>=0 ; i-- ) {\r\n            data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\r\n\r\n            if ( ! rpSearch.test( data ) ) {\r\n                display.splice( i, 1 );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Filter the data table based on user input and draw the table\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {string} input string to filter on\r\n     *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\r\n     *  @param {bool} regex treat as a regular expression or not\r\n     *  @param {bool} smart perform smart filtering or not\r\n     *  @param {bool} caseInsensitive Do case insenstive matching or not\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFilter( settings, input, force, regex, smart, caseInsensitive )\r\n    {\r\n        var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\r\n        var prevSearch = settings.oPreviousSearch.sSearch;\r\n        var displayMaster = settings.aiDisplayMaster;\r\n        var display, invalidated, i;\r\n\r\n        // Need to take account of custom filtering functions - always filter\r\n        if ( DataTable.ext.search.length !== 0 ) {\r\n            force = true;\r\n        }\r\n\r\n        // Check if any of the rows were invalidated\r\n        invalidated = _fnFilterData( settings );\r\n\r\n        // If the input is blank - we just want the full data set\r\n        if ( input.length <= 0 ) {\r\n            settings.aiDisplay = displayMaster.slice();\r\n        }\r\n        else {\r\n            // New search - start from the master array\r\n            if ( invalidated ||\r\n                force ||\r\n                prevSearch.length > input.length ||\r\n                input.indexOf(prevSearch) !== 0 ||\r\n                settings.bSorted // On resort, the display master needs to be\r\n                                 // re-filtered since indexes will have changed\r\n            ) {\r\n                settings.aiDisplay = displayMaster.slice();\r\n            }\r\n\r\n            // Search the display array\r\n            display = settings.aiDisplay;\r\n\r\n            for ( i=display.length-1 ; i>=0 ; i-- ) {\r\n                if ( ! rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\r\n                    display.splice( i, 1 );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Build a regular expression object suitable for searching a table\r\n     *  @param {string} sSearch string to search for\r\n     *  @param {bool} bRegex treat as a regular expression or not\r\n     *  @param {bool} bSmart perform smart filtering or not\r\n     *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n     *  @returns {RegExp} constructed object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\r\n    {\r\n        search = regex ?\r\n            search :\r\n            _fnEscapeRegex( search );\r\n\r\n        if ( smart ) {\r\n            /* For smart filtering we want to allow the search to work regardless of\r\n             * word order. We also want double quoted text to be preserved, so word\r\n             * order is important - a la google. So this is what we want to\r\n             * generate:\r\n             *\r\n             * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\r\n             */\r\n            var a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\r\n                if ( word.charAt(0) === '\"' ) {\r\n                    var m = word.match( /^\"(.*)\"$/ );\r\n                    word = m ? m[1] : word;\r\n                }\r\n\r\n                return word.replace('\"', '');\r\n            } );\r\n\r\n            search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\r\n        }\r\n\r\n        return new RegExp( search, caseInsensitive ? 'i' : '' );\r\n    }\r\n\r\n\r\n    /**\r\n     * Escape a string such that it can be used in a regular expression\r\n     *  @param {string} sVal string to escape\r\n     *  @returns {string} escaped string\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    var _fnEscapeRegex = DataTable.util.escapeRegex;\r\n\r\n    var __filter_div = $('<div>')[0];\r\n    var __filter_div_textContent = __filter_div.textContent !== undefined;\r\n\r\n    // Update the filtering data for each row if needed (by invalidation or first run)\r\n    function _fnFilterData ( settings )\r\n    {\r\n        var columns = settings.aoColumns;\r\n        var column;\r\n        var i, j, ien, jen, filterData, cellData, row;\r\n        var fomatters = DataTable.ext.type.search;\r\n        var wasInvalidated = false;\r\n\r\n        for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n            row = settings.aoData[i];\r\n\r\n            if ( ! row._aFilterData ) {\r\n                filterData = [];\r\n\r\n                for ( j=0, jen=columns.length ; j<jen ; j++ ) {\r\n                    column = columns[j];\r\n\r\n                    if ( column.bSearchable ) {\r\n                        cellData = _fnGetCellData( settings, i, j, 'filter' );\r\n\r\n                        if ( fomatters[ column.sType ] ) {\r\n                            cellData = fomatters[ column.sType ]( cellData );\r\n                        }\r\n\r\n                        // Search in DataTables 1.10 is string based. In 1.11 this\r\n                        // should be altered to also allow strict type checking.\r\n                        if ( cellData === null ) {\r\n                            cellData = '';\r\n                        }\r\n\r\n                        if ( typeof cellData !== 'string' && cellData.toString ) {\r\n                            cellData = cellData.toString();\r\n                        }\r\n                    }\r\n                    else {\r\n                        cellData = '';\r\n                    }\r\n\r\n                    // If it looks like there is an HTML entity in the string,\r\n                    // attempt to decode it so sorting works as expected. Note that\r\n                    // we could use a single line of jQuery to do this, but the DOM\r\n                    // method used here is much faster http://jsperf.com/html-decode\r\n                    if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\r\n                        __filter_div.innerHTML = cellData;\r\n                        cellData = __filter_div_textContent ?\r\n                            __filter_div.textContent :\r\n                            __filter_div.innerText;\r\n                    }\r\n\r\n                    if ( cellData.replace ) {\r\n                        cellData = cellData.replace(/[\\r\\n]/g, '');\r\n                    }\r\n\r\n                    filterData.push( cellData );\r\n                }\r\n\r\n                row._aFilterData = filterData;\r\n                row._sFilterRow = filterData.join('  ');\r\n                wasInvalidated = true;\r\n            }\r\n        }\r\n\r\n        return wasInvalidated;\r\n    }\r\n\r\n\r\n    /**\r\n     * Convert from the internal Hungarian notation to camelCase for external\r\n     * interaction\r\n     *  @param {object} obj Object to convert\r\n     *  @returns {object} Inverted object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSearchToCamel ( obj )\r\n    {\r\n        return {\r\n            search:          obj.sSearch,\r\n            smart:           obj.bSmart,\r\n            regex:           obj.bRegex,\r\n            caseInsensitive: obj.bCaseInsensitive\r\n        };\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Convert from camelCase notation to the internal Hungarian. We could use the\r\n     * Hungarian convert function here, but this is cleaner\r\n     *  @param {object} obj Object to convert\r\n     *  @returns {object} Inverted object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSearchToHung ( obj )\r\n    {\r\n        return {\r\n            sSearch:          obj.search,\r\n            bSmart:           obj.smart,\r\n            bRegex:           obj.regex,\r\n            bCaseInsensitive: obj.caseInsensitive\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generate the node required for the info display\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @returns {node} Information element\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFeatureHtmlInfo ( settings )\r\n    {\r\n        var\r\n            tid = settings.sTableId,\r\n            nodes = settings.aanFeatures.i,\r\n            n = $('<div/>', {\r\n                'class': settings.oClasses.sInfo,\r\n                'id': ! nodes ? tid+'_info' : null\r\n            } );\r\n\r\n        if ( ! nodes ) {\r\n            // Update display on each draw\r\n            settings.aoDrawCallback.push( {\r\n                \"fn\": _fnUpdateInfo,\r\n                \"sName\": \"information\"\r\n            } );\r\n\r\n            n\r\n                .attr( 'role', 'status' )\r\n                .attr( 'aria-live', 'polite' );\r\n\r\n            // Table is described by our info div\r\n            $(settings.nTable).attr( 'aria-describedby', tid+'_info' );\r\n        }\r\n\r\n        return n[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * Update the information elements in the display\r\n     *  @param {object} settings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnUpdateInfo ( settings )\r\n    {\r\n        /* Show information about the table */\r\n        var nodes = settings.aanFeatures.i;\r\n        if ( nodes.length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        var\r\n            lang  = settings.oLanguage,\r\n            start = settings._iDisplayStart+1,\r\n            end   = settings.fnDisplayEnd(),\r\n            max   = settings.fnRecordsTotal(),\r\n            total = settings.fnRecordsDisplay(),\r\n            out   = total ?\r\n                lang.sInfo :\r\n                lang.sInfoEmpty;\r\n\r\n        if ( total !== max ) {\r\n            /* Record set after filtering */\r\n            out += ' ' + lang.sInfoFiltered;\r\n        }\r\n\r\n        // Convert the macros\r\n        out += lang.sInfoPostFix;\r\n        out = _fnInfoMacros( settings, out );\r\n\r\n        var callback = lang.fnInfoCallback;\r\n        if ( callback !== null ) {\r\n            out = callback.call( settings.oInstance,\r\n                settings, start, end, max, total, out\r\n            );\r\n        }\r\n\r\n        $(nodes).html( out );\r\n    }\r\n\r\n\r\n    function _fnInfoMacros ( settings, str )\r\n    {\r\n        // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\r\n        // internally\r\n        var\r\n            formatter  = settings.fnFormatNumber,\r\n            start      = settings._iDisplayStart+1,\r\n            len        = settings._iDisplayLength,\r\n            vis        = settings.fnRecordsDisplay(),\r\n            all        = len === -1;\r\n\r\n        return str.\r\n        replace(/_START_/g, formatter.call( settings, start ) ).\r\n        replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\r\n        replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\r\n        replace(/_TOTAL_/g, formatter.call( settings, vis ) ).\r\n        replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\r\n        replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Draw the table for the first time, adding all required features\r\n     *  @param {object} settings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnInitialise ( settings )\r\n    {\r\n        var i, iLen, iAjaxStart=settings.iInitDisplayStart;\r\n        var columns = settings.aoColumns, column;\r\n        var features = settings.oFeatures;\r\n        var deferLoading = settings.bDeferLoading; // value modified by the draw\r\n\r\n        /* Ensure that the table data is fully initialised */\r\n        if ( ! settings.bInitialised ) {\r\n            setTimeout( function(){ _fnInitialise( settings ); }, 200 );\r\n            return;\r\n        }\r\n\r\n        /* Show the display HTML options */\r\n        _fnAddOptionsHtml( settings );\r\n\r\n        /* Build and draw the header / footer for the table */\r\n        _fnBuildHead( settings );\r\n        _fnDrawHead( settings, settings.aoHeader );\r\n        _fnDrawHead( settings, settings.aoFooter );\r\n\r\n        /* Okay to show that something is going on now */\r\n        _fnProcessingDisplay( settings, true );\r\n\r\n        /* Calculate sizes for columns */\r\n        if ( features.bAutoWidth ) {\r\n            _fnCalculateColumnWidths( settings );\r\n        }\r\n\r\n        for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\r\n            column = columns[i];\r\n\r\n            if ( column.sWidth ) {\r\n                column.nTh.style.width = _fnStringToCss( column.sWidth );\r\n            }\r\n        }\r\n\r\n        _fnCallbackFire( settings, null, 'preInit', [settings] );\r\n\r\n        // If there is default sorting required - let's do it. The sort function\r\n        // will do the drawing for us. Otherwise we draw the table regardless of the\r\n        // Ajax source - this allows the table to look initialised for Ajax sourcing\r\n        // data (show 'loading' message possibly)\r\n        _fnReDraw( settings );\r\n\r\n        // Server-side processing init complete is done by _fnAjaxUpdateDraw\r\n        var dataSrc = _fnDataSource( settings );\r\n        if ( dataSrc != 'ssp' || deferLoading ) {\r\n            // if there is an ajax source load the data\r\n            if ( dataSrc == 'ajax' ) {\r\n                _fnBuildAjax( settings, [], function(json) {\r\n                    var aData = _fnAjaxDataSrc( settings, json );\r\n\r\n                    // Got the data - add it to the table\r\n                    for ( i=0 ; i<aData.length ; i++ ) {\r\n                        _fnAddData( settings, aData[i] );\r\n                    }\r\n\r\n                    // Reset the init display for cookie saving. We've already done\r\n                    // a filter, and therefore cleared it before. So we need to make\r\n                    // it appear 'fresh'\r\n                    settings.iInitDisplayStart = iAjaxStart;\r\n\r\n                    _fnReDraw( settings );\r\n\r\n                    _fnProcessingDisplay( settings, false );\r\n                    _fnInitComplete( settings, json );\r\n                }, settings );\r\n            }\r\n            else {\r\n                _fnProcessingDisplay( settings, false );\r\n                _fnInitComplete( settings );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Draw the table for the first time, adding all required features\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\r\n     *    with client-side processing (optional)\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnInitComplete ( settings, json )\r\n    {\r\n        settings._bInitComplete = true;\r\n\r\n        // When data was added after the initialisation (data or Ajax) we need to\r\n        // calculate the column sizing\r\n        if ( json || settings.oInit.aaData ) {\r\n            _fnAdjustColumnSizing( settings );\r\n        }\r\n\r\n        _fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\r\n        _fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\r\n    }\r\n\r\n\r\n    function _fnLengthChange ( settings, val )\r\n    {\r\n        var len = parseInt( val, 10 );\r\n        settings._iDisplayLength = len;\r\n\r\n        _fnLengthOverflow( settings );\r\n\r\n        // Fire length change event\r\n        _fnCallbackFire( settings, null, 'length', [settings, len] );\r\n    }\r\n\r\n\r\n    /**\r\n     * Generate the node required for user display length changing\r\n     *  @param {object} settings dataTables settings object\r\n     *  @returns {node} Display length feature node\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFeatureHtmlLength ( settings )\r\n    {\r\n        var\r\n            classes  = settings.oClasses,\r\n            tableId  = settings.sTableId,\r\n            menu     = settings.aLengthMenu,\r\n            d2       = $.isArray( menu[0] ),\r\n            lengths  = d2 ? menu[0] : menu,\r\n            language = d2 ? menu[1] : menu;\r\n\r\n        var select = $('<select/>', {\r\n            'name':          tableId+'_length',\r\n            'aria-controls': tableId,\r\n            'class':         classes.sLengthSelect\r\n        } );\r\n\r\n        for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\r\n            select[0][ i ] = new Option( language[i], lengths[i] );\r\n        }\r\n\r\n        var div = $('<div><label/></div>').addClass( classes.sLength );\r\n        if ( ! settings.aanFeatures.l ) {\r\n            div[0].id = tableId+'_length';\r\n        }\r\n\r\n        div.children().append(\r\n            settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\r\n        );\r\n\r\n        // Can't use `select` variable as user might provide their own and the\r\n        // reference is broken by the use of outerHTML\r\n        $('select', div)\r\n            .val( settings._iDisplayLength )\r\n            .bind( 'change.DT', function(e) {\r\n                _fnLengthChange( settings, $(this).val() );\r\n                _fnDraw( settings );\r\n            } );\r\n\r\n        // Update node value whenever anything changes the table's length\r\n        $(settings.nTable).bind( 'length.dt.DT', function (e, s, len) {\r\n            if ( settings === s ) {\r\n                $('select', div).val( len );\r\n            }\r\n        } );\r\n\r\n        return div[0];\r\n    }\r\n\r\n\r\n\r\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n     * Note that most of the paging logic is done in\r\n     * DataTable.ext.pager\r\n     */\r\n\r\n    /**\r\n     * Generate the node required for default pagination\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @returns {node} Pagination feature node\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFeatureHtmlPaginate ( settings )\r\n    {\r\n        var\r\n            type   = settings.sPaginationType,\r\n            plugin = DataTable.ext.pager[ type ],\r\n            modern = typeof plugin === 'function',\r\n            redraw = function( settings ) {\r\n                _fnDraw( settings );\r\n            },\r\n            node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\r\n            features = settings.aanFeatures;\r\n\r\n        if ( ! modern ) {\r\n            plugin.fnInit( settings, node, redraw );\r\n        }\r\n\r\n        /* Add a draw callback for the pagination on first instance, to update the paging display */\r\n        if ( ! features.p )\r\n        {\r\n            node.id = settings.sTableId+'_paginate';\r\n\r\n            settings.aoDrawCallback.push( {\r\n                \"fn\": function( settings ) {\r\n                    if ( modern ) {\r\n                        var\r\n                            start      = settings._iDisplayStart,\r\n                            len        = settings._iDisplayLength,\r\n                            visRecords = settings.fnRecordsDisplay(),\r\n                            all        = len === -1,\r\n                            page = all ? 0 : Math.ceil( start / len ),\r\n                            pages = all ? 1 : Math.ceil( visRecords / len ),\r\n                            buttons = plugin(page, pages),\r\n                            i, ien;\r\n\r\n                        for ( i=0, ien=features.p.length ; i<ien ; i++ ) {\r\n                            _fnRenderer( settings, 'pageButton' )(\r\n                                settings, features.p[i], i, buttons, page, pages\r\n                            );\r\n                        }\r\n                    }\r\n                    else {\r\n                        plugin.fnUpdate( settings, redraw );\r\n                    }\r\n                },\r\n                \"sName\": \"pagination\"\r\n            } );\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    /**\r\n     * Alter the display settings to change the page\r\n     *  @param {object} settings DataTables settings object\r\n     *  @param {string|int} action Paging action to take: \"first\", \"previous\",\r\n     *    \"next\" or \"last\" or page number to jump to (integer)\r\n     *  @param [bool] redraw Automatically draw the update or not\r\n     *  @returns {bool} true page has changed, false - no change\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnPageChange ( settings, action, redraw )\r\n    {\r\n        var\r\n            start     = settings._iDisplayStart,\r\n            len       = settings._iDisplayLength,\r\n            records   = settings.fnRecordsDisplay();\r\n\r\n        if ( records === 0 || len === -1 )\r\n        {\r\n            start = 0;\r\n        }\r\n        else if ( typeof action === \"number\" )\r\n        {\r\n            start = action * len;\r\n\r\n            if ( start > records )\r\n            {\r\n                start = 0;\r\n            }\r\n        }\r\n        else if ( action == \"first\" )\r\n        {\r\n            start = 0;\r\n        }\r\n        else if ( action == \"previous\" )\r\n        {\r\n            start = len >= 0 ?\r\n            start - len :\r\n                0;\r\n\r\n            if ( start < 0 )\r\n            {\r\n                start = 0;\r\n            }\r\n        }\r\n        else if ( action == \"next\" )\r\n        {\r\n            if ( start + len < records )\r\n            {\r\n                start += len;\r\n            }\r\n        }\r\n        else if ( action == \"last\" )\r\n        {\r\n            start = Math.floor( (records-1) / len) * len;\r\n        }\r\n        else\r\n        {\r\n            _fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\r\n        }\r\n\r\n        var changed = settings._iDisplayStart !== start;\r\n        settings._iDisplayStart = start;\r\n\r\n        if ( changed ) {\r\n            _fnCallbackFire( settings, null, 'page', [settings] );\r\n\r\n            if ( redraw ) {\r\n                _fnDraw( settings );\r\n            }\r\n        }\r\n\r\n        return changed;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Generate the node required for the processing node\r\n     *  @param {object} settings dataTables settings object\r\n     *  @returns {node} Processing element\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFeatureHtmlProcessing ( settings )\r\n    {\r\n        return $('<div/>', {\r\n            'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\r\n            'class': settings.oClasses.sProcessing\r\n        } )\r\n            .html( settings.oLanguage.sProcessing )\r\n            .insertBefore( settings.nTable )[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * Display or hide the processing indicator\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {bool} show Show the processing indicator (true) or not (false)\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnProcessingDisplay ( settings, show )\r\n    {\r\n        if ( settings.oFeatures.bProcessing ) {\r\n            $(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\r\n        }\r\n\r\n        _fnCallbackFire( settings, null, 'processing', [settings, show] );\r\n    }\r\n\r\n    /**\r\n     * Add any control elements for the table - specifically scrolling\r\n     *  @param {object} settings dataTables settings object\r\n     *  @returns {node} Node to add to the DOM\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnFeatureHtmlTable ( settings )\r\n    {\r\n        var table = $(settings.nTable);\r\n\r\n        // Add the ARIA grid role to the table\r\n        table.attr( 'role', 'grid' );\r\n\r\n        // Scrolling from here on in\r\n        var scroll = settings.oScroll;\r\n\r\n        if ( scroll.sX === '' && scroll.sY === '' ) {\r\n            return settings.nTable;\r\n        }\r\n\r\n        var scrollX = scroll.sX;\r\n        var scrollY = scroll.sY;\r\n        var classes = settings.oClasses;\r\n        var caption = table.children('caption');\r\n        var captionSide = caption.length ? caption[0]._captionSide : null;\r\n        var headerClone = $( table[0].cloneNode(false) );\r\n        var footerClone = $( table[0].cloneNode(false) );\r\n        var footer = table.children('tfoot');\r\n        var _div = '<div/>';\r\n        var size = function ( s ) {\r\n            return !s ? null : _fnStringToCss( s );\r\n        };\r\n\r\n        if ( ! footer.length ) {\r\n            footer = null;\r\n        }\r\n\r\n        /*\r\n         * The HTML structure that we want to generate in this function is:\r\n         *  div - scroller\r\n         *    div - scroll head\r\n         *      div - scroll head inner\r\n         *        table - scroll head table\r\n         *          thead - thead\r\n         *    div - scroll body\r\n         *      table - table (master table)\r\n         *        thead - thead clone for sizing\r\n         *        tbody - tbody\r\n         *    div - scroll foot\r\n         *      div - scroll foot inner\r\n         *        table - scroll foot table\r\n         *          tfoot - tfoot\r\n         */\r\n        var scroller = $( _div, { 'class': classes.sScrollWrapper } )\r\n            .append(\r\n                $(_div, { 'class': classes.sScrollHead } )\r\n                    .css( {\r\n                        overflow: 'hidden',\r\n                        position: 'relative',\r\n                        border: 0,\r\n                        width: scrollX ? size(scrollX) : '100%'\r\n                    } )\r\n                    .append(\r\n                        $(_div, { 'class': classes.sScrollHeadInner } )\r\n                            .css( {\r\n                                'box-sizing': 'content-box',\r\n                                width: scroll.sXInner || '100%'\r\n                            } )\r\n                            .append(\r\n                                headerClone\r\n                                    .removeAttr('id')\r\n                                    .css( 'margin-left', 0 )\r\n                                    .append( captionSide === 'top' ? caption : null )\r\n                                    .append(\r\n                                        table.children('thead')\r\n                                    )\r\n                            )\r\n                    )\r\n            )\r\n            .append(\r\n                $(_div, { 'class': classes.sScrollBody } )\r\n                    .css( {\r\n                        position: 'relative',\r\n                        overflow: 'auto',\r\n                        width: size( scrollX )\r\n                    } )\r\n                    .append( table )\r\n            );\r\n\r\n        if ( footer ) {\r\n            scroller.append(\r\n                $(_div, { 'class': classes.sScrollFoot } )\r\n                    .css( {\r\n                        overflow: 'hidden',\r\n                        border: 0,\r\n                        width: scrollX ? size(scrollX) : '100%'\r\n                    } )\r\n                    .append(\r\n                        $(_div, { 'class': classes.sScrollFootInner } )\r\n                            .append(\r\n                                footerClone\r\n                                    .removeAttr('id')\r\n                                    .css( 'margin-left', 0 )\r\n                                    .append( captionSide === 'bottom' ? caption : null )\r\n                                    .append(\r\n                                        table.children('tfoot')\r\n                                    )\r\n                            )\r\n                    )\r\n            );\r\n        }\r\n\r\n        var children = scroller.children();\r\n        var scrollHead = children[0];\r\n        var scrollBody = children[1];\r\n        var scrollFoot = footer ? children[2] : null;\r\n\r\n        // When the body is scrolled, then we also want to scroll the headers\r\n        if ( scrollX ) {\r\n            $(scrollBody).on( 'scroll.DT', function (e) {\r\n                var scrollLeft = this.scrollLeft;\r\n\r\n                scrollHead.scrollLeft = scrollLeft;\r\n\r\n                if ( footer ) {\r\n                    scrollFoot.scrollLeft = scrollLeft;\r\n                }\r\n            } );\r\n        }\r\n\r\n        $(scrollBody).css(\r\n            scrollY && scroll.bCollapse ? 'max-height' : 'height',\r\n            scrollY\r\n        );\r\n\r\n        settings.nScrollHead = scrollHead;\r\n        settings.nScrollBody = scrollBody;\r\n        settings.nScrollFoot = scrollFoot;\r\n\r\n        // On redraw - align columns\r\n        settings.aoDrawCallback.push( {\r\n            \"fn\": _fnScrollDraw,\r\n            \"sName\": \"scrolling\"\r\n        } );\r\n\r\n        return scroller[0];\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Update the header, footer and body tables for resizing - i.e. column\r\n     * alignment.\r\n     *\r\n     * Welcome to the most horrible function DataTables. The process that this\r\n     * function follows is basically:\r\n     *   1. Re-create the table inside the scrolling div\r\n     *   2. Take live measurements from the DOM\r\n     *   3. Apply the measurements to align the columns\r\n     *   4. Clean up\r\n     *\r\n     *  @param {object} settings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnScrollDraw ( settings )\r\n    {\r\n        // Given that this is such a monster function, a lot of variables are use\r\n        // to try and keep the minimised size as small as possible\r\n        var\r\n            scroll         = settings.oScroll,\r\n            scrollX        = scroll.sX,\r\n            scrollXInner   = scroll.sXInner,\r\n            scrollY        = scroll.sY,\r\n            barWidth       = scroll.iBarWidth,\r\n            divHeader      = $(settings.nScrollHead),\r\n            divHeaderStyle = divHeader[0].style,\r\n            divHeaderInner = divHeader.children('div'),\r\n            divHeaderInnerStyle = divHeaderInner[0].style,\r\n            divHeaderTable = divHeaderInner.children('table'),\r\n            divBodyEl      = settings.nScrollBody,\r\n            divBody        = $(divBodyEl),\r\n            divBodyStyle   = divBodyEl.style,\r\n            divFooter      = $(settings.nScrollFoot),\r\n            divFooterInner = divFooter.children('div'),\r\n            divFooterTable = divFooterInner.children('table'),\r\n            header         = $(settings.nTHead),\r\n            table          = $(settings.nTable),\r\n            tableEl        = table[0],\r\n            tableStyle     = tableEl.style,\r\n            footer         = settings.nTFoot ? $(settings.nTFoot) : null,\r\n            browser        = settings.oBrowser,\r\n            ie67           = browser.bScrollOversize,\r\n            dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\r\n            headerTrgEls, footerTrgEls,\r\n            headerSrcEls, footerSrcEls,\r\n            headerCopy, footerCopy,\r\n            headerWidths=[], footerWidths=[],\r\n            headerContent=[], footerContent=[],\r\n            idx, correction, sanityWidth,\r\n            zeroOut = function(nSizer) {\r\n                var style = nSizer.style;\r\n                style.paddingTop = \"0\";\r\n                style.paddingBottom = \"0\";\r\n                style.borderTopWidth = \"0\";\r\n                style.borderBottomWidth = \"0\";\r\n                style.height = 0;\r\n            };\r\n\r\n        // If the scrollbar visibility has changed from the last draw, we need to\r\n        // adjust the column sizes as the table width will have changed to account\r\n        // for the scrollbar\r\n        var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\r\n\r\n        if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\r\n            settings.scrollBarVis = scrollBarVis;\r\n            _fnAdjustColumnSizing( settings );\r\n            return; // adjust column sizing will call this function again\r\n        }\r\n        else {\r\n            settings.scrollBarVis = scrollBarVis;\r\n        }\r\n\r\n        /*\r\n         * 1. Re-create the table inside the scrolling div\r\n         */\r\n\r\n        // Remove the old minimised thead and tfoot elements in the inner table\r\n        table.children('thead, tfoot').remove();\r\n\r\n        if ( footer ) {\r\n            footerCopy = footer.clone().prependTo( table );\r\n            footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\r\n            footerSrcEls = footerCopy.find('tr');\r\n        }\r\n\r\n        // Clone the current header and footer elements and then place it into the inner table\r\n        headerCopy = header.clone().prependTo( table );\r\n        headerTrgEls = header.find('tr'); // original header is in its own table\r\n        headerSrcEls = headerCopy.find('tr');\r\n        headerCopy.find('th, td').removeAttr('tabindex');\r\n\r\n\r\n        /*\r\n         * 2. Take live measurements from the DOM - do not alter the DOM itself!\r\n         */\r\n\r\n        // Remove old sizing and apply the calculated column widths\r\n        // Get the unique column headers in the newly created (cloned) header. We want to apply the\r\n        // calculated sizes to this header\r\n        if ( ! scrollX )\r\n        {\r\n            divBodyStyle.width = '100%';\r\n            divHeader[0].style.width = '100%';\r\n        }\r\n\r\n        $.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\r\n            idx = _fnVisibleToColumnIndex( settings, i );\r\n            el.style.width = settings.aoColumns[idx].sWidth;\r\n        } );\r\n\r\n        if ( footer ) {\r\n            _fnApplyToChildren( function(n) {\r\n                n.style.width = \"\";\r\n            }, footerSrcEls );\r\n        }\r\n\r\n        // Size the table as a whole\r\n        sanityWidth = table.outerWidth();\r\n        if ( scrollX === \"\" ) {\r\n            // No x scrolling\r\n            tableStyle.width = \"100%\";\r\n\r\n            // IE7 will make the width of the table when 100% include the scrollbar\r\n            // - which is shouldn't. When there is a scrollbar we need to take this\r\n            // into account.\r\n            if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\r\n                divBody.css('overflow-y') == \"scroll\")\r\n            ) {\r\n                tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\r\n            }\r\n\r\n            // Recalculate the sanity width\r\n            sanityWidth = table.outerWidth();\r\n        }\r\n        else if ( scrollXInner !== \"\" ) {\r\n            // legacy x scroll inner has been given - use it\r\n            tableStyle.width = _fnStringToCss(scrollXInner);\r\n\r\n            // Recalculate the sanity width\r\n            sanityWidth = table.outerWidth();\r\n        }\r\n\r\n        // Hidden header should have zero height, so remove padding and borders. Then\r\n        // set the width based on the real headers\r\n\r\n        // Apply all styles in one pass\r\n        _fnApplyToChildren( zeroOut, headerSrcEls );\r\n\r\n        // Read all widths in next pass\r\n        _fnApplyToChildren( function(nSizer) {\r\n            headerContent.push( nSizer.innerHTML );\r\n            headerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\r\n        }, headerSrcEls );\r\n\r\n        // Apply all widths in final pass\r\n        _fnApplyToChildren( function(nToSize, i) {\r\n            // Only apply widths to the DataTables detected header cells - this\r\n            // prevents complex headers from having contradictory sizes applied\r\n            if ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\r\n                nToSize.style.width = headerWidths[i];\r\n            }\r\n        }, headerTrgEls );\r\n\r\n        $(headerSrcEls).height(0);\r\n\r\n        /* Same again with the footer if we have one */\r\n        if ( footer )\r\n        {\r\n            _fnApplyToChildren( zeroOut, footerSrcEls );\r\n\r\n            _fnApplyToChildren( function(nSizer) {\r\n                footerContent.push( nSizer.innerHTML );\r\n                footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\r\n            }, footerSrcEls );\r\n\r\n            _fnApplyToChildren( function(nToSize, i) {\r\n                nToSize.style.width = footerWidths[i];\r\n            }, footerTrgEls );\r\n\r\n            $(footerSrcEls).height(0);\r\n        }\r\n\r\n\r\n        /*\r\n         * 3. Apply the measurements\r\n         */\r\n\r\n        // \"Hide\" the header and footer that we used for the sizing. We need to keep\r\n        // the content of the cell so that the width applied to the header and body\r\n        // both match, but we want to hide it completely. We want to also fix their\r\n        // width to what they currently are\r\n        _fnApplyToChildren( function(nSizer, i) {\r\n            nSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+headerContent[i]+'</div>';\r\n            nSizer.style.width = headerWidths[i];\r\n        }, headerSrcEls );\r\n\r\n        if ( footer )\r\n        {\r\n            _fnApplyToChildren( function(nSizer, i) {\r\n                nSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+footerContent[i]+'</div>';\r\n                nSizer.style.width = footerWidths[i];\r\n            }, footerSrcEls );\r\n        }\r\n\r\n        // Sanity check that the table is of a sensible width. If not then we are going to get\r\n        // misalignment - try to prevent this by not allowing the table to shrink below its min width\r\n        if ( table.outerWidth() < sanityWidth )\r\n        {\r\n            // The min width depends upon if we have a vertical scrollbar visible or not */\r\n            correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\r\n            divBody.css('overflow-y') == \"scroll\")) ?\r\n            sanityWidth+barWidth :\r\n                sanityWidth;\r\n\r\n            // IE6/7 are a law unto themselves...\r\n            if ( ie67 && (divBodyEl.scrollHeight >\r\n                divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\r\n            ) {\r\n                tableStyle.width = _fnStringToCss( correction-barWidth );\r\n            }\r\n\r\n            // And give the user a warning that we've stopped the table getting too small\r\n            if ( scrollX === \"\" || scrollXInner !== \"\" ) {\r\n                _fnLog( settings, 1, 'Possible column misalignment', 6 );\r\n            }\r\n        }\r\n        else\r\n        {\r\n            correction = '100%';\r\n        }\r\n\r\n        // Apply to the container elements\r\n        divBodyStyle.width = _fnStringToCss( correction );\r\n        divHeaderStyle.width = _fnStringToCss( correction );\r\n\r\n        if ( footer ) {\r\n            settings.nScrollFoot.style.width = _fnStringToCss( correction );\r\n        }\r\n\r\n\r\n        /*\r\n         * 4. Clean up\r\n         */\r\n        if ( ! scrollY ) {\r\n            /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\r\n             * the scrollbar height from the visible display, rather than adding it on. We need to\r\n             * set the height in order to sort this. Don't want to do it in any other browsers.\r\n             */\r\n            if ( ie67 ) {\r\n                divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\r\n            }\r\n        }\r\n\r\n        /* Finally set the width's of the header and footer tables */\r\n        var iOuterWidth = table.outerWidth();\r\n        divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n        divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\r\n\r\n        // Figure out if there are scrollbar present - if so then we need a the header and footer to\r\n        // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\r\n        var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\r\n        var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\r\n        divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n\r\n        if ( footer ) {\r\n            divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n            divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\r\n            divFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n        }\r\n\r\n        // Correct DOM ordering for colgroup - comes before the thead\r\n        table.children('colgroup').insertBefore( table.children('thead') );\r\n\r\n        /* Adjust the position of the header in case we loose the y-scrollbar */\r\n        divBody.scroll();\r\n\r\n        // If sorting or filtering has occurred, jump the scrolling back to the top\r\n        // only if we aren't holding the position\r\n        if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\r\n            divBodyEl.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Apply a given function to the display child nodes of an element array (typically\r\n     * TD children of TR rows\r\n     *  @param {function} fn Method to apply to the objects\r\n     *  @param array {nodes} an1 List of elements to look through for display children\r\n     *  @param array {nodes} an2 Another list (identical structure to the first) - optional\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnApplyToChildren( fn, an1, an2 )\r\n    {\r\n        var index=0, i=0, iLen=an1.length;\r\n        var nNode1, nNode2;\r\n\r\n        while ( i < iLen ) {\r\n            nNode1 = an1[i].firstChild;\r\n            nNode2 = an2 ? an2[i].firstChild : null;\r\n\r\n            while ( nNode1 ) {\r\n                if ( nNode1.nodeType === 1 ) {\r\n                    if ( an2 ) {\r\n                        fn( nNode1, nNode2, index );\r\n                    }\r\n                    else {\r\n                        fn( nNode1, index );\r\n                    }\r\n\r\n                    index++;\r\n                }\r\n\r\n                nNode1 = nNode1.nextSibling;\r\n                nNode2 = an2 ? nNode2.nextSibling : null;\r\n            }\r\n\r\n            i++;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var __re_html_remove = /<.*?>/g;\r\n\r\n\r\n    /**\r\n     * Calculate the width of columns for the table\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnCalculateColumnWidths ( oSettings )\r\n    {\r\n        var\r\n            table = oSettings.nTable,\r\n            columns = oSettings.aoColumns,\r\n            scroll = oSettings.oScroll,\r\n            scrollY = scroll.sY,\r\n            scrollX = scroll.sX,\r\n            scrollXInner = scroll.sXInner,\r\n            columnCount = columns.length,\r\n            visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\r\n            headerCells = $('th', oSettings.nTHead),\r\n            tableWidthAttr = table.getAttribute('width'), // from DOM element\r\n            tableContainer = table.parentNode,\r\n            userInputs = false,\r\n            i, column, columnIdx, width, outerWidth,\r\n            browser = oSettings.oBrowser,\r\n            ie67 = browser.bScrollOversize;\r\n\r\n        var styleWidth = table.style.width;\r\n        if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\r\n            tableWidthAttr = styleWidth;\r\n        }\r\n\r\n        /* Convert any user input sizes into pixel sizes */\r\n        for ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n            column = columns[ visibleColumns[i] ];\r\n\r\n            if ( column.sWidth !== null ) {\r\n                column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\r\n\r\n                userInputs = true;\r\n            }\r\n        }\r\n\r\n        /* If the number of columns in the DOM equals the number that we have to\r\n         * process in DataTables, then we can use the offsets that are created by\r\n         * the web- browser. No custom sizes can be set in order for this to happen,\r\n         * nor scrolling used\r\n         */\r\n        if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\r\n            columnCount == _fnVisbleColumns( oSettings ) &&\r\n            columnCount == headerCells.length\r\n        ) {\r\n            for ( i=0 ; i<columnCount ; i++ ) {\r\n                var colIdx = _fnVisibleToColumnIndex( oSettings, i );\r\n\r\n                if ( colIdx !== null ) {\r\n                    columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // Otherwise construct a single row, worst case, table with the widest\r\n            // node in the data, assign any user defined widths, then insert it into\r\n            // the DOM and allow the browser to do all the hard work of calculating\r\n            // table widths\r\n            var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\r\n                .css( 'visibility', 'hidden' )\r\n                .removeAttr( 'id' );\r\n\r\n            // Clean up the table body\r\n            tmpTable.find('tbody tr').remove();\r\n            var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\r\n\r\n            // Clone the table header and footer - we can't use the header / footer\r\n            // from the cloned table, since if scrolling is active, the table's\r\n            // real header and footer are contained in different table tags\r\n            tmpTable.find('thead, tfoot').remove();\r\n            tmpTable\r\n                .append( $(oSettings.nTHead).clone() )\r\n                .append( $(oSettings.nTFoot).clone() );\r\n\r\n            // Remove any assigned widths from the footer (from scrolling)\r\n            tmpTable.find('tfoot th, tfoot td').css('width', '');\r\n\r\n            // Apply custom sizing to the cloned header\r\n            headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\r\n\r\n            for ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n                column = columns[ visibleColumns[i] ];\r\n\r\n                headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\r\n                    _fnStringToCss( column.sWidthOrig ) :\r\n                    '';\r\n\r\n                // For scrollX we need to force the column width otherwise the\r\n                // browser will collapse it. If this width is smaller than the\r\n                // width the column requires, then it will have no effect\r\n                if ( column.sWidthOrig && scrollX ) {\r\n                    $( headerCells[i] ).append( $('<div/>').css( {\r\n                        width: column.sWidthOrig,\r\n                        margin: 0,\r\n                        padding: 0,\r\n                        border: 0,\r\n                        height: 1\r\n                    } ) );\r\n                }\r\n            }\r\n\r\n            // Find the widest cell for each column and put it into the table\r\n            if ( oSettings.aoData.length ) {\r\n                for ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n                    columnIdx = visibleColumns[i];\r\n                    column = columns[ columnIdx ];\r\n\r\n                    $( _fnGetWidestNode( oSettings, columnIdx ) )\r\n                        .clone( false )\r\n                        .append( column.sContentPadding )\r\n                        .appendTo( tr );\r\n                }\r\n            }\r\n\r\n            // Tidy the temporary table - remove name attributes so there aren't\r\n            // duplicated in the dom (radio elements for example)\r\n            $('[name]', tmpTable).removeAttr('name');\r\n\r\n            // Table has been built, attach to the document so we can work with it.\r\n            // A holding element is used, positioned at the top of the container\r\n            // with minimal height, so it has no effect on if the container scrolls\r\n            // or not. Otherwise it might trigger scrolling when it actually isn't\r\n            // needed\r\n            var holder = $('<div/>').css( scrollX || scrollY ?\r\n                {\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    height: 1,\r\n                    right: 0,\r\n                    overflow: 'hidden'\r\n                } :\r\n                {}\r\n                )\r\n                .append( tmpTable )\r\n                .appendTo( tableContainer );\r\n\r\n            // When scrolling (X or Y) we want to set the width of the table as\r\n            // appropriate. However, when not scrolling leave the table width as it\r\n            // is. This results in slightly different, but I think correct behaviour\r\n            if ( scrollX && scrollXInner ) {\r\n                tmpTable.width( scrollXInner );\r\n            }\r\n            else if ( scrollX ) {\r\n                tmpTable.css( 'width', 'auto' );\r\n                tmpTable.removeAttr('width');\r\n\r\n                // If there is no width attribute or style, then allow the table to\r\n                // collapse\r\n                if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\r\n                    tmpTable.width( tableContainer.clientWidth );\r\n                }\r\n            }\r\n            else if ( scrollY ) {\r\n                tmpTable.width( tableContainer.clientWidth );\r\n            }\r\n            else if ( tableWidthAttr ) {\r\n                tmpTable.width( tableWidthAttr );\r\n            }\r\n\r\n            // Get the width of each column in the constructed table - we need to\r\n            // know the inner width (so it can be assigned to the other table's\r\n            // cells) and the outer width so we can calculate the full width of the\r\n            // table. This is safe since DataTables requires a unique cell for each\r\n            // column, but if ever a header can span multiple columns, this will\r\n            // need to be modified.\r\n            var total = 0;\r\n            for ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n                var cell = $(headerCells[i]);\r\n                var border = cell.outerWidth() - cell.width();\r\n\r\n                // Use getBounding... where possible (not IE8-) because it can give\r\n                // sub-pixel accuracy, which we then want to round up!\r\n                var bounding = browser.bBounding ?\r\n                    Math.ceil( headerCells[i].getBoundingClientRect().width ) :\r\n                    cell.outerWidth();\r\n\r\n                // Total is tracked to remove any sub-pixel errors as the outerWidth\r\n                // of the table might not equal the total given here (IE!).\r\n                total += bounding;\r\n\r\n                // Width for each column to use\r\n                columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\r\n            }\r\n\r\n            table.style.width = _fnStringToCss( total );\r\n\r\n            // Finished with the table - ditch it\r\n            holder.remove();\r\n        }\r\n\r\n        // If there is a width attr, we want to attach an event listener which\r\n        // allows the table sizing to automatically adjust when the window is\r\n        // resized. Use the width attr rather than CSS, since we can't know if the\r\n        // CSS is a relative value or absolute - DOM read is always px.\r\n        if ( tableWidthAttr ) {\r\n            table.style.width = _fnStringToCss( tableWidthAttr );\r\n        }\r\n\r\n        if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\r\n            var bindResize = function () {\r\n                $(window).bind('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\r\n                    _fnAdjustColumnSizing( oSettings );\r\n                } ) );\r\n            };\r\n\r\n            // IE6/7 will crash if we bind a resize event handler on page load.\r\n            // To be removed in 1.11 which drops IE6/7 support\r\n            if ( ie67 ) {\r\n                setTimeout( bindResize, 1000 );\r\n            }\r\n            else {\r\n                bindResize();\r\n            }\r\n\r\n            oSettings._reszEvt = true;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Throttle the calls to a function. Arguments and context are maintained for\r\n     * the throttled function\r\n     *  @param {function} fn Function to be called\r\n     *  @param {int} [freq=200] call frequency in mS\r\n     *  @returns {function} wrapped function\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    var _fnThrottle = DataTable.util.throttle;\r\n\r\n\r\n    /**\r\n     * Convert a CSS unit width to pixels (e.g. 2em)\r\n     *  @param {string} width width to be converted\r\n     *  @param {node} parent parent to get the with for (required for relative widths) - optional\r\n     *  @returns {int} width in pixels\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnConvertToWidth ( width, parent )\r\n    {\r\n        if ( ! width ) {\r\n            return 0;\r\n        }\r\n\r\n        var n = $('<div/>')\r\n            .css( 'width', _fnStringToCss( width ) )\r\n            .appendTo( parent || document.body );\r\n\r\n        var val = n[0].offsetWidth;\r\n        n.remove();\r\n\r\n        return val;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the widest node\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {int} colIdx column of interest\r\n     *  @returns {node} widest table node\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnGetWidestNode( settings, colIdx )\r\n    {\r\n        var idx = _fnGetMaxLenString( settings, colIdx );\r\n        if ( idx < 0 ) {\r\n            return null;\r\n        }\r\n\r\n        var data = settings.aoData[ idx ];\r\n        return ! data.nTr ? // Might not have been created when deferred rendering\r\n            $('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\r\n            data.anCells[ colIdx ];\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the maximum strlen for each data column\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {int} colIdx column of interest\r\n     *  @returns {string} max string length for each column\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnGetMaxLenString( settings, colIdx )\r\n    {\r\n        var s, max=-1, maxIdx = -1;\r\n\r\n        for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n            s = _fnGetCellData( settings, i, colIdx, 'display' )+'';\r\n            s = s.replace( __re_html_remove, '' );\r\n            s = s.replace( /&nbsp;/g, ' ' );\r\n\r\n            if ( s.length > max ) {\r\n                max = s.length;\r\n                maxIdx = i;\r\n            }\r\n        }\r\n\r\n        return maxIdx;\r\n    }\r\n\r\n\r\n    /**\r\n     * Append a CSS unit (only if required) to a string\r\n     *  @param {string} value to css-ify\r\n     *  @returns {string} value with css unit\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnStringToCss( s )\r\n    {\r\n        if ( s === null ) {\r\n            return '0px';\r\n        }\r\n\r\n        if ( typeof s == 'number' ) {\r\n            return s < 0 ?\r\n                '0px' :\r\n            s+'px';\r\n        }\r\n\r\n        // Check it has a unit character already\r\n        return s.match(/\\d$/) ?\r\n        s+'px' :\r\n            s;\r\n    }\r\n\r\n\r\n\r\n    function _fnSortFlatten ( settings )\r\n    {\r\n        var\r\n            i, iLen, k, kLen,\r\n            aSort = [],\r\n            aiOrig = [],\r\n            aoColumns = settings.aoColumns,\r\n            aDataSort, iCol, sType, srcCol,\r\n            fixed = settings.aaSortingFixed,\r\n            fixedObj = $.isPlainObject( fixed ),\r\n            nestedSort = [],\r\n            add = function ( a ) {\r\n                if ( a.length && ! $.isArray( a[0] ) ) {\r\n                    // 1D array\r\n                    nestedSort.push( a );\r\n                }\r\n                else {\r\n                    // 2D array\r\n                    $.merge( nestedSort, a );\r\n                }\r\n            };\r\n\r\n        // Build the sort array, with pre-fix and post-fix options if they have been\r\n        // specified\r\n        if ( $.isArray( fixed ) ) {\r\n            add( fixed );\r\n        }\r\n\r\n        if ( fixedObj && fixed.pre ) {\r\n            add( fixed.pre );\r\n        }\r\n\r\n        add( settings.aaSorting );\r\n\r\n        if (fixedObj && fixed.post ) {\r\n            add( fixed.post );\r\n        }\r\n\r\n        for ( i=0 ; i<nestedSort.length ; i++ )\r\n        {\r\n            srcCol = nestedSort[i][0];\r\n            aDataSort = aoColumns[ srcCol ].aDataSort;\r\n\r\n            for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\r\n            {\r\n                iCol = aDataSort[k];\r\n                sType = aoColumns[ iCol ].sType || 'string';\r\n\r\n                if ( nestedSort[i]._idx === undefined ) {\r\n                    nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\r\n                }\r\n\r\n                aSort.push( {\r\n                    src:       srcCol,\r\n                    col:       iCol,\r\n                    dir:       nestedSort[i][1],\r\n                    index:     nestedSort[i]._idx,\r\n                    type:      sType,\r\n                    formatter: DataTable.ext.type.order[ sType+\"-pre\" ]\r\n                } );\r\n            }\r\n        }\r\n\r\n        return aSort;\r\n    }\r\n\r\n    /**\r\n     * Change the order of the table\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     *  @todo This really needs split up!\r\n     */\r\n    function _fnSort ( oSettings )\r\n    {\r\n        var\r\n            i, ien, iLen, j, jLen, k, kLen,\r\n            sDataType, nTh,\r\n            aiOrig = [],\r\n            oExtSort = DataTable.ext.type.order,\r\n            aoData = oSettings.aoData,\r\n            aoColumns = oSettings.aoColumns,\r\n            aDataSort, data, iCol, sType, oSort,\r\n            formatters = 0,\r\n            sortCol,\r\n            displayMaster = oSettings.aiDisplayMaster,\r\n            aSort;\r\n\r\n        // Resolve any column types that are unknown due to addition or invalidation\r\n        // @todo Can this be moved into a 'data-ready' handler which is called when\r\n        //   data is going to be used in the table?\r\n        _fnColumnTypes( oSettings );\r\n\r\n        aSort = _fnSortFlatten( oSettings );\r\n\r\n        for ( i=0, ien=aSort.length ; i<ien ; i++ ) {\r\n            sortCol = aSort[i];\r\n\r\n            // Track if we can use the fast sort algorithm\r\n            if ( sortCol.formatter ) {\r\n                formatters++;\r\n            }\r\n\r\n            // Load the data needed for the sort, for each cell\r\n            _fnSortData( oSettings, sortCol.col );\r\n        }\r\n\r\n        /* No sorting required if server-side or no sorting array */\r\n        if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\r\n        {\r\n            // Create a value - key array of the current row positions such that we can use their\r\n            // current position during the sort, if values match, in order to perform stable sorting\r\n            for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\r\n                aiOrig[ displayMaster[i] ] = i;\r\n            }\r\n\r\n            /* Do the sort - here we want multi-column sorting based on a given data source (column)\r\n             * and sorting function (from oSort) in a certain direction. It's reasonably complex to\r\n             * follow on it's own, but this is what we want (example two column sorting):\r\n             *  fnLocalSorting = function(a,b){\r\n             *    var iTest;\r\n             *    iTest = oSort['string-asc']('data11', 'data12');\r\n             *      if (iTest !== 0)\r\n             *        return iTest;\r\n             *    iTest = oSort['numeric-desc']('data21', 'data22');\r\n             *    if (iTest !== 0)\r\n             *      return iTest;\r\n             *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\r\n             *  }\r\n             * Basically we have a test for each sorting column, if the data in that column is equal,\r\n             * test the next column. If all columns match, then we use a numeric sort on the row\r\n             * positions in the original data array to provide a stable sort.\r\n             *\r\n             * Note - I know it seems excessive to have two sorting methods, but the first is around\r\n             * 15% faster, so the second is only maintained for backwards compatibility with sorting\r\n             * methods which do not have a pre-sort formatting function.\r\n             */\r\n            if ( formatters === aSort.length ) {\r\n                // All sort types have formatting functions\r\n                displayMaster.sort( function ( a, b ) {\r\n                    var\r\n                        x, y, k, test, sort,\r\n                        len=aSort.length,\r\n                        dataA = aoData[a]._aSortData,\r\n                        dataB = aoData[b]._aSortData;\r\n\r\n                    for ( k=0 ; k<len ; k++ ) {\r\n                        sort = aSort[k];\r\n\r\n                        x = dataA[ sort.col ];\r\n                        y = dataB[ sort.col ];\r\n\r\n                        test = x<y ? -1 : x>y ? 1 : 0;\r\n                        if ( test !== 0 ) {\r\n                            return sort.dir === 'asc' ? test : -test;\r\n                        }\r\n                    }\r\n\r\n                    x = aiOrig[a];\r\n                    y = aiOrig[b];\r\n                    return x<y ? -1 : x>y ? 1 : 0;\r\n                } );\r\n            }\r\n            else {\r\n                // Depreciated - remove in 1.11 (providing a plug-in option)\r\n                // Not all sort types have formatting methods, so we have to call their sorting\r\n                // methods.\r\n                displayMaster.sort( function ( a, b ) {\r\n                    var\r\n                        x, y, k, l, test, sort, fn,\r\n                        len=aSort.length,\r\n                        dataA = aoData[a]._aSortData,\r\n                        dataB = aoData[b]._aSortData;\r\n\r\n                    for ( k=0 ; k<len ; k++ ) {\r\n                        sort = aSort[k];\r\n\r\n                        x = dataA[ sort.col ];\r\n                        y = dataB[ sort.col ];\r\n\r\n                        fn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\r\n                        test = fn( x, y );\r\n                        if ( test !== 0 ) {\r\n                            return test;\r\n                        }\r\n                    }\r\n\r\n                    x = aiOrig[a];\r\n                    y = aiOrig[b];\r\n                    return x<y ? -1 : x>y ? 1 : 0;\r\n                } );\r\n            }\r\n        }\r\n\r\n        /* Tell the draw function that we have sorted the data */\r\n        oSettings.bSorted = true;\r\n    }\r\n\r\n\r\n    function _fnSortAria ( settings )\r\n    {\r\n        var label;\r\n        var nextSort;\r\n        var columns = settings.aoColumns;\r\n        var aSort = _fnSortFlatten( settings );\r\n        var oAria = settings.oLanguage.oAria;\r\n\r\n        // ARIA attributes - need to loop all columns, to update all (removing old\r\n        // attributes as needed)\r\n        for ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n        {\r\n            var col = columns[i];\r\n            var asSorting = col.asSorting;\r\n            var sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\r\n            var th = col.nTh;\r\n\r\n            // IE7 is throwing an error when setting these properties with jQuery's\r\n            // attr() and removeAttr() methods...\r\n            th.removeAttribute('aria-sort');\r\n\r\n            /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\r\n            if ( col.bSortable ) {\r\n                if ( aSort.length > 0 && aSort[0].col == i ) {\r\n                    th.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\r\n                    nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\r\n                }\r\n                else {\r\n                    nextSort = asSorting[0];\r\n                }\r\n\r\n                label = sTitle + ( nextSort === \"asc\" ?\r\n                            oAria.sSortAscending :\r\n                            oAria.sSortDescending\r\n                    );\r\n            }\r\n            else {\r\n                label = sTitle;\r\n            }\r\n\r\n            th.setAttribute('aria-label', label);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to run on user sort request\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {node} attachTo node to attach the handler to\r\n     *  @param {int} colIdx column sorting index\r\n     *  @param {boolean} [append=false] Append the requested sort to the existing\r\n     *    sort if true (i.e. multi-column sort)\r\n     *  @param {function} [callback] callback function\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSortListener ( settings, colIdx, append, callback )\r\n    {\r\n        var col = settings.aoColumns[ colIdx ];\r\n        var sorting = settings.aaSorting;\r\n        var asSorting = col.asSorting;\r\n        var nextSortIdx;\r\n        var next = function ( a, overflow ) {\r\n            var idx = a._idx;\r\n            if ( idx === undefined ) {\r\n                idx = $.inArray( a[1], asSorting );\r\n            }\r\n\r\n            return idx+1 < asSorting.length ?\r\n            idx+1 :\r\n                overflow ?\r\n                    null :\r\n                    0;\r\n        };\r\n\r\n        // Convert to 2D array if needed\r\n        if ( typeof sorting[0] === 'number' ) {\r\n            sorting = settings.aaSorting = [ sorting ];\r\n        }\r\n\r\n        // If appending the sort then we are multi-column sorting\r\n        if ( append && settings.oFeatures.bSortMulti ) {\r\n            // Are we already doing some kind of sort on this column?\r\n            var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\r\n\r\n            if ( sortIdx !== -1 ) {\r\n                // Yes, modify the sort\r\n                nextSortIdx = next( sorting[sortIdx], true );\r\n\r\n                if ( nextSortIdx === null && sorting.length === 1 ) {\r\n                    nextSortIdx = 0; // can't remove sorting completely\r\n                }\r\n\r\n                if ( nextSortIdx === null ) {\r\n                    sorting.splice( sortIdx, 1 );\r\n                }\r\n                else {\r\n                    sorting[sortIdx][1] = asSorting[ nextSortIdx ];\r\n                    sorting[sortIdx]._idx = nextSortIdx;\r\n                }\r\n            }\r\n            else {\r\n                // No sort on this column yet\r\n                sorting.push( [ colIdx, asSorting[0], 0 ] );\r\n                sorting[sorting.length-1]._idx = 0;\r\n            }\r\n        }\r\n        else if ( sorting.length && sorting[0][0] == colIdx ) {\r\n            // Single column - already sorting on this column, modify the sort\r\n            nextSortIdx = next( sorting[0] );\r\n\r\n            sorting.length = 1;\r\n            sorting[0][1] = asSorting[ nextSortIdx ];\r\n            sorting[0]._idx = nextSortIdx;\r\n        }\r\n        else {\r\n            // Single column - sort only on this column\r\n            sorting.length = 0;\r\n            sorting.push( [ colIdx, asSorting[0] ] );\r\n            sorting[0]._idx = 0;\r\n        }\r\n\r\n        // Run the sort by calling a full redraw\r\n        _fnReDraw( settings );\r\n\r\n        // callback used for async user interaction\r\n        if ( typeof callback == 'function' ) {\r\n            callback( settings );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Attach a sort handler (click) to a node\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {node} attachTo node to attach the handler to\r\n     *  @param {int} colIdx column sorting index\r\n     *  @param {function} [callback] callback function\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSortAttachListener ( settings, attachTo, colIdx, callback )\r\n    {\r\n        var col = settings.aoColumns[ colIdx ];\r\n\r\n        _fnBindAction( attachTo, {}, function (e) {\r\n            /* If the column is not sortable - don't to anything */\r\n            if ( col.bSortable === false ) {\r\n                return;\r\n            }\r\n\r\n            // If processing is enabled use a timeout to allow the processing\r\n            // display to be shown - otherwise to it synchronously\r\n            if ( settings.oFeatures.bProcessing ) {\r\n                _fnProcessingDisplay( settings, true );\r\n\r\n                setTimeout( function() {\r\n                    _fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n\r\n                    // In server-side processing, the draw callback will remove the\r\n                    // processing display\r\n                    if ( _fnDataSource( settings ) !== 'ssp' ) {\r\n                        _fnProcessingDisplay( settings, false );\r\n                    }\r\n                }, 0 );\r\n            }\r\n            else {\r\n                _fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n            }\r\n        } );\r\n    }\r\n\r\n\r\n    /**\r\n     * Set the sorting classes on table's body, Note: it is safe to call this function\r\n     * when bSort and bSortClasses are false\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSortingClasses( settings )\r\n    {\r\n        var oldSort = settings.aLastSort;\r\n        var sortClass = settings.oClasses.sSortColumn;\r\n        var sort = _fnSortFlatten( settings );\r\n        var features = settings.oFeatures;\r\n        var i, ien, colIdx;\r\n\r\n        if ( features.bSort && features.bSortClasses ) {\r\n            // Remove old sorting classes\r\n            for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\r\n                colIdx = oldSort[i].src;\r\n\r\n                // Remove column sorting\r\n                $( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n                    .removeClass( sortClass + (i<2 ? i+1 : 3) );\r\n            }\r\n\r\n            // Add new column sorting\r\n            for ( i=0, ien=sort.length ; i<ien ; i++ ) {\r\n                colIdx = sort[i].src;\r\n\r\n                $( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n                    .addClass( sortClass + (i<2 ? i+1 : 3) );\r\n            }\r\n        }\r\n\r\n        settings.aLastSort = sort;\r\n    }\r\n\r\n\r\n    // Get the data to sort a column, be it from cache, fresh (populating the\r\n    // cache), or from a sort formatter\r\n    function _fnSortData( settings, idx )\r\n    {\r\n        // Custom sorting function - provided by the sort data type\r\n        var column = settings.aoColumns[ idx ];\r\n        var customSort = DataTable.ext.order[ column.sSortDataType ];\r\n        var customData;\r\n\r\n        if ( customSort ) {\r\n            customData = customSort.call( settings.oInstance, settings, idx,\r\n                _fnColumnIndexToVisible( settings, idx )\r\n            );\r\n        }\r\n\r\n        // Use / populate cache\r\n        var row, cellData;\r\n        var formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\r\n\r\n        for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n            row = settings.aoData[i];\r\n\r\n            if ( ! row._aSortData ) {\r\n                row._aSortData = [];\r\n            }\r\n\r\n            if ( ! row._aSortData[idx] || customSort ) {\r\n                cellData = customSort ?\r\n                    customData[i] : // If there was a custom sort function, use data from there\r\n                    _fnGetCellData( settings, i, idx, 'sort' );\r\n\r\n                row._aSortData[ idx ] = formatter ?\r\n                    formatter( cellData ) :\r\n                    cellData;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Save the state of a table\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSaveState ( settings )\r\n    {\r\n        if ( !settings.oFeatures.bStateSave || settings.bDestroying )\r\n        {\r\n            return;\r\n        }\r\n\r\n        /* Store the interesting variables */\r\n        var state = {\r\n            time:    +new Date(),\r\n            start:   settings._iDisplayStart,\r\n            length:  settings._iDisplayLength,\r\n            order:   $.extend( true, [], settings.aaSorting ),\r\n            search:  _fnSearchToCamel( settings.oPreviousSearch ),\r\n            columns: $.map( settings.aoColumns, function ( col, i ) {\r\n                return {\r\n                    visible: col.bVisible,\r\n                    search: _fnSearchToCamel( settings.aoPreSearchCols[i] )\r\n                };\r\n            } )\r\n        };\r\n\r\n        _fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\r\n\r\n        settings.oSavedState = state;\r\n        settings.fnStateSaveCallback.call( settings.oInstance, settings, state );\r\n    }\r\n\r\n\r\n    /**\r\n     * Attempt to load a saved table state\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {object} oInit DataTables init object so we can override settings\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnLoadState ( settings, oInit )\r\n    {\r\n        var i, ien;\r\n        var columns = settings.aoColumns;\r\n\r\n        if ( ! settings.oFeatures.bStateSave ) {\r\n            return;\r\n        }\r\n\r\n        var state = settings.fnStateLoadCallback.call( settings.oInstance, settings );\r\n        if ( ! state || ! state.time ) {\r\n            return;\r\n        }\r\n\r\n        /* Allow custom and plug-in manipulation functions to alter the saved data set and\r\n         * cancelling of loading by returning false\r\n         */\r\n        var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state] );\r\n        if ( $.inArray( false, abStateLoad ) !== -1 ) {\r\n            return;\r\n        }\r\n\r\n        /* Reject old data */\r\n        var duration = settings.iStateDuration;\r\n        if ( duration > 0 && state.time < +new Date() - (duration*1000) ) {\r\n            return;\r\n        }\r\n\r\n        // Number of columns have changed - all bets are off, no restore of settings\r\n        if ( columns.length !== state.columns.length ) {\r\n            return;\r\n        }\r\n\r\n        // Store the saved state so it might be accessed at any time\r\n        settings.oLoadedState = $.extend( true, {}, state );\r\n\r\n        // Restore key features - todo - for 1.11 this needs to be done by\r\n        // subscribed events\r\n        if ( state.start !== undefined ) {\r\n            settings._iDisplayStart    = state.start;\r\n            settings.iInitDisplayStart = state.start;\r\n        }\r\n        if ( state.length !== undefined ) {\r\n            settings._iDisplayLength   = state.length;\r\n        }\r\n\r\n        // Order\r\n        if ( state.order !== undefined ) {\r\n            settings.aaSorting = [];\r\n            $.each( state.order, function ( i, col ) {\r\n                settings.aaSorting.push( col[0] >= columns.length ?\r\n                    [ 0, col[1] ] :\r\n                    col\r\n                );\r\n            } );\r\n        }\r\n\r\n        // Search\r\n        if ( state.search !== undefined ) {\r\n            $.extend( settings.oPreviousSearch, _fnSearchToHung( state.search ) );\r\n        }\r\n\r\n        // Columns\r\n        for ( i=0, ien=state.columns.length ; i<ien ; i++ ) {\r\n            var col = state.columns[i];\r\n\r\n            // Visibility\r\n            if ( col.visible !== undefined ) {\r\n                columns[i].bVisible = col.visible;\r\n            }\r\n\r\n            // Search\r\n            if ( col.search !== undefined ) {\r\n                $.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\r\n            }\r\n        }\r\n\r\n        _fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, state] );\r\n    }\r\n\r\n\r\n    /**\r\n     * Return the settings object for a particular table\r\n     *  @param {node} table table we are using as a dataTable\r\n     *  @returns {object} Settings object - or null if not found\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnSettingsFromNode ( table )\r\n    {\r\n        var settings = DataTable.settings;\r\n        var idx = $.inArray( table, _pluck( settings, 'nTable' ) );\r\n\r\n        return idx !== -1 ?\r\n            settings[ idx ] :\r\n            null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Log an error message\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {int} level log error messages, or display them to the user\r\n     *  @param {string} msg error message\r\n     *  @param {int} tn Technical note id to get more information about the error.\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnLog( settings, level, msg, tn )\r\n    {\r\n        msg = 'DataTables warning: '+\r\n            (settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\r\n\r\n        if ( tn ) {\r\n            msg += '. For more information about this error, please see '+\r\n                'http://datatables.net/tn/'+tn;\r\n        }\r\n\r\n        if ( ! level  ) {\r\n            // Backwards compatibility pre 1.10\r\n            var ext = DataTable.ext;\r\n            var type = ext.sErrMode || ext.errMode;\r\n\r\n            if ( settings ) {\r\n                _fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\r\n            }\r\n\r\n            if ( type == 'alert' ) {\r\n                alert( msg );\r\n            }\r\n            else if ( type == 'throw' ) {\r\n                throw new Error(msg);\r\n            }\r\n            else if ( typeof type == 'function' ) {\r\n                type( settings, tn, msg );\r\n            }\r\n        }\r\n        else if ( window.console && console.log ) {\r\n            console.log( msg );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * See if a property is defined on one object, if so assign it to the other object\r\n     *  @param {object} ret target object\r\n     *  @param {object} src source object\r\n     *  @param {string} name property\r\n     *  @param {string} [mappedName] name to map too - optional, name used if not given\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnMap( ret, src, name, mappedName )\r\n    {\r\n        if ( $.isArray( name ) ) {\r\n            $.each( name, function (i, val) {\r\n                if ( $.isArray( val ) ) {\r\n                    _fnMap( ret, src, val[0], val[1] );\r\n                }\r\n                else {\r\n                    _fnMap( ret, src, val );\r\n                }\r\n            } );\r\n\r\n            return;\r\n        }\r\n\r\n        if ( mappedName === undefined ) {\r\n            mappedName = name;\r\n        }\r\n\r\n        if ( src[name] !== undefined ) {\r\n            ret[mappedName] = src[name];\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Extend objects - very similar to jQuery.extend, but deep copy objects, and\r\n     * shallow copy arrays. The reason we need to do this, is that we don't want to\r\n     * deep copy array init values (such as aaSorting) since the dev wouldn't be\r\n     * able to override them, but we do want to deep copy arrays.\r\n     *  @param {object} out Object to extend\r\n     *  @param {object} extender Object from which the properties will be applied to\r\n     *      out\r\n     *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\r\n     *      independent copy with the exception of the `data` or `aaData` parameters\r\n     *      if they are present. This is so you can pass in a collection to\r\n     *      DataTables and have that used as your data source without breaking the\r\n     *      references\r\n     *  @returns {object} out Reference, just for convenience - out === the return.\r\n     *  @memberof DataTable#oApi\r\n     *  @todo This doesn't take account of arrays inside the deep copied objects.\r\n     */\r\n    function _fnExtend( out, extender, breakRefs )\r\n    {\r\n        var val;\r\n\r\n        for ( var prop in extender ) {\r\n            if ( extender.hasOwnProperty(prop) ) {\r\n                val = extender[prop];\r\n\r\n                if ( $.isPlainObject( val ) ) {\r\n                    if ( ! $.isPlainObject( out[prop] ) ) {\r\n                        out[prop] = {};\r\n                    }\r\n                    $.extend( true, out[prop], val );\r\n                }\r\n                else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\r\n                    out[prop] = val.slice();\r\n                }\r\n                else {\r\n                    out[prop] = val;\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    /**\r\n     * Bind an event handers to allow a click or return key to activate the callback.\r\n     * This is good for accessibility since a return on the keyboard will have the\r\n     * same effect as a click, if the element has focus.\r\n     *  @param {element} n Element to bind the action to\r\n     *  @param {object} oData Data object to pass to the triggered function\r\n     *  @param {function} fn Callback function for when the event is triggered\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnBindAction( n, oData, fn )\r\n    {\r\n        $(n)\r\n            .bind( 'click.DT', oData, function (e) {\r\n                n.blur(); // Remove focus outline for mouse users\r\n                fn(e);\r\n            } )\r\n            .bind( 'keypress.DT', oData, function (e){\r\n                if ( e.which === 13 ) {\r\n                    e.preventDefault();\r\n                    fn(e);\r\n                }\r\n            } )\r\n            .bind( 'selectstart.DT', function () {\r\n                /* Take the brutal approach to cancelling text selection */\r\n                return false;\r\n            } );\r\n    }\r\n\r\n\r\n    /**\r\n     * Register a callback function. Easily allows a callback function to be added to\r\n     * an array store of callback functions that can then all be called together.\r\n     *  @param {object} oSettings dataTables settings object\r\n     *  @param {string} sStore Name of the array storage for the callbacks in oSettings\r\n     *  @param {function} fn Function to be called back\r\n     *  @param {string} sName Identifying name for the callback (i.e. a label)\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnCallbackReg( oSettings, sStore, fn, sName )\r\n    {\r\n        if ( fn )\r\n        {\r\n            oSettings[sStore].push( {\r\n                \"fn\": fn,\r\n                \"sName\": sName\r\n            } );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Fire callback functions and trigger events. Note that the loop over the\r\n     * callback array store is done backwards! Further note that you do not want to\r\n     * fire off triggers in time sensitive applications (for example cell creation)\r\n     * as its slow.\r\n     *  @param {object} settings dataTables settings object\r\n     *  @param {string} callbackArr Name of the array storage for the callbacks in\r\n     *      oSettings\r\n     *  @param {string} eventName Name of the jQuery custom event to trigger. If\r\n     *      null no trigger is fired\r\n     *  @param {array} args Array of arguments to pass to the callback function /\r\n     *      trigger\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnCallbackFire( settings, callbackArr, eventName, args )\r\n    {\r\n        var ret = [];\r\n\r\n        if ( callbackArr ) {\r\n            ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\r\n                return val.fn.apply( settings.oInstance, args );\r\n            } );\r\n        }\r\n\r\n        if ( eventName !== null ) {\r\n            var e = $.Event( eventName+'.dt' );\r\n\r\n            $(settings.nTable).trigger( e, args );\r\n\r\n            ret.push( e.result );\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n\r\n    function _fnLengthOverflow ( settings )\r\n    {\r\n        var\r\n            start = settings._iDisplayStart,\r\n            end = settings.fnDisplayEnd(),\r\n            len = settings._iDisplayLength;\r\n\r\n        /* If we have space to show extra rows (backing up from the end point - then do so */\r\n        if ( start >= end )\r\n        {\r\n            start = end - len;\r\n        }\r\n\r\n        // Keep the start record on the current page\r\n        start -= (start % len);\r\n\r\n        if ( len === -1 || start < 0 )\r\n        {\r\n            start = 0;\r\n        }\r\n\r\n        settings._iDisplayStart = start;\r\n    }\r\n\r\n\r\n    function _fnRenderer( settings, type )\r\n    {\r\n        var renderer = settings.renderer;\r\n        var host = DataTable.ext.renderer[type];\r\n\r\n        if ( $.isPlainObject( renderer ) && renderer[type] ) {\r\n            // Specific renderer for this type. If available use it, otherwise use\r\n            // the default.\r\n            return host[renderer[type]] || host._;\r\n        }\r\n        else if ( typeof renderer === 'string' ) {\r\n            // Common renderer - if there is one available for this type use it,\r\n            // otherwise use the default\r\n            return host[renderer] || host._;\r\n        }\r\n\r\n        // Use the default\r\n        return host._;\r\n    }\r\n\r\n\r\n    /**\r\n     * Detect the data source being used for the table. Used to simplify the code\r\n     * a little (ajax) and to make it compress a little smaller.\r\n     *\r\n     *  @param {object} settings dataTables settings object\r\n     *  @returns {string} Data source\r\n     *  @memberof DataTable#oApi\r\n     */\r\n    function _fnDataSource ( settings )\r\n    {\r\n        if ( settings.oFeatures.bServerSide ) {\r\n            return 'ssp';\r\n        }\r\n        else if ( settings.ajax || settings.sAjaxSource ) {\r\n            return 'ajax';\r\n        }\r\n        return 'dom';\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Computed structure of the DataTables API, defined by the options passed to\r\n     * `DataTable.Api.register()` when building the API.\r\n     *\r\n     * The structure is built in order to speed creation and extension of the Api\r\n     * objects since the extensions are effectively pre-parsed.\r\n     *\r\n     * The array is an array of objects with the following structure, where this\r\n     * base array represents the Api prototype base:\r\n     *\r\n     *     [\r\n     *       {\r\n\t *         name:      'data'                -- string   - Property name\r\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\r\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n\t *       },\r\n     *       {\r\n\t *         name:     'row'\r\n\t *         val:       {},\r\n\t *         methodExt: [ ... ],\r\n\t *         propExt:   [\r\n\t *           {\r\n\t *             name:      'data'\r\n\t *             val:       function () {},\r\n\t *             methodExt: [ ... ],\r\n\t *             propExt:   [ ... ]\r\n\t *           },\r\n\t *           ...\r\n\t *         ]\r\n\t *       }\r\n     *     ]\r\n     *\r\n     * @type {Array}\r\n     * @ignore\r\n     */\r\n    var __apiStruct = [];\r\n\r\n\r\n    /**\r\n     * `Array.prototype` reference.\r\n     *\r\n     * @type object\r\n     * @ignore\r\n     */\r\n    var __arrayProto = Array.prototype;\r\n\r\n\r\n    /**\r\n     * Abstraction for `context` parameter of the `Api` constructor to allow it to\r\n     * take several different forms for ease of use.\r\n     *\r\n     * Each of the input parameter types will be converted to a DataTables settings\r\n     * object where possible.\r\n     *\r\n     * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\r\n     *   of:\r\n     *\r\n     *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n     *     with be found and used.\r\n     *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n     *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n     *   * `object` - DataTables settings object\r\n     *   * `DataTables.Api` - API instance\r\n     * @return {array|null} Matching DataTables settings objects. `null` or\r\n     *   `undefined` is returned if no matching DataTable is found.\r\n     * @ignore\r\n     */\r\n    var _toSettings = function ( mixed )\r\n    {\r\n        var idx, jq;\r\n        var settings = DataTable.settings;\r\n        var tables = $.map( settings, function (el, i) {\r\n            return el.nTable;\r\n        } );\r\n\r\n        if ( ! mixed ) {\r\n            return [];\r\n        }\r\n        else if ( mixed.nTable && mixed.oApi ) {\r\n            // DataTables settings object\r\n            return [ mixed ];\r\n        }\r\n        else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\r\n            // Table node\r\n            idx = $.inArray( mixed, tables );\r\n            return idx !== -1 ? [ settings[idx] ] : null;\r\n        }\r\n        else if ( mixed && typeof mixed.settings === 'function' ) {\r\n            return mixed.settings().toArray();\r\n        }\r\n        else if ( typeof mixed === 'string' ) {\r\n            // jQuery selector\r\n            jq = $(mixed);\r\n        }\r\n        else if ( mixed instanceof $ ) {\r\n            // jQuery object (also DataTables instance)\r\n            jq = mixed;\r\n        }\r\n\r\n        if ( jq ) {\r\n            return jq.map( function(i) {\r\n                idx = $.inArray( this, tables );\r\n                return idx !== -1 ? settings[idx] : null;\r\n            } ).toArray();\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * DataTables API class - used to control and interface with  one or more\r\n     * DataTables enhanced tables.\r\n     *\r\n     * The API class is heavily based on jQuery, presenting a chainable interface\r\n     * that you can use to interact with tables. Each instance of the API class has\r\n     * a \"context\" - i.e. the tables that it will operate on. This could be a single\r\n     * table, all tables on a page or a sub-set thereof.\r\n     *\r\n     * Additionally the API is designed to allow you to easily work with the data in\r\n     * the tables, retrieving and manipulating it as required. This is done by\r\n     * presenting the API class as an array like interface. The contents of the\r\n     * array depend upon the actions requested by each method (for example\r\n     * `rows().nodes()` will return an array of nodes, while `rows().data()` will\r\n     * return an array of objects or arrays depending upon your table's\r\n     * configuration). The API object has a number of array like methods (`push`,\r\n     * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\r\n     * `unique` etc) to assist your working with the data held in a table.\r\n     *\r\n     * Most methods (those which return an Api instance) are chainable, which means\r\n     * the return from a method call also has all of the methods available that the\r\n     * top level object had. For example, these two calls are equivalent:\r\n     *\r\n     *     // Not chained\r\n     *     api.row.add( {...} );\r\n     *     api.draw();\r\n     *\r\n     *     // Chained\r\n     *     api.row.add( {...} ).draw();\r\n     *\r\n     * @class DataTable.Api\r\n     * @param {array|object|string|jQuery} context DataTable identifier. This is\r\n     *   used to define which DataTables enhanced tables this API will operate on.\r\n     *   Can be one of:\r\n     *\r\n     *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n     *     with be found and used.\r\n     *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n     *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n     *   * `object` - DataTables settings object\r\n     * @param {array} [data] Data to initialise the Api instance with.\r\n     *\r\n     * @example\r\n     *   // Direct initialisation during DataTables construction\r\n     *   var api = $('#example').DataTable();\r\n     *\r\n     * @example\r\n     *   // Initialisation using a DataTables jQuery object\r\n     *   var api = $('#example').dataTable().api();\r\n     *\r\n     * @example\r\n     *   // Initialisation as a constructor\r\n     *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\r\n     */\r\n    _Api = function ( context, data )\r\n    {\r\n        if ( ! (this instanceof _Api) ) {\r\n            return new _Api( context, data );\r\n        }\r\n\r\n        var settings = [];\r\n        var ctxSettings = function ( o ) {\r\n            var a = _toSettings( o );\r\n            if ( a ) {\r\n                settings = settings.concat( a );\r\n            }\r\n        };\r\n\r\n        if ( $.isArray( context ) ) {\r\n            for ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n                ctxSettings( context[i] );\r\n            }\r\n        }\r\n        else {\r\n            ctxSettings( context );\r\n        }\r\n\r\n        // Remove duplicates\r\n        this.context = _unique( settings );\r\n\r\n        // Initial data\r\n        if ( data ) {\r\n            $.merge( this, data );\r\n        }\r\n\r\n        // selector\r\n        this.selector = {\r\n            rows: null,\r\n            cols: null,\r\n            opts: null\r\n        };\r\n\r\n        _Api.extend( this, this, __apiStruct );\r\n    };\r\n\r\n    DataTable.Api = _Api;\r\n\r\n    // Don't destroy the existing prototype, just extend it. Required for jQuery 2's\r\n    // isPlainObject.\r\n    $.extend( _Api.prototype, {\r\n        any: function ()\r\n        {\r\n            return this.count() !== 0;\r\n        },\r\n\r\n\r\n        concat:  __arrayProto.concat,\r\n\r\n\r\n        context: [], // array of table settings objects\r\n\r\n\r\n        count: function ()\r\n        {\r\n            return this.flatten().length;\r\n        },\r\n\r\n\r\n        each: function ( fn )\r\n        {\r\n            for ( var i=0, ien=this.length ; i<ien; i++ ) {\r\n                fn.call( this, this[i], i, this );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n\r\n        eq: function ( idx )\r\n        {\r\n            var ctx = this.context;\r\n\r\n            return ctx.length > idx ?\r\n                new _Api( ctx[idx], this[idx] ) :\r\n                null;\r\n        },\r\n\r\n\r\n        filter: function ( fn )\r\n        {\r\n            var a = [];\r\n\r\n            if ( __arrayProto.filter ) {\r\n                a = __arrayProto.filter.call( this, fn, this );\r\n            }\r\n            else {\r\n                // Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n                for ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n                    if ( fn.call( this, this[i], i, this ) ) {\r\n                        a.push( this[i] );\r\n                    }\r\n                }\r\n            }\r\n\r\n            return new _Api( this.context, a );\r\n        },\r\n\r\n\r\n        flatten: function ()\r\n        {\r\n            var a = [];\r\n            return new _Api( this.context, a.concat.apply( a, this.toArray() ) );\r\n        },\r\n\r\n\r\n        join:    __arrayProto.join,\r\n\r\n\r\n        indexOf: __arrayProto.indexOf || function (obj, start)\r\n        {\r\n            for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\r\n                if ( this[i] === obj ) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        },\r\n\r\n        iterator: function ( flatten, type, fn, alwaysNew ) {\r\n            var\r\n                a = [], ret,\r\n                i, ien, j, jen,\r\n                context = this.context,\r\n                rows, items, item,\r\n                selector = this.selector;\r\n\r\n            // Argument shifting\r\n            if ( typeof flatten === 'string' ) {\r\n                alwaysNew = fn;\r\n                fn = type;\r\n                type = flatten;\r\n                flatten = false;\r\n            }\r\n\r\n            for ( i=0, ien=context.length ; i<ien ; i++ ) {\r\n                var apiInst = new _Api( context[i] );\r\n\r\n                if ( type === 'table' ) {\r\n                    ret = fn.call( apiInst, context[i], i );\r\n\r\n                    if ( ret !== undefined ) {\r\n                        a.push( ret );\r\n                    }\r\n                }\r\n                else if ( type === 'columns' || type === 'rows' ) {\r\n                    // this has same length as context - one entry for each table\r\n                    ret = fn.call( apiInst, context[i], this[i], i );\r\n\r\n                    if ( ret !== undefined ) {\r\n                        a.push( ret );\r\n                    }\r\n                }\r\n                else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\r\n                    // columns and rows share the same structure.\r\n                    // 'this' is an array of column indexes for each context\r\n                    items = this[i];\r\n\r\n                    if ( type === 'column-rows' ) {\r\n                        rows = _selector_row_indexes( context[i], selector.opts );\r\n                    }\r\n\r\n                    for ( j=0, jen=items.length ; j<jen ; j++ ) {\r\n                        item = items[j];\r\n\r\n                        if ( type === 'cell' ) {\r\n                            ret = fn.call( apiInst, context[i], item.row, item.column, i, j );\r\n                        }\r\n                        else {\r\n                            ret = fn.call( apiInst, context[i], item, i, j, rows );\r\n                        }\r\n\r\n                        if ( ret !== undefined ) {\r\n                            a.push( ret );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ( a.length || alwaysNew ) {\r\n                var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\r\n                var apiSelector = api.selector;\r\n                apiSelector.rows = selector.rows;\r\n                apiSelector.cols = selector.cols;\r\n                apiSelector.opts = selector.opts;\r\n                return api;\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\r\n        {\r\n            // Bit cheeky...\r\n            return this.indexOf.apply( this.toArray.reverse(), arguments );\r\n        },\r\n\r\n\r\n        length:  0,\r\n\r\n\r\n        map: function ( fn )\r\n        {\r\n            var a = [];\r\n\r\n            if ( __arrayProto.map ) {\r\n                a = __arrayProto.map.call( this, fn, this );\r\n            }\r\n            else {\r\n                // Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n                for ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n                    a.push( fn.call( this, this[i], i ) );\r\n                }\r\n            }\r\n\r\n            return new _Api( this.context, a );\r\n        },\r\n\r\n\r\n        pluck: function ( prop )\r\n        {\r\n            return this.map( function ( el ) {\r\n                return el[ prop ];\r\n            } );\r\n        },\r\n\r\n        pop:     __arrayProto.pop,\r\n\r\n\r\n        push:    __arrayProto.push,\r\n\r\n\r\n        // Does not return an API instance\r\n        reduce: __arrayProto.reduce || function ( fn, init )\r\n        {\r\n            return _fnReduce( this, fn, init, 0, this.length, 1 );\r\n        },\r\n\r\n\r\n        reduceRight: __arrayProto.reduceRight || function ( fn, init )\r\n        {\r\n            return _fnReduce( this, fn, init, this.length-1, -1, -1 );\r\n        },\r\n\r\n\r\n        reverse: __arrayProto.reverse,\r\n\r\n\r\n        // Object with rows, columns and opts\r\n        selector: null,\r\n\r\n\r\n        shift:   __arrayProto.shift,\r\n\r\n\r\n        sort:    __arrayProto.sort, // ? name - order?\r\n\r\n\r\n        splice:  __arrayProto.splice,\r\n\r\n\r\n        toArray: function ()\r\n        {\r\n            return __arrayProto.slice.call( this );\r\n        },\r\n\r\n\r\n        to$: function ()\r\n        {\r\n            return $( this );\r\n        },\r\n\r\n\r\n        toJQuery: function ()\r\n        {\r\n            return $( this );\r\n        },\r\n\r\n\r\n        unique: function ()\r\n        {\r\n            return new _Api( this.context, _unique(this) );\r\n        },\r\n\r\n\r\n        unshift: __arrayProto.unshift\r\n    } );\r\n\r\n\r\n    _Api.extend = function ( scope, obj, ext )\r\n    {\r\n        // Only extend API instances and static properties of the API\r\n        if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\r\n            return;\r\n        }\r\n\r\n        var\r\n            i, ien,\r\n            j, jen,\r\n            struct, inner,\r\n            methodScoping = function ( scope, fn, struc ) {\r\n                return function () {\r\n                    var ret = fn.apply( scope, arguments );\r\n\r\n                    // Method extension\r\n                    _Api.extend( ret, ret, struc.methodExt );\r\n                    return ret;\r\n                };\r\n            };\r\n\r\n        for ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n            struct = ext[i];\r\n\r\n            // Value\r\n            obj[ struct.name ] = typeof struct.val === 'function' ?\r\n                methodScoping( scope, struct.val, struct ) :\r\n                $.isPlainObject( struct.val ) ?\r\n                {} :\r\n                    struct.val;\r\n\r\n            obj[ struct.name ].__dt_wrapper = true;\r\n\r\n            // Property extension\r\n            _Api.extend( scope, obj[ struct.name ], struct.propExt );\r\n        }\r\n    };\r\n\r\n\r\n    // @todo - Is there need for an augment function?\r\n    // _Api.augment = function ( inst, name )\r\n    // {\r\n    // \t// Find src object in the structure from the name\r\n    // \tvar parts = name.split('.');\r\n\r\n    // \t_Api.extend( inst, obj );\r\n    // };\r\n\r\n\r\n    //     [\r\n    //       {\r\n    //         name:      'data'                -- string   - Property name\r\n    //         val:       function () {},       -- function - Api method (or undefined if just an object\r\n    //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n    //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n    //       },\r\n    //       {\r\n    //         name:     'row'\r\n    //         val:       {},\r\n    //         methodExt: [ ... ],\r\n    //         propExt:   [\r\n    //           {\r\n    //             name:      'data'\r\n    //             val:       function () {},\r\n    //             methodExt: [ ... ],\r\n    //             propExt:   [ ... ]\r\n    //           },\r\n    //           ...\r\n    //         ]\r\n    //       }\r\n    //     ]\r\n\r\n    _Api.register = _api_register = function ( name, val )\r\n    {\r\n        if ( $.isArray( name ) ) {\r\n            for ( var j=0, jen=name.length ; j<jen ; j++ ) {\r\n                _Api.register( name[j], val );\r\n            }\r\n            return;\r\n        }\r\n\r\n        var\r\n            i, ien,\r\n            heir = name.split('.'),\r\n            struct = __apiStruct,\r\n            key, method;\r\n\r\n        var find = function ( src, name ) {\r\n            for ( var i=0, ien=src.length ; i<ien ; i++ ) {\r\n                if ( src[i].name === name ) {\r\n                    return src[i];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n\r\n        for ( i=0, ien=heir.length ; i<ien ; i++ ) {\r\n            method = heir[i].indexOf('()') !== -1;\r\n            key = method ?\r\n                heir[i].replace('()', '') :\r\n                heir[i];\r\n\r\n            var src = find( struct, key );\r\n            if ( ! src ) {\r\n                src = {\r\n                    name:      key,\r\n                    val:       {},\r\n                    methodExt: [],\r\n                    propExt:   []\r\n                };\r\n                struct.push( src );\r\n            }\r\n\r\n            if ( i === ien-1 ) {\r\n                src.val = val;\r\n            }\r\n            else {\r\n                struct = method ?\r\n                    src.methodExt :\r\n                    src.propExt;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    _Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\r\n        _Api.register( pluralName, val );\r\n\r\n        _Api.register( singularName, function () {\r\n            var ret = val.apply( this, arguments );\r\n\r\n            if ( ret === this ) {\r\n                // Returned item is the API instance that was passed in, return it\r\n                return this;\r\n            }\r\n            else if ( ret instanceof _Api ) {\r\n                // New API instance returned, want the value from the first item\r\n                // in the returned array for the singular result.\r\n                return ret.length ?\r\n                    $.isArray( ret[0] ) ?\r\n                        new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\r\n                        ret[0] :\r\n                    undefined;\r\n            }\r\n\r\n            // Non-API return - just fire it back\r\n            return ret;\r\n        } );\r\n    };\r\n\r\n\r\n    /**\r\n     * Selector for HTML tables. Apply the given selector to the give array of\r\n     * DataTables settings objects.\r\n     *\r\n     * @param {string|integer} [selector] jQuery selector string or integer\r\n     * @param  {array} Array of DataTables settings objects to be filtered\r\n     * @return {array}\r\n     * @ignore\r\n     */\r\n    var __table_selector = function ( selector, a )\r\n    {\r\n        // Integer is used to pick out a table by index\r\n        if ( typeof selector === 'number' ) {\r\n            return [ a[ selector ] ];\r\n        }\r\n\r\n        // Perform a jQuery selector on the table nodes\r\n        var nodes = $.map( a, function (el, i) {\r\n            return el.nTable;\r\n        } );\r\n\r\n        return $(nodes)\r\n            .filter( selector )\r\n            .map( function (i) {\r\n                // Need to translate back from the table node to the settings\r\n                var idx = $.inArray( this, nodes );\r\n                return a[ idx ];\r\n            } )\r\n            .toArray();\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Context selector for the API's context (i.e. the tables the API instance\r\n     * refers to.\r\n     *\r\n     * @name    DataTable.Api#tables\r\n     * @param {string|integer} [selector] Selector to pick which tables the iterator\r\n     *   should operate on. If not given, all tables in the current context are\r\n     *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\r\n     *   select multiple tables or as an integer to select a single table.\r\n     * @returns {DataTable.Api} Returns a new API instance if a selector is given.\r\n     */\r\n    _api_register( 'tables()', function ( selector ) {\r\n        // A new instance is created if there was a selector specified\r\n        return selector ?\r\n            new _Api( __table_selector( selector, this.context ) ) :\r\n            this;\r\n    } );\r\n\r\n\r\n    _api_register( 'table()', function ( selector ) {\r\n        var tables = this.tables( selector );\r\n        var ctx = tables.context;\r\n\r\n        // Truncate to the first matched table\r\n        return ctx.length ?\r\n            new _Api( ctx[0] ) :\r\n            tables;\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\r\n        return this.iterator( 'table', function ( ctx ) {\r\n            return ctx.nTable;\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'tables().body()', 'table().body()' , function () {\r\n        return this.iterator( 'table', function ( ctx ) {\r\n            return ctx.nTBody;\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'tables().header()', 'table().header()' , function () {\r\n        return this.iterator( 'table', function ( ctx ) {\r\n            return ctx.nTHead;\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\r\n        return this.iterator( 'table', function ( ctx ) {\r\n            return ctx.nTFoot;\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'tables().containers()', 'table().container()' , function () {\r\n        return this.iterator( 'table', function ( ctx ) {\r\n            return ctx.nTableWrapper;\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n\r\n    /**\r\n     * Redraw the tables in the current context.\r\n     */\r\n    _api_register( 'draw()', function ( paging ) {\r\n        return this.iterator( 'table', function ( settings ) {\r\n            if ( paging === 'page' ) {\r\n                _fnDraw( settings );\r\n            }\r\n            else {\r\n                if ( typeof paging === 'string' ) {\r\n                    paging = paging === 'full-hold' ?\r\n                        false :\r\n                        true;\r\n                }\r\n\r\n                _fnReDraw( settings, paging===false );\r\n            }\r\n        } );\r\n    } );\r\n\r\n\r\n\r\n    /**\r\n     * Get the current page index.\r\n     *\r\n     * @return {integer} Current page index (zero based)\r\n     *//**\r\n     * Set the current page.\r\n     *\r\n     * Note that if you attempt to show a page which does not exist, DataTables will\r\n     * not throw an error, but rather reset the paging.\r\n     *\r\n     * @param {integer|string} action The paging action to take. This can be one of:\r\n     *  * `integer` - The page index to jump to\r\n     *  * `string` - An action to take:\r\n     *    * `first` - Jump to first page.\r\n     *    * `next` - Jump to the next page\r\n     *    * `previous` - Jump to previous page\r\n     *    * `last` - Jump to the last page.\r\n     * @returns {DataTables.Api} this\r\n     */\r\n    _api_register( 'page()', function ( action ) {\r\n        if ( action === undefined ) {\r\n            return this.page.info().page; // not an expensive call\r\n        }\r\n\r\n        // else, have an action to take on all tables\r\n        return this.iterator( 'table', function ( settings ) {\r\n            _fnPageChange( settings, action );\r\n        } );\r\n    } );\r\n\r\n\r\n    /**\r\n     * Paging information for the first table in the current context.\r\n     *\r\n     * If you require paging information for another table, use the `table()` method\r\n     * with a suitable selector.\r\n     *\r\n     * @return {object} Object with the following properties set:\r\n     *  * `page` - Current page index (zero based - i.e. the first page is `0`)\r\n     *  * `pages` - Total number of pages\r\n     *  * `start` - Display index for the first record shown on the current page\r\n     *  * `end` - Display index for the last record shown on the current page\r\n     *  * `length` - Display length (number of records). Note that generally `start\r\n     *    + length = end`, but this is not always true, for example if there are\r\n     *    only 2 records to show on the final page, with a length of 10.\r\n     *  * `recordsTotal` - Full data set length\r\n     *  * `recordsDisplay` - Data set length once the current filtering criterion\r\n     *    are applied.\r\n     */\r\n    _api_register( 'page.info()', function ( action ) {\r\n        if ( this.context.length === 0 ) {\r\n            return undefined;\r\n        }\r\n\r\n        var\r\n            settings   = this.context[0],\r\n            start      = settings._iDisplayStart,\r\n            len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\r\n            visRecords = settings.fnRecordsDisplay(),\r\n            all        = len === -1;\r\n\r\n        return {\r\n            \"page\":           all ? 0 : Math.floor( start / len ),\r\n            \"pages\":          all ? 1 : Math.ceil( visRecords / len ),\r\n            \"start\":          start,\r\n            \"end\":            settings.fnDisplayEnd(),\r\n            \"length\":         len,\r\n            \"recordsTotal\":   settings.fnRecordsTotal(),\r\n            \"recordsDisplay\": visRecords,\r\n            \"serverSide\":     _fnDataSource( settings ) === 'ssp'\r\n        };\r\n    } );\r\n\r\n\r\n    /**\r\n     * Get the current page length.\r\n     *\r\n     * @return {integer} Current page length. Note `-1` indicates that all records\r\n     *   are to be shown.\r\n     *//**\r\n     * Set the current page length.\r\n     *\r\n     * @param {integer} Page length to set. Use `-1` to show all records.\r\n     * @returns {DataTables.Api} this\r\n     */\r\n    _api_register( 'page.len()', function ( len ) {\r\n        // Note that we can't call this function 'length()' because `length`\r\n        // is a Javascript property of functions which defines how many arguments\r\n        // the function expects.\r\n        if ( len === undefined ) {\r\n            return this.context.length !== 0 ?\r\n                this.context[0]._iDisplayLength :\r\n                undefined;\r\n        }\r\n\r\n        // else, set the page length\r\n        return this.iterator( 'table', function ( settings ) {\r\n            _fnLengthChange( settings, len );\r\n        } );\r\n    } );\r\n\r\n\r\n\r\n    var __reload = function ( settings, holdPosition, callback ) {\r\n        // Use the draw event to trigger a callback\r\n        if ( callback ) {\r\n            var api = new _Api( settings );\r\n\r\n            api.one( 'draw', function () {\r\n                callback( api.ajax.json() );\r\n            } );\r\n        }\r\n\r\n        if ( _fnDataSource( settings ) == 'ssp' ) {\r\n            _fnReDraw( settings, holdPosition );\r\n        }\r\n        else {\r\n            _fnProcessingDisplay( settings, true );\r\n\r\n            // Cancel an existing request\r\n            var xhr = settings.jqXHR;\r\n            if ( xhr && xhr.readyState !== 4 ) {\r\n                xhr.abort();\r\n            }\r\n\r\n            // Trigger xhr\r\n            _fnBuildAjax( settings, [], function( json ) {\r\n                _fnClearTable( settings );\r\n\r\n                var data = _fnAjaxDataSrc( settings, json );\r\n                for ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n                    _fnAddData( settings, data[i] );\r\n                }\r\n\r\n                _fnReDraw( settings, holdPosition );\r\n                _fnProcessingDisplay( settings, false );\r\n            } );\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Get the JSON response from the last Ajax request that DataTables made to the\r\n     * server. Note that this returns the JSON from the first table in the current\r\n     * context.\r\n     *\r\n     * @return {object} JSON received from the server.\r\n     */\r\n    _api_register( 'ajax.json()', function () {\r\n        var ctx = this.context;\r\n\r\n        if ( ctx.length > 0 ) {\r\n            return ctx[0].json;\r\n        }\r\n\r\n        // else return undefined;\r\n    } );\r\n\r\n\r\n    /**\r\n     * Get the data submitted in the last Ajax request\r\n     */\r\n    _api_register( 'ajax.params()', function () {\r\n        var ctx = this.context;\r\n\r\n        if ( ctx.length > 0 ) {\r\n            return ctx[0].oAjaxData;\r\n        }\r\n\r\n        // else return undefined;\r\n    } );\r\n\r\n\r\n    /**\r\n     * Reload tables from the Ajax data source. Note that this function will\r\n     * automatically re-draw the table when the remote data has been loaded.\r\n     *\r\n     * @param {boolean} [reset=true] Reset (default) or hold the current paging\r\n     *   position. A full re-sort and re-filter is performed when this method is\r\n     *   called, which is why the pagination reset is the default action.\r\n     * @returns {DataTables.Api} this\r\n     */\r\n    _api_register( 'ajax.reload()', function ( callback, resetPaging ) {\r\n        return this.iterator( 'table', function (settings) {\r\n            __reload( settings, resetPaging===false, callback );\r\n        } );\r\n    } );\r\n\r\n\r\n    /**\r\n     * Get the current Ajax URL. Note that this returns the URL from the first\r\n     * table in the current context.\r\n     *\r\n     * @return {string} Current Ajax source URL\r\n     *//**\r\n     * Set the Ajax URL. Note that this will set the URL for all tables in the\r\n     * current context.\r\n     *\r\n     * @param {string} url URL to set.\r\n     * @returns {DataTables.Api} this\r\n     */\r\n    _api_register( 'ajax.url()', function ( url ) {\r\n        var ctx = this.context;\r\n\r\n        if ( url === undefined ) {\r\n            // get\r\n            if ( ctx.length === 0 ) {\r\n                return undefined;\r\n            }\r\n            ctx = ctx[0];\r\n\r\n            return ctx.ajax ?\r\n                $.isPlainObject( ctx.ajax ) ?\r\n                    ctx.ajax.url :\r\n                    ctx.ajax :\r\n                ctx.sAjaxSource;\r\n        }\r\n\r\n        // set\r\n        return this.iterator( 'table', function ( settings ) {\r\n            if ( $.isPlainObject( settings.ajax ) ) {\r\n                settings.ajax.url = url;\r\n            }\r\n            else {\r\n                settings.ajax = url;\r\n            }\r\n            // No need to consider sAjaxSource here since DataTables gives priority\r\n            // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\r\n            // value of `sAjaxSource` redundant.\r\n        } );\r\n    } );\r\n\r\n\r\n    /**\r\n     * Load data from the newly set Ajax URL. Note that this method is only\r\n     * available when `ajax.url()` is used to set a URL. Additionally, this method\r\n     * has the same effect as calling `ajax.reload()` but is provided for\r\n     * convenience when setting a new URL. Like `ajax.reload()` it will\r\n     * automatically redraw the table once the remote data has been loaded.\r\n     *\r\n     * @returns {DataTables.Api} this\r\n     */\r\n    _api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\r\n        // Same as a reload, but makes sense to present it for easy access after a\r\n        // url change\r\n        return this.iterator( 'table', function ( ctx ) {\r\n            __reload( ctx, resetPaging===false, callback );\r\n        } );\r\n    } );\r\n\r\n\r\n\r\n\r\n    var _selector_run = function ( type, selector, selectFn, settings, opts )\r\n    {\r\n        var\r\n            out = [], res,\r\n            a, i, ien, j, jen,\r\n            selectorType = typeof selector;\r\n\r\n        // Can't just check for isArray here, as an API or jQuery instance might be\r\n        // given with their array like look\r\n        if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\r\n            selector = [ selector ];\r\n        }\r\n\r\n        for ( i=0, ien=selector.length ; i<ien ; i++ ) {\r\n            a = selector[i] && selector[i].split ?\r\n                selector[i].split(',') :\r\n                [ selector[i] ];\r\n\r\n            for ( j=0, jen=a.length ; j<jen ; j++ ) {\r\n                res = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\r\n\r\n                if ( res && res.length ) {\r\n                    out = out.concat( res );\r\n                }\r\n            }\r\n        }\r\n\r\n        // selector extensions\r\n        var ext = _ext.selector[ type ];\r\n        if ( ext.length ) {\r\n            for ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n                out = ext[i]( settings, opts, out );\r\n            }\r\n        }\r\n\r\n        return _unique( out );\r\n    };\r\n\r\n\r\n    var _selector_opts = function ( opts )\r\n    {\r\n        if ( ! opts ) {\r\n            opts = {};\r\n        }\r\n\r\n        // Backwards compatibility for 1.9- which used the terminology filter rather\r\n        // than search\r\n        if ( opts.filter && opts.search === undefined ) {\r\n            opts.search = opts.filter;\r\n        }\r\n\r\n        return $.extend( {\r\n            search: 'none',\r\n            order: 'current',\r\n            page: 'all'\r\n        }, opts );\r\n    };\r\n\r\n\r\n    var _selector_first = function ( inst )\r\n    {\r\n        // Reduce the API instance to the first item found\r\n        for ( var i=0, ien=inst.length ; i<ien ; i++ ) {\r\n            if ( inst[i].length > 0 ) {\r\n                // Assign the first element to the first item in the instance\r\n                // and truncate the instance and context\r\n                inst[0] = inst[i];\r\n                inst[0].length = 1;\r\n                inst.length = 1;\r\n                inst.context = [ inst.context[i] ];\r\n\r\n                return inst;\r\n            }\r\n        }\r\n\r\n        // Not found - return an empty instance\r\n        inst.length = 0;\r\n        return inst;\r\n    };\r\n\r\n\r\n    var _selector_row_indexes = function ( settings, opts )\r\n    {\r\n        var\r\n            i, ien, tmp, a=[],\r\n            displayFiltered = settings.aiDisplay,\r\n            displayMaster = settings.aiDisplayMaster;\r\n\r\n        var\r\n            search = opts.search,  // none, applied, removed\r\n            order  = opts.order,   // applied, current, index (original - compatibility with 1.9)\r\n            page   = opts.page;    // all, current\r\n\r\n        if ( _fnDataSource( settings ) == 'ssp' ) {\r\n            // In server-side processing mode, most options are irrelevant since\r\n            // rows not shown don't exist and the index order is the applied order\r\n            // Removed is a special case - for consistency just return an empty\r\n            // array\r\n            return search === 'removed' ?\r\n                [] :\r\n                _range( 0, displayMaster.length );\r\n        }\r\n        else if ( page == 'current' ) {\r\n            // Current page implies that order=current and fitler=applied, since it is\r\n            // fairly senseless otherwise, regardless of what order and search actually\r\n            // are\r\n            for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\r\n                a.push( displayFiltered[i] );\r\n            }\r\n        }\r\n        else if ( order == 'current' || order == 'applied' ) {\r\n            a = search == 'none' ?\r\n                displayMaster.slice() :                      // no search\r\n                search == 'applied' ?\r\n                    displayFiltered.slice() :                // applied search\r\n                    $.map( displayMaster, function (el, i) { // removed search\r\n                        return $.inArray( el, displayFiltered ) === -1 ? el : null;\r\n                    } );\r\n        }\r\n        else if ( order == 'index' || order == 'original' ) {\r\n            for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n                if ( search == 'none' ) {\r\n                    a.push( i );\r\n                }\r\n                else { // applied | removed\r\n                    tmp = $.inArray( i, displayFiltered );\r\n\r\n                    if ((tmp === -1 && search == 'removed') ||\r\n                        (tmp >= 0   && search == 'applied') )\r\n                    {\r\n                        a.push( i );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return a;\r\n    };\r\n\r\n\r\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n     * Rows\r\n     *\r\n     * {}          - no selector - use all available rows\r\n     * {integer}   - row aoData index\r\n     * {node}      - TR node\r\n     * {string}    - jQuery selector to apply to the TR elements\r\n     * {array}     - jQuery array of nodes, or simply an array of TR nodes\r\n     *\r\n     */\r\n\r\n\r\n    var __row_selector = function ( settings, selector, opts )\r\n    {\r\n        var run = function ( sel ) {\r\n            var selInt = _intVal( sel );\r\n            var i, ien;\r\n\r\n            // Short cut - selector is a number and no options provided (default is\r\n            // all records, so no need to check if the index is in there, since it\r\n            // must be - dev error if the index doesn't exist).\r\n            if ( selInt !== null && ! opts ) {\r\n                return [ selInt ];\r\n            }\r\n\r\n            var rows = _selector_row_indexes( settings, opts );\r\n\r\n            if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\r\n                // Selector - integer\r\n                return [ selInt ];\r\n            }\r\n            else if ( ! sel ) {\r\n                // Selector - none\r\n                return rows;\r\n            }\r\n\r\n            // Selector - function\r\n            if ( typeof sel === 'function' ) {\r\n                return $.map( rows, function (idx) {\r\n                    var row = settings.aoData[ idx ];\r\n                    return sel( idx, row._aData, row.nTr ) ? idx : null;\r\n                } );\r\n            }\r\n\r\n            // Get nodes in the order from the `rows` array with null values removed\r\n            var nodes = _removeEmpty(\r\n                _pluck_order( settings.aoData, rows, 'nTr' )\r\n            );\r\n\r\n            // Selector - node\r\n            if ( sel.nodeName ) {\r\n                if ( sel._DT_RowIndex !== undefined ) {\r\n                    return [ sel._DT_RowIndex ]; // Property added by DT for fast lookup\r\n                }\r\n                else if ( sel._DT_CellIndex ) {\r\n                    return [ sel._DT_CellIndex.row ];\r\n                }\r\n                else {\r\n                    var host = $(sel).closest('*[data-dt-row]');\r\n                    return host.length ?\r\n                        [ host.data('dt-row') ] :\r\n                        [];\r\n                }\r\n            }\r\n\r\n            // ID selector. Want to always be able to select rows by id, regardless\r\n            // of if the tr element has been created or not, so can't rely upon\r\n            // jQuery here - hence a custom implementation. This does not match\r\n            // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\r\n            // but to select it using a CSS selector engine (like Sizzle or\r\n            // querySelect) it would need to need to be escaped for some characters.\r\n            // DataTables simplifies this for row selectors since you can select\r\n            // only a row. A # indicates an id any anything that follows is the id -\r\n            // unescaped.\r\n            if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\r\n                // get row index from id\r\n                var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\r\n                if ( rowObj !== undefined ) {\r\n                    return [ rowObj.idx ];\r\n                }\r\n\r\n                // need to fall through to jQuery in case there is DOM id that\r\n                // matches\r\n            }\r\n\r\n            // Selector - jQuery selector string, array of nodes or jQuery object/\r\n            // As jQuery's .filter() allows jQuery objects to be passed in filter,\r\n            // it also allows arrays, so this will cope with all three options\r\n            return $(nodes)\r\n                .filter( sel )\r\n                .map( function () {\r\n                    return this._DT_RowIndex;\r\n                } )\r\n                .toArray();\r\n        };\r\n\r\n        return _selector_run( 'row', selector, run, settings, opts );\r\n    };\r\n\r\n\r\n    _api_register( 'rows()', function ( selector, opts ) {\r\n        // argument shifting\r\n        if ( selector === undefined ) {\r\n            selector = '';\r\n        }\r\n        else if ( $.isPlainObject( selector ) ) {\r\n            opts = selector;\r\n            selector = '';\r\n        }\r\n\r\n        opts = _selector_opts( opts );\r\n\r\n        var inst = this.iterator( 'table', function ( settings ) {\r\n            return __row_selector( settings, selector, opts );\r\n        }, 1 );\r\n\r\n        // Want argument shifting here and in __row_selector?\r\n        inst.selector.rows = selector;\r\n        inst.selector.opts = opts;\r\n\r\n        return inst;\r\n    } );\r\n\r\n    _api_register( 'rows().nodes()', function () {\r\n        return this.iterator( 'row', function ( settings, row ) {\r\n            return settings.aoData[ row ].nTr || undefined;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_register( 'rows().data()', function () {\r\n        return this.iterator( true, 'rows', function ( settings, rows ) {\r\n            return _pluck_order( settings.aoData, rows, '_aData' );\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\r\n        return this.iterator( 'row', function ( settings, row ) {\r\n            var r = settings.aoData[ row ];\r\n            return type === 'search' ? r._aFilterData : r._aSortData;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\r\n        return this.iterator( 'row', function ( settings, row ) {\r\n            _fnInvalidate( settings, row, src );\r\n        } );\r\n    } );\r\n\r\n    _api_registerPlural( 'rows().indexes()', 'row().index()', function () {\r\n        return this.iterator( 'row', function ( settings, row ) {\r\n            return row;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\r\n        var a = [];\r\n        var context = this.context;\r\n\r\n        // `iterator` will drop undefined values, but in this case we want them\r\n        for ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n            for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\r\n                var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\r\n                a.push( (hash === true ? '#' : '' )+ id );\r\n            }\r\n        }\r\n\r\n        return new _Api( context, a );\r\n    } );\r\n\r\n    _api_registerPlural( 'rows().remove()', 'row().remove()', function () {\r\n        var that = this;\r\n\r\n        this.iterator( 'row', function ( settings, row, thatIdx ) {\r\n            var data = settings.aoData;\r\n            var rowData = data[ row ];\r\n            var i, ien, j, jen;\r\n            var loopRow, loopCells;\r\n\r\n            data.splice( row, 1 );\r\n\r\n            // Update the cached indexes\r\n            for ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n                loopRow = data[i];\r\n                loopCells = loopRow.anCells;\r\n\r\n                // Rows\r\n                if ( loopRow.nTr !== null ) {\r\n                    loopRow.nTr._DT_RowIndex = i;\r\n                }\r\n\r\n                // Cells\r\n                if ( loopCells !== null ) {\r\n                    for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\r\n                        loopCells[j]._DT_CellIndex.row = i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Delete from the display arrays\r\n            _fnDeleteIndex( settings.aiDisplayMaster, row );\r\n            _fnDeleteIndex( settings.aiDisplay, row );\r\n            _fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\r\n\r\n            // Check for an 'overflow' they case for displaying the table\r\n            _fnLengthOverflow( settings );\r\n\r\n            // Remove the row's ID reference if there is one\r\n            var id = settings.rowIdFn( rowData._aData );\r\n            if ( id !== undefined ) {\r\n                delete settings.aIds[ id ];\r\n            }\r\n        } );\r\n\r\n        this.iterator( 'table', function ( settings ) {\r\n            for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n                settings.aoData[i].idx = i;\r\n            }\r\n        } );\r\n\r\n        return this;\r\n    } );\r\n\r\n\r\n    _api_register( 'rows.add()', function ( rows ) {\r\n        var newRows = this.iterator( 'table', function ( settings ) {\r\n            var row, i, ien;\r\n            var out = [];\r\n\r\n            for ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n                row = rows[i];\r\n\r\n                if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n                    out.push( _fnAddTr( settings, row )[0] );\r\n                }\r\n                else {\r\n                    out.push( _fnAddData( settings, row ) );\r\n                }\r\n            }\r\n\r\n            return out;\r\n        }, 1 );\r\n\r\n        // Return an Api.rows() extended instance, so rows().nodes() etc can be used\r\n        var modRows = this.rows( -1 );\r\n        modRows.pop();\r\n        $.merge( modRows, newRows );\r\n\r\n        return modRows;\r\n    } );\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    _api_register( 'row()', function ( selector, opts ) {\r\n        return _selector_first( this.rows( selector, opts ) );\r\n    } );\r\n\r\n\r\n    _api_register( 'row().data()', function ( data ) {\r\n        var ctx = this.context;\r\n\r\n        if ( data === undefined ) {\r\n            // Get\r\n            return ctx.length && this.length ?\r\n                ctx[0].aoData[ this[0] ]._aData :\r\n                undefined;\r\n        }\r\n\r\n        // Set\r\n        ctx[0].aoData[ this[0] ]._aData = data;\r\n\r\n        // Automatically invalidate\r\n        _fnInvalidate( ctx[0], this[0], 'data' );\r\n\r\n        return this;\r\n    } );\r\n\r\n\r\n    _api_register( 'row().node()', function () {\r\n        var ctx = this.context;\r\n\r\n        return ctx.length && this.length ?\r\n        ctx[0].aoData[ this[0] ].nTr || null :\r\n            null;\r\n    } );\r\n\r\n\r\n    _api_register( 'row.add()', function ( row ) {\r\n        // Allow a jQuery object to be passed in - only a single row is added from\r\n        // it though - the first element in the set\r\n        if ( row instanceof $ && row.length ) {\r\n            row = row[0];\r\n        }\r\n\r\n        var rows = this.iterator( 'table', function ( settings ) {\r\n            if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n                return _fnAddTr( settings, row )[0];\r\n            }\r\n            return _fnAddData( settings, row );\r\n        } );\r\n\r\n        // Return an Api.rows() extended instance, with the newly added row selected\r\n        return this.row( rows[0] );\r\n    } );\r\n\r\n\r\n\r\n    var __details_add = function ( ctx, row, data, klass )\r\n    {\r\n        // Convert to array of TR elements\r\n        var rows = [];\r\n        var addRow = function ( r, k ) {\r\n            // Recursion to allow for arrays of jQuery objects\r\n            if ( $.isArray( r ) || r instanceof $ ) {\r\n                for ( var i=0, ien=r.length ; i<ien ; i++ ) {\r\n                    addRow( r[i], k );\r\n                }\r\n                return;\r\n            }\r\n\r\n            // If we get a TR element, then just add it directly - up to the dev\r\n            // to add the correct number of columns etc\r\n            if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\r\n                rows.push( r );\r\n            }\r\n            else {\r\n                // Otherwise create a row with a wrapper\r\n                var created = $('<tr><td/></tr>').addClass( k );\r\n                $('td', created)\r\n                    .addClass( k )\r\n                    .html( r )\r\n                    [0].colSpan = _fnVisbleColumns( ctx );\r\n\r\n                rows.push( created[0] );\r\n            }\r\n        };\r\n\r\n        addRow( data, klass );\r\n\r\n        if ( row._details ) {\r\n            row._details.remove();\r\n        }\r\n\r\n        row._details = $(rows);\r\n\r\n        // If the children were already shown, that state should be retained\r\n        if ( row._detailsShow ) {\r\n            row._details.insertAfter( row.nTr );\r\n        }\r\n    };\r\n\r\n\r\n    var __details_remove = function ( api, idx )\r\n    {\r\n        var ctx = api.context;\r\n\r\n        if ( ctx.length ) {\r\n            var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\r\n\r\n            if ( row && row._details ) {\r\n                row._details.remove();\r\n\r\n                row._detailsShow = undefined;\r\n                row._details = undefined;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    var __details_display = function ( api, show ) {\r\n        var ctx = api.context;\r\n\r\n        if ( ctx.length && api.length ) {\r\n            var row = ctx[0].aoData[ api[0] ];\r\n\r\n            if ( row._details ) {\r\n                row._detailsShow = show;\r\n\r\n                if ( show ) {\r\n                    row._details.insertAfter( row.nTr );\r\n                }\r\n                else {\r\n                    row._details.detach();\r\n                }\r\n\r\n                __details_events( ctx[0] );\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    var __details_events = function ( settings )\r\n    {\r\n        var api = new _Api( settings );\r\n        var namespace = '.dt.DT_details';\r\n        var drawEvent = 'draw'+namespace;\r\n        var colvisEvent = 'column-visibility'+namespace;\r\n        var destroyEvent = 'destroy'+namespace;\r\n        var data = settings.aoData;\r\n\r\n        api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\r\n\r\n        if ( _pluck( data, '_details' ).length > 0 ) {\r\n            // On each draw, insert the required elements into the document\r\n            api.on( drawEvent, function ( e, ctx ) {\r\n                if ( settings !== ctx ) {\r\n                    return;\r\n                }\r\n\r\n                api.rows( {page:'current'} ).eq(0).each( function (idx) {\r\n                    // Internal data grab\r\n                    var row = data[ idx ];\r\n\r\n                    if ( row._detailsShow ) {\r\n                        row._details.insertAfter( row.nTr );\r\n                    }\r\n                } );\r\n            } );\r\n\r\n            // Column visibility change - update the colspan\r\n            api.on( colvisEvent, function ( e, ctx, idx, vis ) {\r\n                if ( settings !== ctx ) {\r\n                    return;\r\n                }\r\n\r\n                // Update the colspan for the details rows (note, only if it already has\r\n                // a colspan)\r\n                var row, visible = _fnVisbleColumns( ctx );\r\n\r\n                for ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n                    row = data[i];\r\n\r\n                    if ( row._details ) {\r\n                        row._details.children('td[colspan]').attr('colspan', visible );\r\n                    }\r\n                }\r\n            } );\r\n\r\n            // Table destroyed - nuke any child rows\r\n            api.on( destroyEvent, function ( e, ctx ) {\r\n                if ( settings !== ctx ) {\r\n                    return;\r\n                }\r\n\r\n                for ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n                    if ( data[i]._details ) {\r\n                        __details_remove( api, i );\r\n                    }\r\n                }\r\n            } );\r\n        }\r\n    };\r\n\r\n    // Strings for the method names to help minification\r\n    var _emp = '';\r\n    var _child_obj = _emp+'row().child';\r\n    var _child_mth = _child_obj+'()';\r\n\r\n    // data can be:\r\n    //  tr\r\n    //  string\r\n    //  jQuery or array of any of the above\r\n    _api_register( _child_mth, function ( data, klass ) {\r\n        var ctx = this.context;\r\n\r\n        if ( data === undefined ) {\r\n            // get\r\n            return ctx.length && this.length ?\r\n                ctx[0].aoData[ this[0] ]._details :\r\n                undefined;\r\n        }\r\n        else if ( data === true ) {\r\n            // show\r\n            this.child.show();\r\n        }\r\n        else if ( data === false ) {\r\n            // remove\r\n            __details_remove( this );\r\n        }\r\n        else if ( ctx.length && this.length ) {\r\n            // set\r\n            __details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\r\n        }\r\n\r\n        return this;\r\n    } );\r\n\r\n\r\n    _api_register( [\r\n        _child_obj+'.show()',\r\n        _child_mth+'.show()' // only when `child()` was called with parameters (without\r\n    ], function ( show ) {   // it returns an object and this method is not executed)\r\n        __details_display( this, true );\r\n        return this;\r\n    } );\r\n\r\n\r\n    _api_register( [\r\n        _child_obj+'.hide()',\r\n        _child_mth+'.hide()' // only when `child()` was called with parameters (without\r\n    ], function () {         // it returns an object and this method is not executed)\r\n        __details_display( this, false );\r\n        return this;\r\n    } );\r\n\r\n\r\n    _api_register( [\r\n        _child_obj+'.remove()',\r\n        _child_mth+'.remove()' // only when `child()` was called with parameters (without\r\n    ], function () {           // it returns an object and this method is not executed)\r\n        __details_remove( this );\r\n        return this;\r\n    } );\r\n\r\n\r\n    _api_register( _child_obj+'.isShown()', function () {\r\n        var ctx = this.context;\r\n\r\n        if ( ctx.length && this.length ) {\r\n            // _detailsShown as false or undefined will fall through to return false\r\n            return ctx[0].aoData[ this[0] ]._detailsShow || false;\r\n        }\r\n        return false;\r\n    } );\r\n\r\n\r\n\r\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n     * Columns\r\n     *\r\n     * {integer}           - column index (>=0 count from left, <0 count from right)\r\n     * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\r\n     * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\r\n     * \"{string}:name\"     - column name\r\n     * \"{string}\"          - jQuery selector on column header nodes\r\n     *\r\n     */\r\n\r\n    // can be an array of these items, comma separated list, or an array of comma\r\n    // separated lists\r\n\r\n    var __re_column_selector = /^(.+):(name|visIdx|visible)$/;\r\n\r\n\r\n    // r1 and r2 are redundant - but it means that the parameters match for the\r\n    // iterator callback in columns().data()\r\n    var __columnData = function ( settings, column, r1, r2, rows ) {\r\n        var a = [];\r\n        for ( var row=0, ien=rows.length ; row<ien ; row++ ) {\r\n            a.push( _fnGetCellData( settings, rows[row], column ) );\r\n        }\r\n        return a;\r\n    };\r\n\r\n\r\n    var __column_selector = function ( settings, selector, opts )\r\n    {\r\n        var\r\n            columns = settings.aoColumns,\r\n            names = _pluck( columns, 'sName' ),\r\n            nodes = _pluck( columns, 'nTh' );\r\n\r\n        var run = function ( s ) {\r\n            var selInt = _intVal( s );\r\n\r\n            // Selector - all\r\n            if ( s === '' ) {\r\n                return _range( columns.length );\r\n            }\r\n\r\n            // Selector - index\r\n            if ( selInt !== null ) {\r\n                return [ selInt >= 0 ?\r\n                    selInt : // Count from left\r\n                columns.length + selInt // Count from right (+ because its a negative value)\r\n                ];\r\n            }\r\n\r\n            // Selector = function\r\n            if ( typeof s === 'function' ) {\r\n                var rows = _selector_row_indexes( settings, opts );\r\n\r\n                return $.map( columns, function (col, idx) {\r\n                    return s(\r\n                        idx,\r\n                        __columnData( settings, idx, 0, 0, rows ),\r\n                        nodes[ idx ]\r\n                    ) ? idx : null;\r\n                } );\r\n            }\r\n\r\n            // jQuery or string selector\r\n            var match = typeof s === 'string' ?\r\n                s.match( __re_column_selector ) :\r\n                '';\r\n\r\n            if ( match ) {\r\n                switch( match[2] ) {\r\n                    case 'visIdx':\r\n                    case 'visible':\r\n                        var idx = parseInt( match[1], 10 );\r\n                        // Visible index given, convert to column index\r\n                        if ( idx < 0 ) {\r\n                            // Counting from the right\r\n                            var visColumns = $.map( columns, function (col,i) {\r\n                                return col.bVisible ? i : null;\r\n                            } );\r\n                            return [ visColumns[ visColumns.length + idx ] ];\r\n                        }\r\n                        // Counting from the left\r\n                        return [ _fnVisibleToColumnIndex( settings, idx ) ];\r\n\r\n                    case 'name':\r\n                        // match by name. `names` is column index complete and in order\r\n                        return $.map( names, function (name, i) {\r\n                            return name === match[1] ? i : null;\r\n                        } );\r\n\r\n                    default:\r\n                        return [];\r\n                }\r\n            }\r\n\r\n            // Cell in the table body\r\n            if ( s.nodeName && s._DT_CellIndex ) {\r\n                return [ s._DT_CellIndex.column ];\r\n            }\r\n\r\n            // jQuery selector on the TH elements for the columns\r\n            var jqResult = $( nodes )\r\n                .filter( s )\r\n                .map( function () {\r\n                    return $.inArray( this, nodes ); // `nodes` is column index complete and in order\r\n                } )\r\n                .toArray();\r\n\r\n            if ( jqResult.length || ! s.nodeName ) {\r\n                return jqResult;\r\n            }\r\n\r\n            // Otherwise a node which might have a `dt-column` data attribute, or be\r\n            // a child or such an element\r\n            var host = $(s).closest('*[data-dt-column]');\r\n            return host.length ?\r\n                [ host.data('dt-column') ] :\r\n                [];\r\n        };\r\n\r\n        return _selector_run( 'column', selector, run, settings, opts );\r\n    };\r\n\r\n\r\n    var __setColumnVis = function ( settings, column, vis ) {\r\n        var\r\n            cols = settings.aoColumns,\r\n            col  = cols[ column ],\r\n            data = settings.aoData,\r\n            row, cells, i, ien, tr;\r\n\r\n        // Get\r\n        if ( vis === undefined ) {\r\n            return col.bVisible;\r\n        }\r\n\r\n        // Set\r\n        // No change\r\n        if ( col.bVisible === vis ) {\r\n            return;\r\n        }\r\n\r\n        if ( vis ) {\r\n            // Insert column\r\n            // Need to decide if we should use appendChild or insertBefore\r\n            var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\r\n\r\n            for ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n                tr = data[i].nTr;\r\n                cells = data[i].anCells;\r\n\r\n                if ( tr ) {\r\n                    // insertBefore can act like appendChild if 2nd arg is null\r\n                    tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // Remove column\r\n            $( _pluck( settings.aoData, 'anCells', column ) ).detach();\r\n        }\r\n\r\n        // Common actions\r\n        col.bVisible = vis;\r\n        _fnDrawHead( settings, settings.aoHeader );\r\n        _fnDrawHead( settings, settings.aoFooter );\r\n\r\n        _fnSaveState( settings );\r\n    };\r\n\r\n\r\n    _api_register( 'columns()', function ( selector, opts ) {\r\n        // argument shifting\r\n        if ( selector === undefined ) {\r\n            selector = '';\r\n        }\r\n        else if ( $.isPlainObject( selector ) ) {\r\n            opts = selector;\r\n            selector = '';\r\n        }\r\n\r\n        opts = _selector_opts( opts );\r\n\r\n        var inst = this.iterator( 'table', function ( settings ) {\r\n            return __column_selector( settings, selector, opts );\r\n        }, 1 );\r\n\r\n        // Want argument shifting here and in _row_selector?\r\n        inst.selector.cols = selector;\r\n        inst.selector.opts = opts;\r\n\r\n        return inst;\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\r\n        return this.iterator( 'column', function ( settings, column ) {\r\n            return settings.aoColumns[column].nTh;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\r\n        return this.iterator( 'column', function ( settings, column ) {\r\n            return settings.aoColumns[column].nTf;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().data()', 'column().data()', function () {\r\n        return this.iterator( 'column-rows', __columnData, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\r\n        return this.iterator( 'column', function ( settings, column ) {\r\n            return settings.aoColumns[column].mData;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\r\n        return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n            return _pluck_order( settings.aoData, rows,\r\n                type === 'search' ? '_aFilterData' : '_aSortData', column\r\n            );\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\r\n        return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n            return _pluck_order( settings.aoData, rows, 'anCells', column ) ;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\r\n        var ret = this.iterator( 'column', function ( settings, column ) {\r\n            if ( vis === undefined ) {\r\n                return settings.aoColumns[ column ].bVisible;\r\n            } // else\r\n            __setColumnVis( settings, column, vis );\r\n        } );\r\n\r\n        // Group the column visibility changes\r\n        if ( vis !== undefined ) {\r\n            // Second loop once the first is done for events\r\n            this.iterator( 'column', function ( settings, column ) {\r\n                _fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\r\n            } );\r\n\r\n            if ( calc === undefined || calc ) {\r\n                this.columns.adjust();\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    } );\r\n\r\n    _api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\r\n        return this.iterator( 'column', function ( settings, column ) {\r\n            return type === 'visible' ?\r\n                _fnColumnIndexToVisible( settings, column ) :\r\n                column;\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_register( 'columns.adjust()', function () {\r\n        return this.iterator( 'table', function ( settings ) {\r\n            _fnAdjustColumnSizing( settings );\r\n        }, 1 );\r\n    } );\r\n\r\n    _api_register( 'column.index()', function ( type, idx ) {\r\n        if ( this.context.length !== 0 ) {\r\n            var ctx = this.context[0];\r\n\r\n            if ( type === 'fromVisible' || type === 'toData' ) {\r\n                return _fnVisibleToColumnIndex( ctx, idx );\r\n            }\r\n            else if ( type === 'fromData' || type === 'toVisible' ) {\r\n                return _fnColumnIndexToVisible( ctx, idx );\r\n            }\r\n        }\r\n    } );\r\n\r\n    _api_register( 'column()', function ( selector, opts ) {\r\n        return _selector_first( this.columns( selector, opts ) );\r\n    } );\r\n\r\n\r\n\r\n    var __cell_selector = function ( settings, selector, opts )\r\n    {\r\n        var data = settings.aoData;\r\n        var rows = _selector_row_indexes( settings, opts );\r\n        var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\r\n        var allCells = $( [].concat.apply([], cells) );\r\n        var row;\r\n        var columns = settings.aoColumns.length;\r\n        var a, i, ien, j, o, host;\r\n\r\n        var run = function ( s ) {\r\n            var fnSelector = typeof s === 'function';\r\n\r\n            if ( s === null || s === undefined || fnSelector ) {\r\n                // All cells and function selectors\r\n                a = [];\r\n\r\n                for ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n                    row = rows[i];\r\n\r\n                    for ( j=0 ; j<columns ; j++ ) {\r\n                        o = {\r\n                            row: row,\r\n                            column: j\r\n                        };\r\n\r\n                        if ( fnSelector ) {\r\n                            // Selector - function\r\n                            host = data[ row ];\r\n\r\n                            if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\r\n                                a.push( o );\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Selector - all\r\n                            a.push( o );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return a;\r\n            }\r\n\r\n            // Selector - index\r\n            if ( $.isPlainObject( s ) ) {\r\n                return [s];\r\n            }\r\n\r\n            // Selector - jQuery filtered cells\r\n            var jqResult = allCells\r\n                .filter( s )\r\n                .map( function (i, el) {\r\n                    return { // use a new object, in case someone changes the values\r\n                        row:    el._DT_CellIndex.row,\r\n                        column: el._DT_CellIndex.column\r\n                    };\r\n                } )\r\n                .toArray();\r\n\r\n            if ( jqResult.length || ! s.nodeName ) {\r\n                return jqResult;\r\n            }\r\n\r\n            // Otherwise the selector is a node, and there is one last option - the\r\n            // element might be a child of an element which has dt-row and dt-column\r\n            // data attributes\r\n            host = $(s).closest('*[data-dt-row]');\r\n            return host.length ?\r\n                [ {\r\n                    row: host.data('dt-row'),\r\n                    column: host.data('dt-column')\r\n                } ] :\r\n                [];\r\n        };\r\n\r\n        return _selector_run( 'cell', selector, run, settings, opts );\r\n    };\r\n\r\n\r\n\r\n\r\n    _api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\r\n        // Argument shifting\r\n        if ( $.isPlainObject( rowSelector ) ) {\r\n            // Indexes\r\n            if ( rowSelector.row === undefined ) {\r\n                // Selector options in first parameter\r\n                opts = rowSelector;\r\n                rowSelector = null;\r\n            }\r\n            else {\r\n                // Cell index objects in first parameter\r\n                opts = columnSelector;\r\n                columnSelector = null;\r\n            }\r\n        }\r\n        if ( $.isPlainObject( columnSelector ) ) {\r\n            opts = columnSelector;\r\n            columnSelector = null;\r\n        }\r\n\r\n        // Cell selector\r\n        if ( columnSelector === null || columnSelector === undefined ) {\r\n            return this.iterator( 'table', function ( settings ) {\r\n                return __cell_selector( settings, rowSelector, _selector_opts( opts ) );\r\n            } );\r\n        }\r\n\r\n        // Row + column selector\r\n        var columns = this.columns( columnSelector, opts );\r\n        var rows = this.rows( rowSelector, opts );\r\n        var a, i, ien, j, jen;\r\n\r\n        var cells = this.iterator( 'table', function ( settings, idx ) {\r\n            a = [];\r\n\r\n            for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\r\n                for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\r\n                    a.push( {\r\n                        row:    rows[idx][i],\r\n                        column: columns[idx][j]\r\n                    } );\r\n                }\r\n            }\r\n\r\n            return a;\r\n        }, 1 );\r\n\r\n        $.extend( cells.selector, {\r\n            cols: columnSelector,\r\n            rows: rowSelector,\r\n            opts: opts\r\n        } );\r\n\r\n        return cells;\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\r\n        return this.iterator( 'cell', function ( settings, row, column ) {\r\n            var data = settings.aoData[ row ];\r\n\r\n            return data && data.anCells ?\r\n                data.anCells[ column ] :\r\n                undefined;\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_register( 'cells().data()', function () {\r\n        return this.iterator( 'cell', function ( settings, row, column ) {\r\n            return _fnGetCellData( settings, row, column );\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\r\n        type = type === 'search' ? '_aFilterData' : '_aSortData';\r\n\r\n        return this.iterator( 'cell', function ( settings, row, column ) {\r\n            return settings.aoData[ row ][ type ][ column ];\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\r\n        return this.iterator( 'cell', function ( settings, row, column ) {\r\n            return _fnGetCellData( settings, row, column, type );\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\r\n        return this.iterator( 'cell', function ( settings, row, column ) {\r\n            return {\r\n                row: row,\r\n                column: column,\r\n                columnVisible: _fnColumnIndexToVisible( settings, column )\r\n            };\r\n        }, 1 );\r\n    } );\r\n\r\n\r\n    _api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\r\n        return this.iterator( 'cell', function ( settings, row, column ) {\r\n            _fnInvalidate( settings, row, src, column );\r\n        } );\r\n    } );\r\n\r\n\r\n\r\n    _api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\r\n        return _selector_first( this.cells( rowSelector, columnSelector, opts ) );\r\n    } );\r\n\r\n\r\n    _api_register( 'cell().data()', function ( data ) {\r\n        var ctx = this.context;\r\n        var cell = this[0];\r\n\r\n        if ( data === undefined ) {\r\n            // Get\r\n            return ctx.length && cell.length ?\r\n                _fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\r\n                undefined;\r\n        }\r\n\r\n        // Set\r\n        _fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\r\n        _fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\r\n\r\n        return this;\r\n    } );\r\n\r\n\r\n\r\n    /**\r\n     * Get current ordering (sorting) that has been applied to the table.\r\n     *\r\n     * @returns {array} 2D array containing the sorting information for the first\r\n     *   table in the current context. Each element in the parent array represents\r\n     *   a column being sorted upon (i.e. multi-sorting with two columns would have\r\n     *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\r\n     *   the column index that the sorting condition applies to, the second is the\r\n     *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\r\n     *   index of the sorting order from the `column.sorting` initialisation array.\r\n     *//**\r\n     * Set the ordering for the table.\r\n     *\r\n     * @param {integer} order Column index to sort upon.\r\n     * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\r\n     * @returns {DataTables.Api} this\r\n     *//**\r\n     * Set the ordering for the table.\r\n     *\r\n     * @param {array} order 1D array of sorting information to be applied.\r\n     * @param {array} [...] Optional additional sorting conditions\r\n     * @returns {DataTables.Api} this\r\n     *//**\r\n     * Set the ordering for the table.\r\n     *\r\n     * @param {array} order 2D array of sorting information to be applied.\r\n     * @returns {DataTables.Api} this\r\n     */\r\n    _api_register( 'order()', function ( order, dir ) {\r\n        var ctx = this.context;\r\n\r\n        if ( order === undefined ) {\r\n            // get\r\n            return ctx.length !== 0 ?\r\n                ctx[0].aaSorting :\r\n                undefined;\r\n        }\r\n\r\n        // set\r\n        if ( typeof order === 'number' ) {\r\n            // Simple column / direction passed in\r\n            order = [ [ order, dir ] ];\r\n        }\r\n        else if ( order.length && ! $.isArray( order[0] ) ) {\r\n            // Arguments passed in (list of 1D arrays)\r\n            order = Array.prototype.slice.call( arguments );\r\n        }\r\n        // otherwise a 2D array was passed in\r\n\r\n        return this.iterator( 'table', function ( settings ) {\r\n            settings.aaSorting = order.slice();\r\n        } );\r\n    } );\r\n\r\n\r\n    /**\r\n     * Attach a sort listener to an element for a given column\r\n     *\r\n     * @param {node|jQuery|string} node Identifier for the element(s) to attach the\r\n     *   listener to. This can take the form of a single DOM node, a jQuery\r\n     *   collection of nodes or a jQuery selector which will identify the node(s).\r\n     * @param {integer} column the column that a click on this node will sort on\r\n     * @param {function} [callback] callback function when sort is run\r\n     * @returns {DataTables.Api} this\r\n     */\r\n    _api_register( 'order.listener()', function ( node, column, callback ) {\r\n        return this.iterator( 'table', function ( settings ) {\r\n            _fnSortAttachListener( settings, node, column, callback );\r\n        } );\r\n    } );\r\n\r\n\r\n    _api_register( 'order.fixed()', function ( set ) {\r\n        if ( ! set ) {\r\n            var ctx = this.context;\r\n            var fixed = ctx.length ?\r\n                ctx[0].aaSortingFixed :\r\n                undefined;\r\n\r\n            return $.isArray( fixed ) ?\r\n            { pre: fixed } :\r\n                fixed;\r\n        }\r\n\r\n        return this.iterator( 'table', function ( settings ) {\r\n            settings.aaSortingFixed = $.extend( true, {}, set );\r\n        } );\r\n    } );\r\n\r\n\r\n    // Order by the selected column(s)\r\n    _api_register( [\r\n        'columns().order()',\r\n        'column().order()'\r\n    ], function ( dir ) {\r\n        var that = this;\r\n\r\n        return this.iterator( 'table', function ( settings, i ) {\r\n            var sort = [];\r\n\r\n            $.each( that[i], function (j, col) {\r\n                sort.push( [ col, dir ] );\r\n            } );\r\n\r\n            settings.aaSorting = sort;\r\n        } );\r\n    } );\r\n\r\n\r\n\r\n    _api_register( 'search()', function ( input, regex, smart, caseInsen ) {\r\n        var ctx = this.context;\r\n\r\n        if ( input === undefined ) {\r\n            // get\r\n            return ctx.length !== 0 ?\r\n                ctx[0].oPreviousSearch.sSearch :\r\n                undefined;\r\n        }\r\n\r\n        // set\r\n        return this.iterator( 'table', function ( settings ) {\r\n            if ( ! settings.oFeatures.bFilter ) {\r\n                return;\r\n            }\r\n\r\n            _fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\r\n                \"sSearch\": input+\"\",\r\n                \"bRegex\":  regex === null ? false : regex,\r\n                \"bSmart\":  smart === null ? true  : smart,\r\n                \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n            } ), 1 );\r\n        } );\r\n    } );\r\n\r\n\r\n    _api_registerPlural(\r\n        'columns().search()',\r\n        'column().search()',\r\n        function ( input, regex, smart, caseInsen ) {\r\n            return this.iterator( 'column', function ( settings, column ) {\r\n                var preSearch = settings.aoPreSearchCols;\r\n\r\n                if ( input === undefined ) {\r\n                    // get\r\n                    return preSearch[ column ].sSearch;\r\n                }\r\n\r\n                // set\r\n                if ( ! settings.oFeatures.bFilter ) {\r\n                    return;\r\n                }\r\n\r\n                $.extend( preSearch[ column ], {\r\n                    \"sSearch\": input+\"\",\r\n                    \"bRegex\":  regex === null ? false : regex,\r\n                    \"bSmart\":  smart === null ? true  : smart,\r\n                    \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n                } );\r\n\r\n                _fnFilterComplete( settings, settings.oPreviousSearch, 1 );\r\n            } );\r\n        }\r\n    );\r\n\r\n    /*\r\n     * State API methods\r\n     */\r\n\r\n    _api_register( 'state()', function () {\r\n        return this.context.length ?\r\n            this.context[0].oSavedState :\r\n            null;\r\n    } );\r\n\r\n\r\n    _api_register( 'state.clear()', function () {\r\n        return this.iterator( 'table', function ( settings ) {\r\n            // Save an empty object\r\n            settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\r\n        } );\r\n    } );\r\n\r\n\r\n    _api_register( 'state.loaded()', function () {\r\n        return this.context.length ?\r\n            this.context[0].oLoadedState :\r\n            null;\r\n    } );\r\n\r\n\r\n    _api_register( 'state.save()', function () {\r\n        return this.iterator( 'table', function ( settings ) {\r\n            _fnSaveState( settings );\r\n        } );\r\n    } );\r\n\r\n\r\n\r\n    /**\r\n     * Provide a common method for plug-ins to check the version of DataTables being\r\n     * used, in order to ensure compatibility.\r\n     *\r\n     *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\r\n     *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\r\n     *  @returns {boolean} true if this version of DataTables is greater or equal to\r\n     *    the required version, or false if this version of DataTales is not\r\n     *    suitable\r\n     *  @static\r\n     *  @dtopt API-Static\r\n     *\r\n     *  @example\r\n     *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\r\n     */\r\n    DataTable.versionCheck = DataTable.fnVersionCheck = function( version )\r\n    {\r\n        var aThis = DataTable.version.split('.');\r\n        var aThat = version.split('.');\r\n        var iThis, iThat;\r\n\r\n        for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\r\n            iThis = parseInt( aThis[i], 10 ) || 0;\r\n            iThat = parseInt( aThat[i], 10 ) || 0;\r\n\r\n            // Parts are the same, keep comparing\r\n            if (iThis === iThat) {\r\n                continue;\r\n            }\r\n\r\n            // Parts are different, return immediately\r\n            return iThis > iThat;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n    /**\r\n     * Check if a `<table>` node is a DataTable table already or not.\r\n     *\r\n     *  @param {node|jquery|string} table Table node, jQuery object or jQuery\r\n     *      selector for the table to test. Note that if more than more than one\r\n     *      table is passed on, only the first will be checked\r\n     *  @returns {boolean} true the table given is a DataTable, or false otherwise\r\n     *  @static\r\n     *  @dtopt API-Static\r\n     *\r\n     *  @example\r\n     *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\r\n\t *      $('#example').dataTable();\r\n\t *    }\r\n     */\r\n    DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\r\n    {\r\n        var t = $(table).get(0);\r\n        var is = false;\r\n\r\n        $.each( DataTable.settings, function (i, o) {\r\n            var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\r\n            var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\r\n\r\n            if ( o.nTable === t || head === t || foot === t ) {\r\n                is = true;\r\n            }\r\n        } );\r\n\r\n        return is;\r\n    };\r\n\r\n\r\n    /**\r\n     * Get all DataTable tables that have been initialised - optionally you can\r\n     * select to get only currently visible tables.\r\n     *\r\n     *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\r\n     *    or visible tables only.\r\n     *  @returns {array} Array of `table` nodes (not DataTable instances) which are\r\n     *    DataTables\r\n     *  @static\r\n     *  @dtopt API-Static\r\n     *\r\n     *  @example\r\n     *    $.each( $.fn.dataTable.tables(true), function () {\r\n\t *      $(table).DataTable().columns.adjust();\r\n\t *    } );\r\n     */\r\n    DataTable.tables = DataTable.fnTables = function ( visible )\r\n    {\r\n        var api = false;\r\n\r\n        if ( $.isPlainObject( visible ) ) {\r\n            api = visible.api;\r\n            visible = visible.visible;\r\n        }\r\n\r\n        var a = $.map( DataTable.settings, function (o) {\r\n            if ( !visible || (visible && $(o.nTable).is(':visible')) ) {\r\n                return o.nTable;\r\n            }\r\n        } );\r\n\r\n        return api ?\r\n            new _Api( a ) :\r\n            a;\r\n    };\r\n\r\n\r\n    /**\r\n     * Convert from camel case parameters to Hungarian notation. This is made public\r\n     * for the extensions to provide the same ability as DataTables core to accept\r\n     * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\r\n     * parameters.\r\n     *\r\n     *  @param {object} src The model object which holds all parameters that can be\r\n     *    mapped.\r\n     *  @param {object} user The object to convert from camel case to Hungarian.\r\n     *  @param {boolean} force When set to `true`, properties which already have a\r\n     *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n     *    won't be.\r\n     */\r\n    DataTable.camelToHungarian = _fnCamelToHungarian;\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    _api_register( '$()', function ( selector, opts ) {\r\n        var\r\n            rows   = this.rows( opts ).nodes(), // Get all rows\r\n            jqRows = $(rows);\r\n\r\n        return $( [].concat(\r\n            jqRows.filter( selector ).toArray(),\r\n            jqRows.find( selector ).toArray()\r\n        ) );\r\n    } );\r\n\r\n\r\n    // jQuery functions to operate on the tables\r\n    $.each( [ 'on', 'one', 'off' ], function (i, key) {\r\n        _api_register( key+'()', function ( /* event, handler */ ) {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            // Add the `dt` namespace automatically if it isn't already present\r\n            if ( ! args[0].match(/\\.dt\\b/) ) {\r\n                args[0] += '.dt';\r\n            }\r\n\r\n            var inst = $( this.tables().nodes() );\r\n            inst[key].apply( inst, args );\r\n            return this;\r\n        } );\r\n    } );\r\n\r\n\r\n    _api_register( 'clear()', function () {\r\n        return this.iterator( 'table', function ( settings ) {\r\n            _fnClearTable( settings );\r\n        } );\r\n    } );\r\n\r\n\r\n    _api_register( 'settings()', function () {\r\n        return new _Api( this.context, this.context );\r\n    } );\r\n\r\n\r\n    _api_register( 'init()', function () {\r\n        var ctx = this.context;\r\n        return ctx.length ? ctx[0].oInit : null;\r\n    } );\r\n\r\n\r\n    _api_register( 'data()', function () {\r\n        return this.iterator( 'table', function ( settings ) {\r\n            return _pluck( settings.aoData, '_aData' );\r\n        } ).flatten();\r\n    } );\r\n\r\n\r\n    _api_register( 'destroy()', function ( remove ) {\r\n        remove = remove || false;\r\n\r\n        return this.iterator( 'table', function ( settings ) {\r\n            var orig      = settings.nTableWrapper.parentNode;\r\n            var classes   = settings.oClasses;\r\n            var table     = settings.nTable;\r\n            var tbody     = settings.nTBody;\r\n            var thead     = settings.nTHead;\r\n            var tfoot     = settings.nTFoot;\r\n            var jqTable   = $(table);\r\n            var jqTbody   = $(tbody);\r\n            var jqWrapper = $(settings.nTableWrapper);\r\n            var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\r\n            var i, ien;\r\n\r\n            // Flag to note that the table is currently being destroyed - no action\r\n            // should be taken\r\n            settings.bDestroying = true;\r\n\r\n            // Fire off the destroy callbacks for plug-ins etc\r\n            _fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\r\n\r\n            // If not being removed from the document, make all columns visible\r\n            if ( ! remove ) {\r\n                new _Api( settings ).columns().visible( true );\r\n            }\r\n\r\n            // Blitz all `DT` namespaced events (these are internal events, the\r\n            // lowercase, `dt` events are user subscribed and they are responsible\r\n            // for removing them\r\n            jqWrapper.unbind('.DT').find(':not(tbody *)').unbind('.DT');\r\n            $(window).unbind('.DT-'+settings.sInstance);\r\n\r\n            // When scrolling we had to break the table up - restore it\r\n            if ( table != thead.parentNode ) {\r\n                jqTable.children('thead').detach();\r\n                jqTable.append( thead );\r\n            }\r\n\r\n            if ( tfoot && table != tfoot.parentNode ) {\r\n                jqTable.children('tfoot').detach();\r\n                jqTable.append( tfoot );\r\n            }\r\n\r\n            settings.aaSorting = [];\r\n            settings.aaSortingFixed = [];\r\n            _fnSortingClasses( settings );\r\n\r\n            $( rows ).removeClass( settings.asStripeClasses.join(' ') );\r\n\r\n            $('th, td', thead).removeClass( classes.sSortable+' '+\r\n                classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\r\n            );\r\n\r\n            if ( settings.bJUI ) {\r\n                $('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();\r\n                $('th, td', thead).each( function () {\r\n                    var wrapper = $('div.'+classes.sSortJUIWrapper, this);\r\n                    $(this).append( wrapper.contents() );\r\n                    wrapper.detach();\r\n                } );\r\n            }\r\n\r\n            // Add the TR elements back into the table in their original order\r\n            jqTbody.children().detach();\r\n            jqTbody.append( rows );\r\n\r\n            // Remove the DataTables generated nodes, events and classes\r\n            var removedMethod = remove ? 'remove' : 'detach';\r\n            jqTable[ removedMethod ]();\r\n            jqWrapper[ removedMethod ]();\r\n\r\n            // If we need to reattach the table to the document\r\n            if ( ! remove && orig ) {\r\n                // insertBefore acts like appendChild if !arg[1]\r\n                orig.insertBefore( table, settings.nTableReinsertBefore );\r\n\r\n                // Restore the width of the original table - was read from the style property,\r\n                // so we can restore directly to that\r\n                jqTable\r\n                    .css( 'width', settings.sDestroyWidth )\r\n                    .removeClass( classes.sTable );\r\n\r\n                // If the were originally stripe classes - then we add them back here.\r\n                // Note this is not fool proof (for example if not all rows had stripe\r\n                // classes - but it's a good effort without getting carried away\r\n                ien = settings.asDestroyStripes.length;\r\n\r\n                if ( ien ) {\r\n                    jqTbody.children().each( function (i) {\r\n                        $(this).addClass( settings.asDestroyStripes[i % ien] );\r\n                    } );\r\n                }\r\n            }\r\n\r\n            /* Remove the settings object from the settings array */\r\n            var idx = $.inArray( settings, DataTable.settings );\r\n            if ( idx !== -1 ) {\r\n                DataTable.settings.splice( idx, 1 );\r\n            }\r\n        } );\r\n    } );\r\n\r\n\r\n    // Add the `every()` method for rows, columns and cells in a compact form\r\n    $.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\r\n        _api_register( type+'s().every()', function ( fn ) {\r\n            var opts = this.selector.opts;\r\n            var api = this;\r\n\r\n            return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\r\n                // Rows and columns:\r\n                //  arg1 - index\r\n                //  arg2 - table counter\r\n                //  arg3 - loop counter\r\n                //  arg4 - undefined\r\n                // Cells:\r\n                //  arg1 - row index\r\n                //  arg2 - column index\r\n                //  arg3 - table counter\r\n                //  arg4 - loop counter\r\n                fn.call(\r\n                    api[ type ](\r\n                        arg1,\r\n                        type==='cell' ? arg2 : opts,\r\n                        type==='cell' ? opts : undefined\r\n                    ),\r\n                    arg1, arg2, arg3, arg4\r\n                );\r\n            } );\r\n        } );\r\n    } );\r\n\r\n\r\n    // i18n method for extensions to be able to use the language object from the\r\n    // DataTable\r\n    _api_register( 'i18n()', function ( token, def, plural ) {\r\n        var ctx = this.context[0];\r\n        var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\r\n\r\n        if ( resolved === undefined ) {\r\n            resolved = def;\r\n        }\r\n\r\n        if ( plural !== undefined && $.isPlainObject( resolved ) ) {\r\n            resolved = resolved[ plural ] !== undefined ?\r\n                resolved[ plural ] :\r\n                resolved._;\r\n        }\r\n\r\n        return resolved.replace( '%d', plural ); // nb: plural might be undefined,\r\n    } );\r\n\r\n    /**\r\n     * Version string for plug-ins to check compatibility. Allowed format is\r\n     * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\r\n     * only for non-release builds. See http://semver.org/ for more information.\r\n     *  @member\r\n     *  @type string\r\n     *  @default Version number\r\n     */\r\n    DataTable.version = \"1.10.12\";\r\n\r\n    /**\r\n     * Private data store, containing all of the settings objects that are\r\n     * created for the tables on a given page.\r\n     *\r\n     * Note that the `DataTable.settings` object is aliased to\r\n     * `jQuery.fn.dataTableExt` through which it may be accessed and\r\n     * manipulated, or `jQuery.fn.dataTable.settings`.\r\n     *  @member\r\n     *  @type array\r\n     *  @default []\r\n     *  @private\r\n     */\r\n    DataTable.settings = [];\r\n\r\n    /**\r\n     * Object models container, for the various models that DataTables has\r\n     * available to it. These models define the objects that are used to hold\r\n     * the active state and configuration of the table.\r\n     *  @namespace\r\n     */\r\n    DataTable.models = {};\r\n\r\n\r\n\r\n    /**\r\n     * Template object for the way in which DataTables holds information about\r\n     * search information for the global filter and individual column filters.\r\n     *  @namespace\r\n     */\r\n    DataTable.models.oSearch = {\r\n        /**\r\n         * Flag to indicate if the filtering should be case insensitive or not\r\n         *  @type boolean\r\n         *  @default true\r\n         */\r\n        \"bCaseInsensitive\": true,\r\n\r\n        /**\r\n         * Applied search term\r\n         *  @type string\r\n         *  @default <i>Empty string</i>\r\n         */\r\n        \"sSearch\": \"\",\r\n\r\n        /**\r\n         * Flag to indicate if the search term should be interpreted as a\r\n         * regular expression (true) or not (false) and therefore and special\r\n         * regex characters escaped.\r\n         *  @type boolean\r\n         *  @default false\r\n         */\r\n        \"bRegex\": false,\r\n\r\n        /**\r\n         * Flag to indicate if DataTables is to use its smart filtering or not.\r\n         *  @type boolean\r\n         *  @default true\r\n         */\r\n        \"bSmart\": true\r\n    };\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Template object for the way in which DataTables holds information about\r\n     * each individual row. This is the object format used for the settings\r\n     * aoData array.\r\n     *  @namespace\r\n     */\r\n    DataTable.models.oRow = {\r\n        /**\r\n         * TR element for the row\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTr\": null,\r\n\r\n        /**\r\n         * Array of TD elements for each row. This is null until the row has been\r\n         * created.\r\n         *  @type array nodes\r\n         *  @default []\r\n         */\r\n        \"anCells\": null,\r\n\r\n        /**\r\n         * Data object from the original data source for the row. This is either\r\n         * an array if using the traditional form of DataTables, or an object if\r\n         * using mData options. The exact type will depend on the passed in\r\n         * data from the data source, or will be an array if using DOM a data\r\n         * source.\r\n         *  @type array|object\r\n         *  @default []\r\n         */\r\n        \"_aData\": [],\r\n\r\n        /**\r\n         * Sorting data cache - this array is ostensibly the same length as the\r\n         * number of columns (although each index is generated only as it is\r\n         * needed), and holds the data that is used for sorting each column in the\r\n         * row. We do this cache generation at the start of the sort in order that\r\n         * the formatting of the sort data need be done only once for each cell\r\n         * per sort. This array should not be read from or written to by anything\r\n         * other than the master sorting methods.\r\n         *  @type array\r\n         *  @default null\r\n         *  @private\r\n         */\r\n        \"_aSortData\": null,\r\n\r\n        /**\r\n         * Per cell filtering data cache. As per the sort data cache, used to\r\n         * increase the performance of the filtering in DataTables\r\n         *  @type array\r\n         *  @default null\r\n         *  @private\r\n         */\r\n        \"_aFilterData\": null,\r\n\r\n        /**\r\n         * Filtering data cache. This is the same as the cell filtering cache, but\r\n         * in this case a string rather than an array. This is easily computed with\r\n         * a join on `_aFilterData`, but is provided as a cache so the join isn't\r\n         * needed on every search (memory traded for performance)\r\n         *  @type array\r\n         *  @default null\r\n         *  @private\r\n         */\r\n        \"_sFilterRow\": null,\r\n\r\n        /**\r\n         * Cache of the class name that DataTables has applied to the row, so we\r\n         * can quickly look at this variable rather than needing to do a DOM check\r\n         * on className for the nTr property.\r\n         *  @type string\r\n         *  @default <i>Empty string</i>\r\n         *  @private\r\n         */\r\n        \"_sRowStripe\": \"\",\r\n\r\n        /**\r\n         * Denote if the original data source was from the DOM, or the data source\r\n         * object. This is used for invalidating data, so DataTables can\r\n         * automatically read data from the original source, unless uninstructed\r\n         * otherwise.\r\n         *  @type string\r\n         *  @default null\r\n         *  @private\r\n         */\r\n        \"src\": null,\r\n\r\n        /**\r\n         * Index in the aoData array. This saves an indexOf lookup when we have the\r\n         * object, but want to know the index\r\n         *  @type integer\r\n         *  @default -1\r\n         *  @private\r\n         */\r\n        \"idx\": -1\r\n    };\r\n\r\n\r\n    /**\r\n     * Template object for the column information object in DataTables. This object\r\n     * is held in the settings aoColumns array and contains all the information that\r\n     * DataTables needs about each individual column.\r\n     *\r\n     * Note that this object is related to {@link DataTable.defaults.column}\r\n     * but this one is the internal data store for DataTables's cache of columns.\r\n     * It should NOT be manipulated outside of DataTables. Any configuration should\r\n     * be done through the initialisation options.\r\n     *  @namespace\r\n     */\r\n    DataTable.models.oColumn = {\r\n        /**\r\n         * Column index. This could be worked out on-the-fly with $.inArray, but it\r\n         * is faster to just hold it as a variable\r\n         *  @type integer\r\n         *  @default null\r\n         */\r\n        \"idx\": null,\r\n\r\n        /**\r\n         * A list of the columns that sorting should occur on when this column\r\n         * is sorted. That this property is an array allows multi-column sorting\r\n         * to be defined for a column (for example first name / last name columns\r\n         * would benefit from this). The values are integers pointing to the\r\n         * columns to be sorted on (typically it will be a single integer pointing\r\n         * at itself, but that doesn't need to be the case).\r\n         *  @type array\r\n         */\r\n        \"aDataSort\": null,\r\n\r\n        /**\r\n         * Define the sorting directions that are applied to the column, in sequence\r\n         * as the column is repeatedly sorted upon - i.e. the first value is used\r\n         * as the sorting direction when the column if first sorted (clicked on).\r\n         * Sort it again (click again) and it will move on to the next index.\r\n         * Repeat until loop.\r\n         *  @type array\r\n         */\r\n        \"asSorting\": null,\r\n\r\n        /**\r\n         * Flag to indicate if the column is searchable, and thus should be included\r\n         * in the filtering or not.\r\n         *  @type boolean\r\n         */\r\n        \"bSearchable\": null,\r\n\r\n        /**\r\n         * Flag to indicate if the column is sortable or not.\r\n         *  @type boolean\r\n         */\r\n        \"bSortable\": null,\r\n\r\n        /**\r\n         * Flag to indicate if the column is currently visible in the table or not\r\n         *  @type boolean\r\n         */\r\n        \"bVisible\": null,\r\n\r\n        /**\r\n         * Store for manual type assignment using the `column.type` option. This\r\n         * is held in store so we can manipulate the column's `sType` property.\r\n         *  @type string\r\n         *  @default null\r\n         *  @private\r\n         */\r\n        \"_sManualType\": null,\r\n\r\n        /**\r\n         * Flag to indicate if HTML5 data attributes should be used as the data\r\n         * source for filtering or sorting. True is either are.\r\n         *  @type boolean\r\n         *  @default false\r\n         *  @private\r\n         */\r\n        \"_bAttrSrc\": false,\r\n\r\n        /**\r\n         * Developer definable function that is called whenever a cell is created (Ajax source,\r\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n         * allowing you to modify the DOM element (add background colour for example) when the\r\n         * element is available.\r\n         *  @type function\r\n         *  @param {element} nTd The TD node that has been created\r\n         *  @param {*} sData The Data for the cell\r\n         *  @param {array|object} oData The data for the whole row\r\n         *  @param {int} iRow The row index for the aoData data store\r\n         *  @default null\r\n         */\r\n        \"fnCreatedCell\": null,\r\n\r\n        /**\r\n         * Function to get data from a cell in a column. You should <b>never</b>\r\n         * access data directly through _aData internally in DataTables - always use\r\n         * the method attached to this property. It allows mData to function as\r\n         * required. This function is automatically assigned by the column\r\n         * initialisation method\r\n         *  @type function\r\n         *  @param {array|object} oData The data array/object for the array\r\n         *    (i.e. aoData[]._aData)\r\n         *  @param {string} sSpecific The specific data type you want to get -\r\n         *    'display', 'type' 'filter' 'sort'\r\n         *  @returns {*} The data for the cell from the given row's data\r\n         *  @default null\r\n         */\r\n        \"fnGetData\": null,\r\n\r\n        /**\r\n         * Function to set data for a cell in the column. You should <b>never</b>\r\n         * set the data directly to _aData internally in DataTables - always use\r\n         * this method. It allows mData to function as required. This function\r\n         * is automatically assigned by the column initialisation method\r\n         *  @type function\r\n         *  @param {array|object} oData The data array/object for the array\r\n         *    (i.e. aoData[]._aData)\r\n         *  @param {*} sValue Value to set\r\n         *  @default null\r\n         */\r\n        \"fnSetData\": null,\r\n\r\n        /**\r\n         * Property to read the value for the cells in the column from the data\r\n         * source array / object. If null, then the default content is used, if a\r\n         * function is given then the return from the function is used.\r\n         *  @type function|int|string|null\r\n         *  @default null\r\n         */\r\n        \"mData\": null,\r\n\r\n        /**\r\n         * Partner property to mData which is used (only when defined) to get\r\n         * the data - i.e. it is basically the same as mData, but without the\r\n         * 'set' option, and also the data fed to it is the result from mData.\r\n         * This is the rendering method to match the data method of mData.\r\n         *  @type function|int|string|null\r\n         *  @default null\r\n         */\r\n        \"mRender\": null,\r\n\r\n        /**\r\n         * Unique header TH/TD element for this column - this is what the sorting\r\n         * listener is attached to (if sorting is enabled.)\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTh\": null,\r\n\r\n        /**\r\n         * Unique footer TH/TD element for this column (if there is one). Not used\r\n         * in DataTables as such, but can be used for plug-ins to reference the\r\n         * footer for each column.\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTf\": null,\r\n\r\n        /**\r\n         * The class to apply to all TD elements in the table's TBODY for the column\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sClass\": null,\r\n\r\n        /**\r\n         * When DataTables calculates the column widths to assign to each column,\r\n         * it finds the longest string in each column and then constructs a\r\n         * temporary table and reads the widths from that. The problem with this\r\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n         * string - thus the calculation can go wrong (doing it properly and putting\r\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n         * a \"work around\" we provide this option. It will append its value to the\r\n         * text that is found to be the longest string for the column - i.e. padding.\r\n         *  @type string\r\n         */\r\n        \"sContentPadding\": null,\r\n\r\n        /**\r\n         * Allows a default value to be given for a column's data, and will be used\r\n         * whenever a null data source is encountered (this can be because mData\r\n         * is set to null, or because the data source itself is null).\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sDefaultContent\": null,\r\n\r\n        /**\r\n         * Name for the column, allowing reference to the column by name as well as\r\n         * by index (needs a lookup to work by name).\r\n         *  @type string\r\n         */\r\n        \"sName\": null,\r\n\r\n        /**\r\n         * Custom sorting data type - defines which of the available plug-ins in\r\n         * afnSortData the custom sorting will use - if any is defined.\r\n         *  @type string\r\n         *  @default std\r\n         */\r\n        \"sSortDataType\": 'std',\r\n\r\n        /**\r\n         * Class to be applied to the header element when sorting on this column\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sSortingClass\": null,\r\n\r\n        /**\r\n         * Class to be applied to the header element when sorting on this column -\r\n         * when jQuery UI theming is used.\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sSortingClassJUI\": null,\r\n\r\n        /**\r\n         * Title of the column - what is seen in the TH element (nTh).\r\n         *  @type string\r\n         */\r\n        \"sTitle\": null,\r\n\r\n        /**\r\n         * Column sorting and filtering type\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sType\": null,\r\n\r\n        /**\r\n         * Width of the column\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sWidth\": null,\r\n\r\n        /**\r\n         * Width of the column when it was first \"encountered\"\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sWidthOrig\": null\r\n    };\r\n\r\n\r\n    /*\r\n     * Developer note: The properties of the object below are given in Hungarian\r\n     * notation, that was used as the interface for DataTables prior to v1.10, however\r\n     * from v1.10 onwards the primary interface is camel case. In order to avoid\r\n     * breaking backwards compatibility utterly with this change, the Hungarian\r\n     * version is still, internally the primary interface, but is is not documented\r\n     * - hence the @name tags in each doc comment. This allows a Javascript function\r\n     * to create a map from Hungarian notation to camel case (going the other direction\r\n     * would require each property to be listed, which would at around 3K to the size\r\n     * of DataTables, while this method is about a 0.5K hit.\r\n     *\r\n     * Ultimately this does pave the way for Hungarian notation to be dropped\r\n     * completely, but that is a massive amount of work and will break current\r\n     * installs (therefore is on-hold until v2).\r\n     */\r\n\r\n    /**\r\n     * Initialisation options that can be given to DataTables at initialisation\r\n     * time.\r\n     *  @namespace\r\n     */\r\n    DataTable.defaults = {\r\n        /**\r\n         * An array of data to use for the table, passed in at initialisation which\r\n         * will be used in preference to any data which is already in the DOM. This is\r\n         * particularly useful for constructing tables purely in Javascript, for\r\n         * example with a custom Ajax call.\r\n         *  @type array\r\n         *  @default null\r\n         *\r\n         *  @dtopt Option\r\n         *  @name DataTable.defaults.data\r\n         *\r\n         *  @example\r\n         *    // Using a 2D array data source\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"data\": [\r\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\r\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\r\n\t\t *        ],\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"title\": \"Engine\" },\r\n\t\t *          { \"title\": \"Browser\" },\r\n\t\t *          { \"title\": \"Platform\" },\r\n\t\t *          { \"title\": \"Version\" },\r\n\t\t *          { \"title\": \"Grade\" }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using an array of objects as a data source (`data`)\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"data\": [\r\n\t\t *          {\r\n\t\t *            \"engine\":   \"Trident\",\r\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\r\n\t\t *            \"platform\": \"Win 95+\",\r\n\t\t *            \"version\":  4,\r\n\t\t *            \"grade\":    \"X\"\r\n\t\t *          },\r\n\t\t *          {\r\n\t\t *            \"engine\":   \"Trident\",\r\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\r\n\t\t *            \"platform\": \"Win 95+\",\r\n\t\t *            \"version\":  5,\r\n\t\t *            \"grade\":    \"C\"\r\n\t\t *          }\r\n\t\t *        ],\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\r\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\r\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\r\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\r\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"aaData\": null,\r\n\r\n\r\n        /**\r\n         * If ordering is enabled, then DataTables will perform a first pass sort on\r\n         * initialisation. You can define which column(s) the sort is performed\r\n         * upon, and the sorting direction, with this variable. The `sorting` array\r\n         * should contain an array for each column to be sorted initially containing\r\n         * the column's index and a direction string ('asc' or 'desc').\r\n         *  @type array\r\n         *  @default [[0,'asc']]\r\n         *\r\n         *  @dtopt Option\r\n         *  @name DataTable.defaults.order\r\n         *\r\n         *  @example\r\n         *    // Sort by 3rd column first, and then 4th column\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *    // No initial sorting\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"order\": []\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"aaSorting\": [[0,'asc']],\r\n\r\n\r\n        /**\r\n         * This parameter is basically identical to the `sorting` parameter, but\r\n         * cannot be overridden by user interaction with the table. What this means\r\n         * is that you could have a column (visible or hidden) which the sorting\r\n         * will always be forced on first - any sorting after that (from the user)\r\n         * will then be performed as required. This can be useful for grouping rows\r\n         * together.\r\n         *  @type array\r\n         *  @default null\r\n         *\r\n         *  @dtopt Option\r\n         *  @name DataTable.defaults.orderFixed\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"orderFixed\": [[0,'asc']]\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"aaSortingFixed\": [],\r\n\r\n\r\n        /**\r\n         * DataTables can be instructed to load data to display in the table from a\r\n         * Ajax source. This option defines how that Ajax call is made and where to.\r\n         *\r\n         * The `ajax` property has three different modes of operation, depending on\r\n         * how it is defined. These are:\r\n         *\r\n         * * `string` - Set the URL from where the data should be loaded from.\r\n         * * `object` - Define properties for `jQuery.ajax`.\r\n         * * `function` - Custom data get function\r\n         *\r\n         * `string`\r\n         * --------\r\n         *\r\n         * As a string, the `ajax` property simply defines the URL from which\r\n         * DataTables will load data.\r\n         *\r\n         * `object`\r\n         * --------\r\n         *\r\n         * As an object, the parameters in the object are passed to\r\n         * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\r\n         * of the Ajax request. DataTables has a number of default parameters which\r\n         * you can override using this option. Please refer to the jQuery\r\n         * documentation for a full description of the options available, although\r\n         * the following parameters provide additional options in DataTables or\r\n         * require special consideration:\r\n         *\r\n         * * `data` - As with jQuery, `data` can be provided as an object, but it\r\n         *   can also be used as a function to manipulate the data DataTables sends\r\n         *   to the server. The function takes a single parameter, an object of\r\n         *   parameters with the values that DataTables has readied for sending. An\r\n         *   object may be returned which will be merged into the DataTables\r\n         *   defaults, or you can add the items to the object that was passed in and\r\n         *   not return anything from the function. This supersedes `fnServerParams`\r\n         *   from DataTables 1.9-.\r\n         *\r\n         * * `dataSrc` - By default DataTables will look for the property `data` (or\r\n         *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\r\n         *   from an Ajax source or for server-side processing - this parameter\r\n         *   allows that property to be changed. You can use Javascript dotted\r\n         *   object notation to get a data source for multiple levels of nesting, or\r\n         *   it my be used as a function. As a function it takes a single parameter,\r\n         *   the JSON returned from the server, which can be manipulated as\r\n         *   required, with the returned value being that used by DataTables as the\r\n         *   data source for the table. This supersedes `sAjaxDataProp` from\r\n         *   DataTables 1.9-.\r\n         *\r\n         * * `success` - Should not be overridden it is used internally in\r\n         *   DataTables. To manipulate / transform the data returned by the server\r\n         *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\r\n         *\r\n         * `function`\r\n         * ----------\r\n         *\r\n         * As a function, making the Ajax call is left up to yourself allowing\r\n         * complete control of the Ajax request. Indeed, if desired, a method other\r\n         * than Ajax could be used to obtain the required data, such as Web storage\r\n         * or an AIR database.\r\n         *\r\n         * The function is given four parameters and no return is required. The\r\n         * parameters are:\r\n         *\r\n         * 1. _object_ - Data to send to the server\r\n         * 2. _function_ - Callback function that must be executed when the required\r\n         *    data has been obtained. That data should be passed into the callback\r\n         *    as the only parameter\r\n         * 3. _object_ - DataTables settings object for the table\r\n         *\r\n         * Note that this supersedes `fnServerData` from DataTables 1.9-.\r\n         *\r\n         *  @type string|object|function\r\n         *  @default null\r\n         *\r\n         *  @dtopt Option\r\n         *  @name DataTable.defaults.ajax\r\n         *  @since 1.10.0\r\n         *\r\n         * @example\r\n         *   // Get JSON data from a file via Ajax.\r\n         *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\r\n         *   $('#example').dataTable( {\r\n\t\t *     \"ajax\": \"data.json\"\r\n\t\t *   } );\r\n         *\r\n         * @example\r\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to change\r\n         *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\r\n         *   $('#example').dataTable( {\r\n\t\t *     \"ajax\": {\r\n\t\t *       \"url\": \"data.json\",\r\n\t\t *       \"dataSrc\": \"tableData\"\r\n\t\t *     }\r\n\t\t *   } );\r\n         *\r\n         * @example\r\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\r\n         *   // from a plain array rather than an array in an object\r\n         *   $('#example').dataTable( {\r\n\t\t *     \"ajax\": {\r\n\t\t *       \"url\": \"data.json\",\r\n\t\t *       \"dataSrc\": \"\"\r\n\t\t *     }\r\n\t\t *   } );\r\n         *\r\n         * @example\r\n         *   // Manipulate the data returned from the server - add a link to data\r\n         *   // (note this can, should, be done using `render` for the column - this\r\n         *   // is just a simple example of how the data can be manipulated).\r\n         *   $('#example').dataTable( {\r\n\t\t *     \"ajax\": {\r\n\t\t *       \"url\": \"data.json\",\r\n\t\t *       \"dataSrc\": function ( json ) {\r\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\r\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\r\n\t\t *         }\r\n\t\t *         return json;\r\n\t\t *       }\r\n\t\t *     }\r\n\t\t *   } );\r\n         *\r\n         * @example\r\n         *   // Add data to the request\r\n         *   $('#example').dataTable( {\r\n\t\t *     \"ajax\": {\r\n\t\t *       \"url\": \"data.json\",\r\n\t\t *       \"data\": function ( d ) {\r\n\t\t *         return {\r\n\t\t *           \"extra_search\": $('#extra').val()\r\n\t\t *         };\r\n\t\t *       }\r\n\t\t *     }\r\n\t\t *   } );\r\n         *\r\n         * @example\r\n         *   // Send request as POST\r\n         *   $('#example').dataTable( {\r\n\t\t *     \"ajax\": {\r\n\t\t *       \"url\": \"data.json\",\r\n\t\t *       \"type\": \"POST\"\r\n\t\t *     }\r\n\t\t *   } );\r\n         *\r\n         * @example\r\n         *   // Get the data from localStorage (could interface with a form for\r\n         *   // adding, editing and removing rows).\r\n         *   $('#example').dataTable( {\r\n\t\t *     \"ajax\": function (data, callback, settings) {\r\n\t\t *       callback(\r\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\r\n\t\t *       );\r\n\t\t *     }\r\n\t\t *   } );\r\n         */\r\n        \"ajax\": null,\r\n\r\n\r\n        /**\r\n         * This parameter allows you to readily specify the entries in the length drop\r\n         * down menu that DataTables shows when pagination is enabled. It can be\r\n         * either a 1D array of options which will be used for both the displayed\r\n         * option and the value, or a 2D array which will use the array in the first\r\n         * position as the value, and the array in the second position as the\r\n         * displayed options (useful for language strings such as 'All').\r\n         *\r\n         * Note that the `pageLength` property will be automatically set to the\r\n         * first value given in this array, unless `pageLength` is also provided.\r\n         *  @type array\r\n         *  @default [ 10, 25, 50, 100 ]\r\n         *\r\n         *  @dtopt Option\r\n         *  @name DataTable.defaults.lengthMenu\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"aLengthMenu\": [ 10, 25, 50, 100 ],\r\n\r\n\r\n        /**\r\n         * The `columns` option in the initialisation parameter allows you to define\r\n         * details about the way individual columns behave. For a full list of\r\n         * column options that can be set, please see\r\n         * {@link DataTable.defaults.column}. Note that if you use `columns` to\r\n         * define your columns, you must have an entry in the array for every single\r\n         * column that you have in your table (these can be null if you don't which\r\n         * to specify any options).\r\n         *  @member\r\n         *\r\n         *  @name DataTable.defaults.column\r\n         */\r\n        \"aoColumns\": null,\r\n\r\n        /**\r\n         * Very similar to `columns`, `columnDefs` allows you to target a specific\r\n         * column, multiple columns, or all columns, using the `targets` property of\r\n         * each object in the array. This allows great flexibility when creating\r\n         * tables, as the `columnDefs` arrays can be of any length, targeting the\r\n         * columns you specifically want. `columnDefs` may use any of the column\r\n         * options available: {@link DataTable.defaults.column}, but it _must_\r\n         * have `targets` defined in each object in the array. Values in the `targets`\r\n         * array may be:\r\n         *   <ul>\r\n         *     <li>a string - class name will be matched on the TH for the column</li>\r\n         *     <li>0 or a positive integer - column index counting from the left</li>\r\n         *     <li>a negative integer - column index counting from the right</li>\r\n         *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\r\n         *   </ul>\r\n         *  @member\r\n         *\r\n         *  @name DataTable.defaults.columnDefs\r\n         */\r\n        \"aoColumnDefs\": null,\r\n\r\n\r\n        /**\r\n         * Basically the same as `search`, this parameter defines the individual column\r\n         * filtering state at initialisation time. The array must be of the same size\r\n         * as the number of columns, and each element be an object with the parameters\r\n         * `search` and `escapeRegex` (the latter is optional). 'null' is also\r\n         * accepted and the default will be used.\r\n         *  @type array\r\n         *  @default []\r\n         *\r\n         *  @dtopt Option\r\n         *  @name DataTable.defaults.searchCols\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"searchCols\": [\r\n\t\t *          null,\r\n\t\t *          { \"search\": \"My filter\" },\r\n\t\t *          null,\r\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"aoSearchCols\": [],\r\n\r\n\r\n        /**\r\n         * An array of CSS classes that should be applied to displayed rows. This\r\n         * array may be of any length, and DataTables will apply each class\r\n         * sequentially, looping when required.\r\n         *  @type array\r\n         *  @default null <i>Will take the values determined by the `oClasses.stripe*`\r\n         *    options</i>\r\n         *\r\n         *  @dtopt Option\r\n         *  @name DataTable.defaults.stripeClasses\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"asStripeClasses\": null,\r\n\r\n\r\n        /**\r\n         * Enable or disable automatic column width calculation. This can be disabled\r\n         * as an optimisation (it takes some time to calculate the widths) if the\r\n         * tables widths are passed in using `columns`.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.autoWidth\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"autoWidth\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bAutoWidth\": true,\r\n\r\n\r\n        /**\r\n         * Deferred rendering can provide DataTables with a huge speed boost when you\r\n         * are using an Ajax or JS data source for the table. This option, when set to\r\n         * true, will cause DataTables to defer the creation of the table elements for\r\n         * each row until they are needed for a draw - saving a significant amount of\r\n         * time.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.deferRender\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"ajax\": \"sources/arrays.txt\",\r\n\t\t *        \"deferRender\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bDeferRender\": false,\r\n\r\n\r\n        /**\r\n         * Replace a DataTable which matches the given selector and replace it with\r\n         * one which has the properties of the new initialisation object passed. If no\r\n         * table matches the selector, then the new DataTable will be constructed as\r\n         * per normal.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.destroy\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"srollY\": \"200px\",\r\n\t\t *        \"paginate\": false\r\n\t\t *      } );\r\n\t\t *\r\n\t\t *      // Some time later....\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"filter\": false,\r\n\t\t *        \"destroy\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bDestroy\": false,\r\n\r\n\r\n        /**\r\n         * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\n         * that it allows the end user to input multiple words (space separated) and\r\n         * will match a row containing those words, even if not in the order that was\r\n         * specified (this allow matching across multiple columns). Note that if you\r\n         * wish to use filtering in DataTables this must remain 'true' - to remove the\r\n         * default filtering input box and retain filtering abilities, please use\r\n         * {@link DataTable.defaults.dom}.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.searching\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"searching\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bFilter\": true,\r\n\r\n\r\n        /**\r\n         * Enable or disable the table information display. This shows information\r\n         * about the data that is currently visible on the page, including information\r\n         * about filtered data if that action is being performed.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.info\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"info\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bInfo\": true,\r\n\r\n\r\n        /**\r\n         * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\r\n         * slightly different and additional mark-up from what DataTables has\r\n         * traditionally used).\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.jQueryUI\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"jQueryUI\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bJQueryUI\": false,\r\n\r\n\r\n        /**\r\n         * Allows the end user to select the size of a formatted page from a select\r\n         * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.lengthChange\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"lengthChange\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bLengthChange\": true,\r\n\r\n\r\n        /**\r\n         * Enable or disable pagination.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.paging\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"paging\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bPaginate\": true,\r\n\r\n\r\n        /**\r\n         * Enable or disable the display of a 'processing' indicator when the table is\r\n         * being processed (e.g. a sort). This is particularly useful for tables with\r\n         * large amounts of data where it can take a noticeable amount of time to sort\r\n         * the entries.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.processing\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"processing\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bProcessing\": false,\r\n\r\n\r\n        /**\r\n         * Retrieve the DataTables object for the given selector. Note that if the\r\n         * table has already been initialised, this parameter will cause DataTables\r\n         * to simply return the object that has already been set up - it will not take\r\n         * account of any changes you might have made to the initialisation object\r\n         * passed to DataTables (setting this parameter to true is an acknowledgement\r\n         * that you understand this). `destroy` can be used to reinitialise a table if\r\n         * you need.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.retrieve\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      initTable();\r\n\t\t *      tableActions();\r\n\t\t *    } );\r\n         *\r\n         *    function initTable ()\r\n         *    {\r\n\t\t *      return $('#example').dataTable( {\r\n\t\t *        \"scrollY\": \"200px\",\r\n\t\t *        \"paginate\": false,\r\n\t\t *        \"retrieve\": true\r\n\t\t *      } );\r\n\t\t *    }\r\n         *\r\n         *    function tableActions ()\r\n         *    {\r\n\t\t *      var table = initTable();\r\n\t\t *      // perform API operations with oTable\r\n\t\t *    }\r\n         */\r\n        \"bRetrieve\": false,\r\n\r\n\r\n        /**\r\n         * When vertical (y) scrolling is enabled, DataTables will force the height of\r\n         * the table's viewport to the given height at all times (useful for layout).\r\n         * However, this can look odd when filtering data down to a small data set,\r\n         * and the footer is left \"floating\" further down. This parameter (when\r\n         * enabled) will cause DataTables to collapse the table's viewport down when\r\n         * the result set will fit within the given Y height.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.scrollCollapse\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"scrollY\": \"200\",\r\n\t\t *        \"scrollCollapse\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bScrollCollapse\": false,\r\n\r\n\r\n        /**\r\n         * Configure DataTables to use server-side processing. Note that the\r\n         * `ajax` parameter must also be given in order to give DataTables a\r\n         * source to obtain the required data for each draw.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Features\r\n         *  @dtopt Server-side\r\n         *  @name DataTable.defaults.serverSide\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"serverSide\": true,\r\n\t\t *        \"ajax\": \"xhr.php\"\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bServerSide\": false,\r\n\r\n\r\n        /**\r\n         * Enable or disable sorting of columns. Sorting of individual columns can be\r\n         * disabled by the `sortable` option for each column.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.ordering\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"ordering\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bSort\": true,\r\n\r\n\r\n        /**\r\n         * Enable or display DataTables' ability to sort multiple columns at the\r\n         * same time (activated by shift-click by the user).\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.orderMulti\r\n         *\r\n         *  @example\r\n         *    // Disable multiple column sorting ability\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"orderMulti\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bSortMulti\": true,\r\n\r\n\r\n        /**\r\n         * Allows control over whether DataTables should use the top (true) unique\r\n         * cell that is found for a single column, or the bottom (false - default).\r\n         * This is useful when using complex headers.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.orderCellsTop\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"orderCellsTop\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bSortCellsTop\": false,\r\n\r\n\r\n        /**\r\n         * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\r\n         * `sorting\\_3` to the columns which are currently being sorted on. This is\r\n         * presented as a feature switch as it can increase processing time (while\r\n         * classes are removed and added) so for large data sets you might want to\r\n         * turn this off.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.orderClasses\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"orderClasses\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bSortClasses\": true,\r\n\r\n\r\n        /**\r\n         * Enable or disable state saving. When enabled HTML5 `localStorage` will be\r\n         * used to save table display information such as pagination information,\r\n         * display length, filtering and sorting. As such when the end user reloads\r\n         * the page the display display will match what thy had previously set up.\r\n         *\r\n         * Due to the use of `localStorage` the default state saving is not supported\r\n         * in IE6 or 7. If state saving is required in those browsers, use\r\n         * `stateSaveCallback` to provide a storage solution such as cookies.\r\n         *  @type boolean\r\n         *  @default false\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.stateSave\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function () {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateSave\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"bStateSave\": false,\r\n\r\n\r\n        /**\r\n         * This function is called when a TR element is created (and all TD child\r\n         * elements have been inserted), or registered if using a DOM source, allowing\r\n         * manipulation of the TR element (adding classes etc).\r\n         *  @type function\r\n         *  @param {node} row \"TR\" element for the current row\r\n         *  @param {array} data Raw data array for this row\r\n         *  @param {int} dataIndex The index of this row in the internal aoData array\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.createdRow\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\r\n\t\t *          // Bold the grade for all 'A' grade browsers\r\n\t\t *          if ( data[4] == \"A\" )\r\n\t\t *          {\r\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t\t *          }\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnCreatedRow\": null,\r\n\r\n\r\n        /**\r\n         * This function is called on every 'draw' event, and allows you to\r\n         * dynamically modify any aspect you want about the created DOM.\r\n         *  @type function\r\n         *  @param {object} settings DataTables settings object\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.drawCallback\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"drawCallback\": function( settings ) {\r\n\t\t *          alert( 'DataTables has redrawn the table' );\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnDrawCallback\": null,\r\n\r\n\r\n        /**\r\n         * Identical to fnHeaderCallback() but for the table footer this function\r\n         * allows you to modify the table footer on every 'draw' event.\r\n         *  @type function\r\n         *  @param {node} foot \"TR\" element for the footer\r\n         *  @param {array} data Full table data (as derived from the original HTML)\r\n         *  @param {int} start Index for the current display starting point in the\r\n         *    display array\r\n         *  @param {int} end Index for the current display ending point in the\r\n         *    display array\r\n         *  @param {array int} display Index array to translate the visual position\r\n         *    to the full data array\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.footerCallback\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\r\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"fnFooterCallback\": null,\r\n\r\n\r\n        /**\r\n         * When rendering large numbers in the information element for the table\r\n         * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\r\n         * to have a comma separator for the 'thousands' units (e.g. 1 million is\r\n         * rendered as \"1,000,000\") to help readability for the end user. This\r\n         * function will override the default method DataTables uses.\r\n         *  @type function\r\n         *  @member\r\n         *  @param {int} toFormat number to be formatted\r\n         *  @returns {string} formatted string for DataTables to show the number\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.formatNumber\r\n         *\r\n         *  @example\r\n         *    // Format a number using a single quote for the separator (note that\r\n         *    // this can also be done with the language.thousands option)\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"formatNumber\": function ( toFormat ) {\r\n\t\t *          return toFormat.toString().replace(\r\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\r\n\t\t *          );\r\n\t\t *        };\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnFormatNumber\": function ( toFormat ) {\r\n            return toFormat.toString().replace(\r\n                /\\B(?=(\\d{3})+(?!\\d))/g,\r\n                this.oLanguage.sThousands\r\n            );\r\n        },\r\n\r\n\r\n        /**\r\n         * This function is called on every 'draw' event, and allows you to\r\n         * dynamically modify the header row. This can be used to calculate and\r\n         * display useful information about the table.\r\n         *  @type function\r\n         *  @param {node} head \"TR\" element for the header\r\n         *  @param {array} data Full table data (as derived from the original HTML)\r\n         *  @param {int} start Index for the current display starting point in the\r\n         *    display array\r\n         *  @param {int} end Index for the current display ending point in the\r\n         *    display array\r\n         *  @param {array int} display Index array to translate the visual position\r\n         *    to the full data array\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.headerCallback\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\r\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"fnHeaderCallback\": null,\r\n\r\n\r\n        /**\r\n         * The information element can be used to convey information about the current\r\n         * state of the table. Although the internationalisation options presented by\r\n         * DataTables are quite capable of dealing with most customisations, there may\r\n         * be times where you wish to customise the string further. This callback\r\n         * allows you to do exactly that.\r\n         *  @type function\r\n         *  @param {object} oSettings DataTables settings object\r\n         *  @param {int} start Starting position in data for the draw\r\n         *  @param {int} end End position in data for the draw\r\n         *  @param {int} max Total number of rows in the table (regardless of\r\n         *    filtering)\r\n         *  @param {int} total Total number of rows in the data set, after filtering\r\n         *  @param {string} pre The string that DataTables has formatted using it's\r\n         *    own rules\r\n         *  @returns {string} The string to be displayed in the information element.\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.infoCallback\r\n         *\r\n         *  @example\r\n         *    $('#example').dataTable( {\r\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\r\n\t\t *        return start +\" to \"+ end;\r\n\t\t *      }\r\n\t\t *    } );\r\n         */\r\n        \"fnInfoCallback\": null,\r\n\r\n\r\n        /**\r\n         * Called when the table has been initialised. Normally DataTables will\r\n         * initialise sequentially and there will be no need for this function,\r\n         * however, this does not hold true when using external language information\r\n         * since that is obtained using an async XHR call.\r\n         *  @type function\r\n         *  @param {object} settings DataTables settings object\r\n         *  @param {object} json The JSON object request from the server - only\r\n         *    present if client-side Ajax sourced data is used\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.initComplete\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"initComplete\": function(settings, json) {\r\n\t\t *          alert( 'DataTables has finished its initialisation.' );\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"fnInitComplete\": null,\r\n\r\n\r\n        /**\r\n         * Called at the very start of each table draw and can be used to cancel the\r\n         * draw by returning false, any other return (including undefined) results in\r\n         * the full draw occurring).\r\n         *  @type function\r\n         *  @param {object} settings DataTables settings object\r\n         *  @returns {boolean} False will cancel the draw, anything else (including no\r\n         *    return) will allow it to complete.\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.preDrawCallback\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"preDrawCallback\": function( settings ) {\r\n\t\t *          if ( $('#test').val() == 1 ) {\r\n\t\t *            return false;\r\n\t\t *          }\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnPreDrawCallback\": null,\r\n\r\n\r\n        /**\r\n         * This function allows you to 'post process' each row after it have been\r\n         * generated for each table draw, but before it is rendered on screen. This\r\n         * function might be used for setting the row class name etc.\r\n         *  @type function\r\n         *  @param {node} row \"TR\" element for the current row\r\n         *  @param {array} data Raw data array for this row\r\n         *  @param {int} displayIndex The display index for the current table draw\r\n         *  @param {int} displayIndexFull The index of the data in the full list of\r\n         *    rows (after filtering)\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.rowCallback\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\r\n\t\t *          // Bold the grade for all 'A' grade browsers\r\n\t\t *          if ( data[4] == \"A\" ) {\r\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t\t *          }\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnRowCallback\": null,\r\n\r\n\r\n        /**\r\n         * __Deprecated__ The functionality provided by this parameter has now been\r\n         * superseded by that provided through `ajax`, which should be used instead.\r\n         *\r\n         * This parameter allows you to override the default function which obtains\r\n         * the data from the server so something more suitable for your application.\r\n         * For example you could use POST data, or pull information from a Gears or\r\n         * AIR database.\r\n         *  @type function\r\n         *  @member\r\n         *  @param {string} source HTTP source to obtain the data from (`ajax`)\r\n         *  @param {array} data A key/value pair object containing the data to send\r\n         *    to the server\r\n         *  @param {function} callback to be called on completion of the data get\r\n         *    process that will draw the data on the page.\r\n         *  @param {object} settings DataTables settings object\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @dtopt Server-side\r\n         *  @name DataTable.defaults.serverData\r\n         *\r\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n         */\r\n        \"fnServerData\": null,\r\n\r\n\r\n        /**\r\n         * __Deprecated__ The functionality provided by this parameter has now been\r\n         * superseded by that provided through `ajax`, which should be used instead.\r\n         *\r\n         *  It is often useful to send extra data to the server when making an Ajax\r\n         * request - for example custom filtering information, and this callback\r\n         * function makes it trivial to send extra information to the server. The\r\n         * passed in parameter is the data set that has been constructed by\r\n         * DataTables, and you can add to this or modify it as you require.\r\n         *  @type function\r\n         *  @param {array} data Data array (array of objects which are name/value\r\n         *    pairs) that has been constructed by DataTables and will be sent to the\r\n         *    server. In the case of Ajax sourced data with server-side processing\r\n         *    this will be an empty array, for server-side processing there will be a\r\n         *    significant number of parameters!\r\n         *  @returns {undefined} Ensure that you modify the data array passed in,\r\n         *    as this is passed by reference.\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @dtopt Server-side\r\n         *  @name DataTable.defaults.serverParams\r\n         *\r\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n         */\r\n        \"fnServerParams\": null,\r\n\r\n\r\n        /**\r\n         * Load the table state. With this function you can define from where, and how, the\r\n         * state of a table is loaded. By default DataTables will load from `localStorage`\r\n         * but you might wish to use a server-side database or cookies.\r\n         *  @type function\r\n         *  @member\r\n         *  @param {object} settings DataTables settings object\r\n         *  @return {object} The DataTables state object to be loaded\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.stateLoadCallback\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateSave\": true,\r\n\t\t *        \"stateLoadCallback\": function (settings) {\r\n\t\t *          var o;\r\n\t\t *\r\n\t\t *          // Send an Ajax request to the server to get the data. Note that\r\n\t\t *          // this is a synchronous request.\r\n\t\t *          $.ajax( {\r\n\t\t *            \"url\": \"/state_load\",\r\n\t\t *            \"async\": false,\r\n\t\t *            \"dataType\": \"json\",\r\n\t\t *            \"success\": function (json) {\r\n\t\t *              o = json;\r\n\t\t *            }\r\n\t\t *          } );\r\n\t\t *\r\n\t\t *          return o;\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnStateLoadCallback\": function ( settings ) {\r\n            try {\r\n                return JSON.parse(\r\n                    (settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\r\n                        'DataTables_'+settings.sInstance+'_'+location.pathname\r\n                    )\r\n                );\r\n            } catch (e) {}\r\n        },\r\n\r\n\r\n        /**\r\n         * Callback which allows modification of the saved state prior to loading that state.\r\n         * This callback is called when the table is loading state from the stored data, but\r\n         * prior to the settings object being modified by the saved state. Note that for\r\n         * plug-in authors, you should use the `stateLoadParams` event to load parameters for\r\n         * a plug-in.\r\n         *  @type function\r\n         *  @param {object} settings DataTables settings object\r\n         *  @param {object} data The state object that is to be loaded\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.stateLoadParams\r\n         *\r\n         *  @example\r\n         *    // Remove a saved filter, so filtering is never loaded\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateSave\": true,\r\n\t\t *        \"stateLoadParams\": function (settings, data) {\r\n\t\t *          data.oSearch.sSearch = \"\";\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Disallow state loading by returning false\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateSave\": true,\r\n\t\t *        \"stateLoadParams\": function (settings, data) {\r\n\t\t *          return false;\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnStateLoadParams\": null,\r\n\r\n\r\n        /**\r\n         * Callback that is called when the state has been loaded from the state saving method\r\n         * and the DataTables settings object has been modified as a result of the loaded state.\r\n         *  @type function\r\n         *  @param {object} settings DataTables settings object\r\n         *  @param {object} data The state object that was loaded\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.stateLoaded\r\n         *\r\n         *  @example\r\n         *    // Show an alert with the filtering value that was saved\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateSave\": true,\r\n\t\t *        \"stateLoaded\": function (settings, data) {\r\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnStateLoaded\": null,\r\n\r\n\r\n        /**\r\n         * Save the table state. This function allows you to define where and how the state\r\n         * information for the table is stored By default DataTables will use `localStorage`\r\n         * but you might wish to use a server-side database or cookies.\r\n         *  @type function\r\n         *  @member\r\n         *  @param {object} settings DataTables settings object\r\n         *  @param {object} data The state object to be saved\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.stateSaveCallback\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateSave\": true,\r\n\t\t *        \"stateSaveCallback\": function (settings, data) {\r\n\t\t *          // Send an Ajax request to the server with the state object\r\n\t\t *          $.ajax( {\r\n\t\t *            \"url\": \"/state_save\",\r\n\t\t *            \"data\": data,\r\n\t\t *            \"dataType\": \"json\",\r\n\t\t *            \"method\": \"POST\"\r\n\t\t *            \"success\": function () {}\r\n\t\t *          } );\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnStateSaveCallback\": function ( settings, data ) {\r\n            try {\r\n                (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\r\n                    'DataTables_'+settings.sInstance+'_'+location.pathname,\r\n                    JSON.stringify( data )\r\n                );\r\n            } catch (e) {}\r\n        },\r\n\r\n\r\n        /**\r\n         * Callback which allows modification of the state to be saved. Called when the table\r\n         * has changed state a new state save is required. This method allows modification of\r\n         * the state saving object prior to actually doing the save, including addition or\r\n         * other state properties or modification. Note that for plug-in authors, you should\r\n         * use the `stateSaveParams` event to save parameters for a plug-in.\r\n         *  @type function\r\n         *  @param {object} settings DataTables settings object\r\n         *  @param {object} data The state object to be saved\r\n         *\r\n         *  @dtopt Callbacks\r\n         *  @name DataTable.defaults.stateSaveParams\r\n         *\r\n         *  @example\r\n         *    // Remove a saved filter, so filtering is never saved\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateSave\": true,\r\n\t\t *        \"stateSaveParams\": function (settings, data) {\r\n\t\t *          data.oSearch.sSearch = \"\";\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"fnStateSaveParams\": null,\r\n\r\n\r\n        /**\r\n         * Duration for which the saved state information is considered valid. After this period\r\n         * has elapsed the state will be returned to the default.\r\n         * Value is given in seconds.\r\n         *  @type int\r\n         *  @default 7200 <i>(2 hours)</i>\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.stateDuration\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"iStateDuration\": 7200,\r\n\r\n\r\n        /**\r\n         * When enabled DataTables will not make a request to the server for the first\r\n         * page draw - rather it will use the data already on the page (no sorting etc\r\n         * will be applied to it), thus saving on an XHR at load time. `deferLoading`\r\n         * is used to indicate that deferred loading is required, but it is also used\r\n         * to tell DataTables how many records there are in the full table (allowing\r\n         * the information element and pagination to be displayed correctly). In the case\r\n         * where a filtering is applied to the table on initial load, this can be\r\n         * indicated by giving the parameter as an array, where the first element is\r\n         * the number of records available after filtering and the second element is the\r\n         * number of records without filtering (allowing the table information element\r\n         * to be shown correctly).\r\n         *  @type int | array\r\n         *  @default null\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.deferLoading\r\n         *\r\n         *  @example\r\n         *    // 57 records available in the table, no filtering applied\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"serverSide\": true,\r\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t\t *        \"deferLoading\": 57\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // 57 records after filtering, 100 without filtering (an initial filter applied)\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"serverSide\": true,\r\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t\t *        \"deferLoading\": [ 57, 100 ],\r\n\t\t *        \"search\": {\r\n\t\t *          \"search\": \"my_filter\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"iDeferLoading\": null,\r\n\r\n\r\n        /**\r\n         * Number of rows to display on a single page when using pagination. If\r\n         * feature enabled (`lengthChange`) then the end user will be able to override\r\n         * this to a custom setting using a pop-up menu.\r\n         *  @type int\r\n         *  @default 10\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.pageLength\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"pageLength\": 50\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"iDisplayLength\": 10,\r\n\r\n\r\n        /**\r\n         * Define the starting point for data display when using DataTables with\r\n         * pagination. Note that this parameter is the number of records, rather than\r\n         * the page number, so if you have 10 records per page and want to start on\r\n         * the third page, it should be \"20\".\r\n         *  @type int\r\n         *  @default 0\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.displayStart\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"displayStart\": 20\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"iDisplayStart\": 0,\r\n\r\n\r\n        /**\r\n         * By default DataTables allows keyboard navigation of the table (sorting, paging,\r\n         * and filtering) by adding a `tabindex` attribute to the required elements. This\r\n         * allows you to tab through the controls and press the enter key to activate them.\r\n         * The tabindex is default 0, meaning that the tab follows the flow of the document.\r\n         * You can overrule this using this parameter if you wish. Use a value of -1 to\r\n         * disable built-in keyboard navigation.\r\n         *  @type int\r\n         *  @default 0\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.tabIndex\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"tabIndex\": 1\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"iTabIndex\": 0,\r\n\r\n\r\n        /**\r\n         * Classes that DataTables assigns to the various components and features\r\n         * that it adds to the HTML table. This allows classes to be configured\r\n         * during initialisation in addition to through the static\r\n         * {@link DataTable.ext.oStdClasses} object).\r\n         *  @namespace\r\n         *  @name DataTable.defaults.classes\r\n         */\r\n        \"oClasses\": {},\r\n\r\n\r\n        /**\r\n         * All strings that DataTables uses in the user interface that it creates\r\n         * are defined in this object, allowing you to modified them individually or\r\n         * completely replace them all as required.\r\n         *  @namespace\r\n         *  @name DataTable.defaults.language\r\n         */\r\n        \"oLanguage\": {\r\n            /**\r\n             * Strings that are used for WAI-ARIA labels and controls only (these are not\r\n             * actually visible on the page, but will be read by screenreaders, and thus\r\n             * must be internationalised as well).\r\n             *  @namespace\r\n             *  @name DataTable.defaults.language.aria\r\n             */\r\n            \"oAria\": {\r\n                /**\r\n                 * ARIA label that is added to the table headers when the column may be\r\n                 * sorted ascending by activing the column (click or return when focused).\r\n                 * Note that the column header is prefixed to this string.\r\n                 *  @type string\r\n                 *  @default : activate to sort column ascending\r\n                 *\r\n                 *  @dtopt Language\r\n                 *  @name DataTable.defaults.language.aria.sortAscending\r\n                 *\r\n                 *  @example\r\n                 *    $(document).ready( function() {\r\n\t\t\t\t *      $('#example').dataTable( {\r\n\t\t\t\t *        \"language\": {\r\n\t\t\t\t *          \"aria\": {\r\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\r\n\t\t\t\t *          }\r\n\t\t\t\t *        }\r\n\t\t\t\t *      } );\r\n\t\t\t\t *    } );\r\n                 */\r\n                \"sSortAscending\": \": activate to sort column ascending\",\r\n\r\n                /**\r\n                 * ARIA label that is added to the table headers when the column may be\r\n                 * sorted descending by activing the column (click or return when focused).\r\n                 * Note that the column header is prefixed to this string.\r\n                 *  @type string\r\n                 *  @default : activate to sort column ascending\r\n                 *\r\n                 *  @dtopt Language\r\n                 *  @name DataTable.defaults.language.aria.sortDescending\r\n                 *\r\n                 *  @example\r\n                 *    $(document).ready( function() {\r\n\t\t\t\t *      $('#example').dataTable( {\r\n\t\t\t\t *        \"language\": {\r\n\t\t\t\t *          \"aria\": {\r\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\r\n\t\t\t\t *          }\r\n\t\t\t\t *        }\r\n\t\t\t\t *      } );\r\n\t\t\t\t *    } );\r\n                 */\r\n                \"sSortDescending\": \": activate to sort column descending\"\r\n            },\r\n\r\n            /**\r\n             * Pagination string used by DataTables for the built-in pagination\r\n             * control types.\r\n             *  @namespace\r\n             *  @name DataTable.defaults.language.paginate\r\n             */\r\n            \"oPaginate\": {\r\n                /**\r\n                 * Text to use when using the 'full_numbers' type of pagination for the\r\n                 * button to take the user to the first page.\r\n                 *  @type string\r\n                 *  @default First\r\n                 *\r\n                 *  @dtopt Language\r\n                 *  @name DataTable.defaults.language.paginate.first\r\n                 *\r\n                 *  @example\r\n                 *    $(document).ready( function() {\r\n\t\t\t\t *      $('#example').dataTable( {\r\n\t\t\t\t *        \"language\": {\r\n\t\t\t\t *          \"paginate\": {\r\n\t\t\t\t *            \"first\": \"First page\"\r\n\t\t\t\t *          }\r\n\t\t\t\t *        }\r\n\t\t\t\t *      } );\r\n\t\t\t\t *    } );\r\n                 */\r\n                \"sFirst\": \"First\",\r\n\r\n\r\n                /**\r\n                 * Text to use when using the 'full_numbers' type of pagination for the\r\n                 * button to take the user to the last page.\r\n                 *  @type string\r\n                 *  @default Last\r\n                 *\r\n                 *  @dtopt Language\r\n                 *  @name DataTable.defaults.language.paginate.last\r\n                 *\r\n                 *  @example\r\n                 *    $(document).ready( function() {\r\n\t\t\t\t *      $('#example').dataTable( {\r\n\t\t\t\t *        \"language\": {\r\n\t\t\t\t *          \"paginate\": {\r\n\t\t\t\t *            \"last\": \"Last page\"\r\n\t\t\t\t *          }\r\n\t\t\t\t *        }\r\n\t\t\t\t *      } );\r\n\t\t\t\t *    } );\r\n                 */\r\n                \"sLast\": \"Last\",\r\n\r\n\r\n                /**\r\n                 * Text to use for the 'next' pagination button (to take the user to the\r\n                 * next page).\r\n                 *  @type string\r\n                 *  @default Next\r\n                 *\r\n                 *  @dtopt Language\r\n                 *  @name DataTable.defaults.language.paginate.next\r\n                 *\r\n                 *  @example\r\n                 *    $(document).ready( function() {\r\n\t\t\t\t *      $('#example').dataTable( {\r\n\t\t\t\t *        \"language\": {\r\n\t\t\t\t *          \"paginate\": {\r\n\t\t\t\t *            \"next\": \"Next page\"\r\n\t\t\t\t *          }\r\n\t\t\t\t *        }\r\n\t\t\t\t *      } );\r\n\t\t\t\t *    } );\r\n                 */\r\n                \"sNext\": \"Next\",\r\n\r\n\r\n                /**\r\n                 * Text to use for the 'previous' pagination button (to take the user to\r\n                 * the previous page).\r\n                 *  @type string\r\n                 *  @default Previous\r\n                 *\r\n                 *  @dtopt Language\r\n                 *  @name DataTable.defaults.language.paginate.previous\r\n                 *\r\n                 *  @example\r\n                 *    $(document).ready( function() {\r\n\t\t\t\t *      $('#example').dataTable( {\r\n\t\t\t\t *        \"language\": {\r\n\t\t\t\t *          \"paginate\": {\r\n\t\t\t\t *            \"previous\": \"Previous page\"\r\n\t\t\t\t *          }\r\n\t\t\t\t *        }\r\n\t\t\t\t *      } );\r\n\t\t\t\t *    } );\r\n                 */\r\n                \"sPrevious\": \"Previous\"\r\n            },\r\n\r\n            /**\r\n             * This string is shown in preference to `zeroRecords` when the table is\r\n             * empty of data (regardless of filtering). Note that this is an optional\r\n             * parameter - if it is not given, the value of `zeroRecords` will be used\r\n             * instead (either the default or given value).\r\n             *  @type string\r\n             *  @default No data available in table\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.emptyTable\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"emptyTable\": \"No data available in table\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sEmptyTable\": \"No data available in table\",\r\n\r\n\r\n            /**\r\n             * This string gives information to the end user about the information\r\n             * that is current on display on the page. The following tokens can be\r\n             * used in the string and will be dynamically replaced as the table\r\n             * display updates. This tokens can be placed anywhere in the string, or\r\n             * removed as needed by the language requires:\r\n             *\r\n             * * `\\_START\\_` - Display index of the first record on the current page\r\n             * * `\\_END\\_` - Display index of the last record on the current page\r\n             * * `\\_TOTAL\\_` - Number of records in the table after filtering\r\n             * * `\\_MAX\\_` - Number of records in the table without filtering\r\n             * * `\\_PAGE\\_` - Current page number\r\n             * * `\\_PAGES\\_` - Total number of pages of data in the table\r\n             *\r\n             *  @type string\r\n             *  @default Showing _START_ to _END_ of _TOTAL_ entries\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.info\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\r\n\r\n\r\n            /**\r\n             * Display information string for when the table is empty. Typically the\r\n             * format of this string should match `info`.\r\n             *  @type string\r\n             *  @default Showing 0 to 0 of 0 entries\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.infoEmpty\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\r\n\r\n\r\n            /**\r\n             * When a user filters the information in a table, this string is appended\r\n             * to the information (`info`) to give an idea of how strong the filtering\r\n             * is. The variable _MAX_ is dynamically updated.\r\n             *  @type string\r\n             *  @default (filtered from _MAX_ total entries)\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.infoFiltered\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\r\n\r\n\r\n            /**\r\n             * If can be useful to append extra information to the info string at times,\r\n             * and this variable does exactly that. This information will be appended to\r\n             * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\r\n             * being used) at all times.\r\n             *  @type string\r\n             *  @default <i>Empty string</i>\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.infoPostFix\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sInfoPostFix\": \"\",\r\n\r\n\r\n            /**\r\n             * This decimal place operator is a little different from the other\r\n             * language options since DataTables doesn't output floating point\r\n             * numbers, so it won't ever use this for display of a number. Rather,\r\n             * what this parameter does is modify the sort methods of the table so\r\n             * that numbers which are in a format which has a character other than\r\n             * a period (`.`) as a decimal place will be sorted numerically.\r\n             *\r\n             * Note that numbers with different decimal places cannot be shown in\r\n             * the same table and still be sortable, the table must be consistent.\r\n             * However, multiple different tables on the page can use different\r\n             * decimal place characters.\r\n             *  @type string\r\n             *  @default\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.decimal\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"decimal\": \",\"\r\n\t\t\t *          \"thousands\": \".\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sDecimal\": \"\",\r\n\r\n\r\n            /**\r\n             * DataTables has a build in number formatter (`formatNumber`) which is\r\n             * used to format large numbers that are used in the table information.\r\n             * By default a comma is used, but this can be trivially changed to any\r\n             * character you wish with this parameter.\r\n             *  @type string\r\n             *  @default ,\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.thousands\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"thousands\": \"'\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sThousands\": \",\",\r\n\r\n\r\n            /**\r\n             * Detail the action that will be taken when the drop down menu for the\r\n             * pagination length option is changed. The '_MENU_' variable is replaced\r\n             * with a default select list of 10, 25, 50 and 100, and can be replaced\r\n             * with a custom select box if required.\r\n             *  @type string\r\n             *  @default Show _MENU_ entries\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.lengthMenu\r\n             *\r\n             *  @example\r\n             *    // Language change only\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             *\r\n             *  @example\r\n             *    // Language and options change\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\r\n\t\t\t *            '<option value=\"10\">10</option>'+\r\n\t\t\t *            '<option value=\"20\">20</option>'+\r\n\t\t\t *            '<option value=\"30\">30</option>'+\r\n\t\t\t *            '<option value=\"40\">40</option>'+\r\n\t\t\t *            '<option value=\"50\">50</option>'+\r\n\t\t\t *            '<option value=\"-1\">All</option>'+\r\n\t\t\t *            '</select> records'\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sLengthMenu\": \"Show _MENU_ entries\",\r\n\r\n\r\n            /**\r\n             * When using Ajax sourced data and during the first draw when DataTables is\r\n             * gathering the data, this message is shown in an empty row in the table to\r\n             * indicate to the end user the the data is being loaded. Note that this\r\n             * parameter is not used when loading data by server-side processing, just\r\n             * Ajax sourced data with client-side processing.\r\n             *  @type string\r\n             *  @default Loading...\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.loadingRecords\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sLoadingRecords\": \"Loading...\",\r\n\r\n\r\n            /**\r\n             * Text which is displayed when the table is processing a user action\r\n             * (usually a sort command or similar).\r\n             *  @type string\r\n             *  @default Processing...\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.processing\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sProcessing\": \"Processing...\",\r\n\r\n\r\n            /**\r\n             * Details the actions that will be taken when the user types into the\r\n             * filtering input text box. The variable \"_INPUT_\", if used in the string,\r\n             * is replaced with the HTML text box for the filtering input allowing\r\n             * control over where it appears in the string. If \"_INPUT_\" is not given\r\n             * then the input box is appended to the string automatically.\r\n             *  @type string\r\n             *  @default Search:\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.search\r\n             *\r\n             *  @example\r\n             *    // Input text box will be appended at the end automatically\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"search\": \"Filter records:\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             *\r\n             *  @example\r\n             *    // Specify where the filter should appear\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sSearch\": \"Search:\",\r\n\r\n\r\n            /**\r\n             * Assign a `placeholder` attribute to the search `input` element\r\n             *  @type string\r\n             *  @default\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.searchPlaceholder\r\n             */\r\n            \"sSearchPlaceholder\": \"\",\r\n\r\n\r\n            /**\r\n             * All of the language information can be stored in a file on the\r\n             * server-side, which DataTables will look up if this parameter is passed.\r\n             * It must store the URL of the language file, which is in a JSON format,\r\n             * and the object has the same properties as the oLanguage object in the\r\n             * initialiser object (i.e. the above parameters). Please refer to one of\r\n             * the example language files to see how this works in action.\r\n             *  @type string\r\n             *  @default <i>Empty string - i.e. disabled</i>\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.url\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sUrl\": \"\",\r\n\r\n\r\n            /**\r\n             * Text shown inside the table records when the is no information to be\r\n             * displayed after filtering. `emptyTable` is shown when there is simply no\r\n             * information in the table at all (regardless of filtering).\r\n             *  @type string\r\n             *  @default No matching records found\r\n             *\r\n             *  @dtopt Language\r\n             *  @name DataTable.defaults.language.zeroRecords\r\n             *\r\n             *  @example\r\n             *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"zeroRecords\": \"No records to display\"\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n             */\r\n            \"sZeroRecords\": \"No matching records found\"\r\n        },\r\n\r\n\r\n        /**\r\n         * This parameter allows you to have define the global filtering state at\r\n         * initialisation time. As an object the `search` parameter must be\r\n         * defined, but all other parameters are optional. When `regex` is true,\r\n         * the search string will be treated as a regular expression, when false\r\n         * (default) it will be treated as a straight string. When `smart`\r\n         * DataTables will use it's smart filtering methods (to word match at\r\n         * any point in the data), when false this will not be done.\r\n         *  @namespace\r\n         *  @extends DataTable.models.oSearch\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.search\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"search\": {\"search\": \"Initial search\"}\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"oSearch\": $.extend( {}, DataTable.models.oSearch ),\r\n\r\n\r\n        /**\r\n         * __Deprecated__ The functionality provided by this parameter has now been\r\n         * superseded by that provided through `ajax`, which should be used instead.\r\n         *\r\n         * By default DataTables will look for the property `data` (or `aaData` for\r\n         * compatibility with DataTables 1.9-) when obtaining data from an Ajax\r\n         * source or for server-side processing - this parameter allows that\r\n         * property to be changed. You can use Javascript dotted object notation to\r\n         * get a data source for multiple levels of nesting.\r\n         *  @type string\r\n         *  @default data\r\n         *\r\n         *  @dtopt Options\r\n         *  @dtopt Server-side\r\n         *  @name DataTable.defaults.ajaxDataProp\r\n         *\r\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n         */\r\n        \"sAjaxDataProp\": \"data\",\r\n\r\n\r\n        /**\r\n         * __Deprecated__ The functionality provided by this parameter has now been\r\n         * superseded by that provided through `ajax`, which should be used instead.\r\n         *\r\n         * You can instruct DataTables to load data from an external\r\n         * source using this parameter (use aData if you want to pass data in you\r\n         * already have). Simply provide a url a JSON object can be obtained from.\r\n         *  @type string\r\n         *  @default null\r\n         *\r\n         *  @dtopt Options\r\n         *  @dtopt Server-side\r\n         *  @name DataTable.defaults.ajaxSource\r\n         *\r\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n         */\r\n        \"sAjaxSource\": null,\r\n\r\n\r\n        /**\r\n         * This initialisation variable allows you to specify exactly where in the\r\n         * DOM you want DataTables to inject the various controls it adds to the page\r\n         * (for example you might want the pagination controls at the top of the\r\n         * table). DIV elements (with or without a custom class) can also be added to\r\n         * aid styling. The follow syntax is used:\r\n         *   <ul>\r\n         *     <li>The following options are allowed:\r\n         *       <ul>\r\n         *         <li>'l' - Length changing</li>\r\n         *         <li>'f' - Filtering input</li>\r\n         *         <li>'t' - The table!</li>\r\n         *         <li>'i' - Information</li>\r\n         *         <li>'p' - Pagination</li>\r\n         *         <li>'r' - pRocessing</li>\r\n         *       </ul>\r\n         *     </li>\r\n         *     <li>The following constants are allowed:\r\n         *       <ul>\r\n         *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\r\n         *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\r\n         *       </ul>\r\n         *     </li>\r\n         *     <li>The following syntax is expected:\r\n         *       <ul>\r\n         *         <li>'&lt;' and '&gt;' - div elements</li>\r\n         *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\r\n         *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\r\n         *       </ul>\r\n         *     </li>\r\n         *     <li>Examples:\r\n         *       <ul>\r\n         *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\r\n         *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\r\n         *       </ul>\r\n         *     </li>\r\n         *   </ul>\r\n         *  @type string\r\n         *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\r\n         *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.dom\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sDom\": \"lfrtip\",\r\n\r\n\r\n        /**\r\n         * Search delay option. This will throttle full table searches that use the\r\n         * DataTables provided search input element (it does not effect calls to\r\n         * `dt-api search()`, providing a delay before the search is made.\r\n         *  @type integer\r\n         *  @default 0\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.searchDelay\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"searchDelay\": 200\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"searchDelay\": null,\r\n\r\n\r\n        /**\r\n         * DataTables features four different built-in options for the buttons to\r\n         * display for pagination control:\r\n         *\r\n         * * `simple` - 'Previous' and 'Next' buttons only\r\n         * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\r\n         * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\r\n         * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus\r\n         *   page numbers\r\n         *\r\n         * Further methods can be added using {@link DataTable.ext.oPagination}.\r\n         *  @type string\r\n         *  @default simple_numbers\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.pagingType\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"pagingType\": \"full_numbers\"\r\n\t\t *      } );\r\n\t\t *    } )\r\n         */\r\n        \"sPaginationType\": \"simple_numbers\",\r\n\r\n\r\n        /**\r\n         * Enable horizontal scrolling. When a table is too wide to fit into a\r\n         * certain layout, or you have a large number of columns in the table, you\r\n         * can enable x-scrolling to show the table in a viewport, which can be\r\n         * scrolled. This property can be `true` which will allow the table to\r\n         * scroll horizontally when needed, or any CSS unit, or a number (in which\r\n         * case it will be treated as a pixel measurement). Setting as simply `true`\r\n         * is recommended.\r\n         *  @type boolean|string\r\n         *  @default <i>blank string - i.e. disabled</i>\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.scrollX\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"scrollX\": true,\r\n\t\t *        \"scrollCollapse\": true\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sScrollX\": \"\",\r\n\r\n\r\n        /**\r\n         * This property can be used to force a DataTable to use more width than it\r\n         * might otherwise do when x-scrolling is enabled. For example if you have a\r\n         * table which requires to be well spaced, this parameter is useful for\r\n         * \"over-sizing\" the table, and thus forcing scrolling. This property can by\r\n         * any CSS unit, or a number (in which case it will be treated as a pixel\r\n         * measurement).\r\n         *  @type string\r\n         *  @default <i>blank string - i.e. disabled</i>\r\n         *\r\n         *  @dtopt Options\r\n         *  @name DataTable.defaults.scrollXInner\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"scrollX\": \"100%\",\r\n\t\t *        \"scrollXInner\": \"110%\"\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sScrollXInner\": \"\",\r\n\r\n\r\n        /**\r\n         * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\r\n         * to the given height, and enable scrolling for any data which overflows the\r\n         * current viewport. This can be used as an alternative to paging to display\r\n         * a lot of data in a small area (although paging and scrolling can both be\r\n         * enabled at the same time). This property can be any CSS unit, or a number\r\n         * (in which case it will be treated as a pixel measurement).\r\n         *  @type string\r\n         *  @default <i>blank string - i.e. disabled</i>\r\n         *\r\n         *  @dtopt Features\r\n         *  @name DataTable.defaults.scrollY\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"scrollY\": \"200px\",\r\n\t\t *        \"paginate\": false\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sScrollY\": \"\",\r\n\r\n\r\n        /**\r\n         * __Deprecated__ The functionality provided by this parameter has now been\r\n         * superseded by that provided through `ajax`, which should be used instead.\r\n         *\r\n         * Set the HTTP method that is used to make the Ajax call for server-side\r\n         * processing or Ajax sourced data.\r\n         *  @type string\r\n         *  @default GET\r\n         *\r\n         *  @dtopt Options\r\n         *  @dtopt Server-side\r\n         *  @name DataTable.defaults.serverMethod\r\n         *\r\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n         */\r\n        \"sServerMethod\": \"GET\",\r\n\r\n\r\n        /**\r\n         * DataTables makes use of renderers when displaying HTML elements for\r\n         * a table. These renderers can be added or modified by plug-ins to\r\n         * generate suitable mark-up for a site. For example the Bootstrap\r\n         * integration plug-in for DataTables uses a paging button renderer to\r\n         * display pagination buttons in the mark-up required by Bootstrap.\r\n         *\r\n         * For further information about the renderers available see\r\n         * DataTable.ext.renderer\r\n         *  @type string|object\r\n         *  @default null\r\n         *\r\n         *  @name DataTable.defaults.renderer\r\n         *\r\n         */\r\n        \"renderer\": null,\r\n\r\n\r\n        /**\r\n         * Set the data property name that DataTables should use to get a row's id\r\n         * to set as the `id` property in the node.\r\n         *  @type string\r\n         *  @default DT_RowId\r\n         *\r\n         *  @name DataTable.defaults.rowId\r\n         */\r\n        \"rowId\": \"DT_RowId\"\r\n    };\r\n\r\n    _fnHungarianMap( DataTable.defaults );\r\n\r\n\r\n\r\n    /*\r\n     * Developer note - See note in model.defaults.js about the use of Hungarian\r\n     * notation and camel case.\r\n     */\r\n\r\n    /**\r\n     * Column options that can be given to DataTables at initialisation time.\r\n     *  @namespace\r\n     */\r\n    DataTable.defaults.column = {\r\n        /**\r\n         * Define which column(s) an order will occur on for this column. This\r\n         * allows a column's ordering to take multiple columns into account when\r\n         * doing a sort or use the data from a different column. For example first\r\n         * name / last name columns make sense to do a multi-column sort over the\r\n         * two columns.\r\n         *  @type array|int\r\n         *  @default null <i>Takes the value of the column index automatically</i>\r\n         *\r\n         *  @name DataTable.defaults.column.orderData\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\r\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\r\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"orderData\": [ 0, 1 ] },\r\n\t\t *          { \"orderData\": [ 1, 0 ] },\r\n\t\t *          { \"orderData\": 2 },\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"aDataSort\": null,\r\n        \"iDataSort\": -1,\r\n\r\n\r\n        /**\r\n         * You can control the default ordering direction, and even alter the\r\n         * behaviour of the sort handler (i.e. only allow ascending ordering etc)\r\n         * using this parameter.\r\n         *  @type array\r\n         *  @default [ 'asc', 'desc' ]\r\n         *\r\n         *  @name DataTable.defaults.column.orderSequence\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\r\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\r\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          null,\r\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\r\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\r\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\r\n\t\t *          null\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"asSorting\": [ 'asc', 'desc' ],\r\n\r\n\r\n        /**\r\n         * Enable or disable filtering on the data in this column.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @name DataTable.defaults.column.searchable\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\r\n\t\t *        ] } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"searchable\": false },\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ] } );\r\n\t\t *    } );\r\n         */\r\n        \"bSearchable\": true,\r\n\r\n\r\n        /**\r\n         * Enable or disable ordering on this column.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @name DataTable.defaults.column.orderable\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\r\n\t\t *        ] } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"orderable\": false },\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ] } );\r\n\t\t *    } );\r\n         */\r\n        \"bSortable\": true,\r\n\r\n\r\n        /**\r\n         * Enable or disable the display of this column.\r\n         *  @type boolean\r\n         *  @default true\r\n         *\r\n         *  @name DataTable.defaults.column.visible\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\r\n\t\t *        ] } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"visible\": false },\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ] } );\r\n\t\t *    } );\r\n         */\r\n        \"bVisible\": true,\r\n\r\n\r\n        /**\r\n         * Developer definable function that is called whenever a cell is created (Ajax source,\r\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n         * allowing you to modify the DOM element (add background colour for example) when the\r\n         * element is available.\r\n         *  @type function\r\n         *  @param {element} td The TD node that has been created\r\n         *  @param {*} cellData The Data for the cell\r\n         *  @param {array|object} rowData The data for the whole row\r\n         *  @param {int} row The row index for the aoData data store\r\n         *  @param {int} col The column index for aoColumns\r\n         *\r\n         *  @name DataTable.defaults.column.createdCell\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [3],\r\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\r\n\t\t *            if ( cellData == \"1.7\" ) {\r\n\t\t *              $(td).css('color', 'blue')\r\n\t\t *            }\r\n\t\t *          }\r\n\t\t *        } ]\r\n\t\t *      });\r\n\t\t *    } );\r\n         */\r\n        \"fnCreatedCell\": null,\r\n\r\n\r\n        /**\r\n         * This parameter has been replaced by `data` in DataTables to ensure naming\r\n         * consistency. `dataProp` can still be used, as there is backwards\r\n         * compatibility in DataTables for this option, but it is strongly\r\n         * recommended that you use `data` in preference to `dataProp`.\r\n         *  @name DataTable.defaults.column.dataProp\r\n         */\r\n\r\n\r\n        /**\r\n         * This property can be used to read data from any data source property,\r\n         * including deeply nested objects / properties. `data` can be given in a\r\n         * number of different ways which effect its behaviour:\r\n         *\r\n         * * `integer` - treated as an array index for the data source. This is the\r\n         *   default that DataTables uses (incrementally increased for each column).\r\n         * * `string` - read an object property from the data source. There are\r\n         *   three 'special' options that can be used in the string to alter how\r\n         *   DataTables reads the data from the source object:\r\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n         *      Javascript to read from nested objects, so to can the options\r\n         *      specified in `data`. For example: `browser.version` or\r\n         *      `browser.name`. If your object parameter name contains a period, use\r\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n         *    * `[]` - Array notation. DataTables can automatically combine data\r\n         *      from and array source, joining the data with the characters provided\r\n         *      between the two brackets. For example: `name[, ]` would provide a\r\n         *      comma-space separated list from the source array. If no characters\r\n         *      are provided between the brackets, the original array source is\r\n         *      returned.\r\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n         *      execute a function of the name given. For example: `browser()` for a\r\n         *      simple function on the data source, `browser.version()` for a\r\n         *      function in a nested property or even `browser().version` to get an\r\n         *      object property if the function called returns an object. Note that\r\n         *      function notation is recommended for use in `render` rather than\r\n         *      `data` as it is much simpler to use as a renderer.\r\n         * * `null` - use the original data source for the row rather than plucking\r\n         *   data directly from it. This action has effects on two other\r\n         *   initialisation options:\r\n         *    * `defaultContent` - When null is given as the `data` option and\r\n         *      `defaultContent` is specified for the column, the value defined by\r\n         *      `defaultContent` will be used for the cell.\r\n         *    * `render` - When null is used for the `data` option and the `render`\r\n         *      option is specified for the column, the whole data source for the\r\n         *      row is used for the renderer.\r\n         * * `function` - the function given will be executed whenever DataTables\r\n         *   needs to set or get the data for a cell in the column. The function\r\n         *   takes three parameters:\r\n         *    * Parameters:\r\n         *      * `{array|object}` The data source for the row\r\n         *      * `{string}` The type call data requested - this will be 'set' when\r\n         *        setting data or 'filter', 'display', 'type', 'sort' or undefined\r\n         *        when gathering data. Note that when `undefined` is given for the\r\n         *        type DataTables expects to get the raw data for the object back<\r\n         *      * `{*}` Data to set when the second parameter is 'set'.\r\n         *    * Return:\r\n         *      * The return value from the function is not required when 'set' is\r\n         *        the type of call, but otherwise the return is what will be used\r\n         *        for the data requested.\r\n         *\r\n         * Note that `data` is a getter and setter option. If you just require\r\n         * formatting of data for output, you will likely want to use `render` which\r\n         * is simply a getter and thus simpler to use.\r\n         *\r\n         * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\r\n         * name change reflects the flexibility of this property and is consistent\r\n         * with the naming of mRender. If 'mDataProp' is given, then it will still\r\n         * be used by DataTables, as it automatically maps the old name to the new\r\n         * if required.\r\n         *\r\n         *  @type string|int|function|null\r\n         *  @default null <i>Use automatically calculated column index</i>\r\n         *\r\n         *  @name DataTable.defaults.column.data\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Read table data from objects\r\n         *    // JSON structure for each row:\r\n         *    //   {\r\n\t\t *    //      \"engine\": {value},\r\n\t\t *    //      \"browser\": {value},\r\n\t\t *    //      \"platform\": {value},\r\n\t\t *    //      \"version\": {value},\r\n\t\t *    //      \"grade\": {value}\r\n\t\t *    //   }\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"data\": \"engine\" },\r\n\t\t *          { \"data\": \"browser\" },\r\n\t\t *          { \"data\": \"platform\" },\r\n\t\t *          { \"data\": \"version\" },\r\n\t\t *          { \"data\": \"grade\" }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Read information from deeply nested objects\r\n         *    // JSON structure for each row:\r\n         *    //   {\r\n\t\t *    //      \"engine\": {value},\r\n\t\t *    //      \"browser\": {value},\r\n\t\t *    //      \"platform\": {\r\n\t\t *    //         \"inner\": {value}\r\n\t\t *    //      },\r\n\t\t *    //      \"details\": [\r\n\t\t *    //         {value}, {value}\r\n\t\t *    //      ]\r\n\t\t *    //   }\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"data\": \"engine\" },\r\n\t\t *          { \"data\": \"browser\" },\r\n\t\t *          { \"data\": \"platform.inner\" },\r\n\t\t *          { \"data\": \"platform.details.0\" },\r\n\t\t *          { \"data\": \"platform.details.1\" }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `data` as a function to provide different information for\r\n         *    // sorting, filtering and display. In this case, currency (price)\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [ 0 ],\r\n\t\t *          \"data\": function ( source, type, val ) {\r\n\t\t *            if (type === 'set') {\r\n\t\t *              source.price = val;\r\n\t\t *              // Store the computed dislay and filter values for efficiency\r\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\r\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\r\n\t\t *              return;\r\n\t\t *            }\r\n\t\t *            else if (type === 'display') {\r\n\t\t *              return source.price_display;\r\n\t\t *            }\r\n\t\t *            else if (type === 'filter') {\r\n\t\t *              return source.price_filter;\r\n\t\t *            }\r\n\t\t *            // 'sort', 'type' and undefined all just use the integer\r\n\t\t *            return source.price;\r\n\t\t *          }\r\n\t\t *        } ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using default content\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [ 0 ],\r\n\t\t *          \"data\": null,\r\n\t\t *          \"defaultContent\": \"Click to edit\"\r\n\t\t *        } ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using array notation - outputting a list from an array\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [ 0 ],\r\n\t\t *          \"data\": \"name[, ]\"\r\n\t\t *        } ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         */\r\n        \"mData\": null,\r\n\r\n\r\n        /**\r\n         * This property is the rendering partner to `data` and it is suggested that\r\n         * when you want to manipulate data for display (including filtering,\r\n         * sorting etc) without altering the underlying data for the table, use this\r\n         * property. `render` can be considered to be the the read only companion to\r\n         * `data` which is read / write (then as such more complex). Like `data`\r\n         * this option can be given in a number of different ways to effect its\r\n         * behaviour:\r\n         *\r\n         * * `integer` - treated as an array index for the data source. This is the\r\n         *   default that DataTables uses (incrementally increased for each column).\r\n         * * `string` - read an object property from the data source. There are\r\n         *   three 'special' options that can be used in the string to alter how\r\n         *   DataTables reads the data from the source object:\r\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n         *      Javascript to read from nested objects, so to can the options\r\n         *      specified in `data`. For example: `browser.version` or\r\n         *      `browser.name`. If your object parameter name contains a period, use\r\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n         *    * `[]` - Array notation. DataTables can automatically combine data\r\n         *      from and array source, joining the data with the characters provided\r\n         *      between the two brackets. For example: `name[, ]` would provide a\r\n         *      comma-space separated list from the source array. If no characters\r\n         *      are provided between the brackets, the original array source is\r\n         *      returned.\r\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n         *      execute a function of the name given. For example: `browser()` for a\r\n         *      simple function on the data source, `browser.version()` for a\r\n         *      function in a nested property or even `browser().version` to get an\r\n         *      object property if the function called returns an object.\r\n         * * `object` - use different data for the different data types requested by\r\n         *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\r\n         *   of the object is the data type the property refers to and the value can\r\n         *   defined using an integer, string or function using the same rules as\r\n         *   `render` normally does. Note that an `_` option _must_ be specified.\r\n         *   This is the default value to use if you haven't specified a value for\r\n         *   the data type requested by DataTables.\r\n         * * `function` - the function given will be executed whenever DataTables\r\n         *   needs to set or get the data for a cell in the column. The function\r\n         *   takes three parameters:\r\n         *    * Parameters:\r\n         *      * {array|object} The data source for the row (based on `data`)\r\n         *      * {string} The type call data requested - this will be 'filter',\r\n         *        'display', 'type' or 'sort'.\r\n         *      * {array|object} The full data source for the row (not based on\r\n         *        `data`)\r\n         *    * Return:\r\n         *      * The return value from the function is what will be used for the\r\n         *        data requested.\r\n         *\r\n         *  @type string|int|function|object|null\r\n         *  @default null Use the data source value.\r\n         *\r\n         *  @name DataTable.defaults.column.render\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Create a comma separated list from an array of objects\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"data\": \"engine\" },\r\n\t\t *          { \"data\": \"browser\" },\r\n\t\t *          {\r\n\t\t *            \"data\": \"platform\",\r\n\t\t *            \"render\": \"[, ].name\"\r\n\t\t *          }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Execute a function to obtain data\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [ 0 ],\r\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t\t *          \"render\": \"browserName()\"\r\n\t\t *        } ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // As an object, extracting different data for the different types\r\n         *    // This would be used with a data source such as:\r\n         *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\r\n         *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\r\n         *    // (which has both forms) is used for filtering for if a user inputs either format, while\r\n         *    // the formatted phone number is the one that is shown in the table.\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [ 0 ],\r\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t\t *          \"render\": {\r\n\t\t *            \"_\": \"phone\",\r\n\t\t *            \"filter\": \"phone_filter\",\r\n\t\t *            \"display\": \"phone_display\"\r\n\t\t *          }\r\n\t\t *        } ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Use as a function to create a link from the data source\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [ 0 ],\r\n\t\t *          \"data\": \"download_link\",\r\n\t\t *          \"render\": function ( data, type, full ) {\r\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\r\n\t\t *          }\r\n\t\t *        } ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"mRender\": null,\r\n\r\n\r\n        /**\r\n         * Change the cell type created for the column - either TD cells or TH cells. This\r\n         * can be useful as TH cells have semantic meaning in the table body, allowing them\r\n         * to act as a header for a row (you may wish to add scope='row' to the TH elements).\r\n         *  @type string\r\n         *  @default td\r\n         *\r\n         *  @name DataTable.defaults.column.cellType\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Make the first column use TH cells\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [ {\r\n\t\t *          \"targets\": [ 0 ],\r\n\t\t *          \"cellType\": \"th\"\r\n\t\t *        } ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sCellType\": \"td\",\r\n\r\n\r\n        /**\r\n         * Class to give to each cell in this column.\r\n         *  @type string\r\n         *  @default <i>Empty string</i>\r\n         *\r\n         *  @name DataTable.defaults.column.class\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"class\": \"my_class\" },\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sClass\": \"\",\r\n\r\n        /**\r\n         * When DataTables calculates the column widths to assign to each column,\r\n         * it finds the longest string in each column and then constructs a\r\n         * temporary table and reads the widths from that. The problem with this\r\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n         * string - thus the calculation can go wrong (doing it properly and putting\r\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n         * a \"work around\" we provide this option. It will append its value to the\r\n         * text that is found to be the longest string for the column - i.e. padding.\r\n         * Generally you shouldn't need this!\r\n         *  @type string\r\n         *  @default <i>Empty string<i>\r\n         *\r\n         *  @name DataTable.defaults.column.contentPadding\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          {\r\n\t\t *            \"contentPadding\": \"mmm\"\r\n\t\t *          }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sContentPadding\": \"\",\r\n\r\n\r\n        /**\r\n         * Allows a default value to be given for a column's data, and will be used\r\n         * whenever a null data source is encountered (this can be because `data`\r\n         * is set to null, or because the data source itself is null).\r\n         *  @type string\r\n         *  @default null\r\n         *\r\n         *  @name DataTable.defaults.column.defaultContent\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          {\r\n\t\t *            \"data\": null,\r\n\t\t *            \"defaultContent\": \"Edit\",\r\n\t\t *            \"targets\": [ -1 ]\r\n\t\t *          }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          {\r\n\t\t *            \"data\": null,\r\n\t\t *            \"defaultContent\": \"Edit\"\r\n\t\t *          }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sDefaultContent\": null,\r\n\r\n\r\n        /**\r\n         * This parameter is only used in DataTables' server-side processing. It can\r\n         * be exceptionally useful to know what columns are being displayed on the\r\n         * client side, and to map these to database fields. When defined, the names\r\n         * also allow DataTables to reorder information from the server if it comes\r\n         * back in an unexpected order (i.e. if you switch your columns around on the\r\n         * client-side, your server-side code does not also need updating).\r\n         *  @type string\r\n         *  @default <i>Empty string</i>\r\n         *\r\n         *  @name DataTable.defaults.column.name\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\r\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\r\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\r\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\r\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"name\": \"engine\" },\r\n\t\t *          { \"name\": \"browser\" },\r\n\t\t *          { \"name\": \"platform\" },\r\n\t\t *          { \"name\": \"version\" },\r\n\t\t *          { \"name\": \"grade\" }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sName\": \"\",\r\n\r\n\r\n        /**\r\n         * Defines a data source type for the ordering which can be used to read\r\n         * real-time information from the table (updating the internally cached\r\n         * version) prior to ordering. This allows ordering to occur on user\r\n         * editable elements such as form inputs.\r\n         *  @type string\r\n         *  @default std\r\n         *\r\n         *  @name DataTable.defaults.column.orderDataType\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\r\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\r\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\r\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          { \"orderDataType\": \"dom-text\" },\r\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\r\n\t\t *          { \"orderDataType\": \"dom-select\" },\r\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sSortDataType\": \"std\",\r\n\r\n\r\n        /**\r\n         * The title of this column.\r\n         *  @type string\r\n         *  @default null <i>Derived from the 'TH' value for this column in the\r\n         *    original HTML table.</i>\r\n         *\r\n         *  @name DataTable.defaults.column.title\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"title\": \"My column title\" },\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sTitle\": null,\r\n\r\n\r\n        /**\r\n         * The type allows you to specify how the data for this column will be\r\n         * ordered. Four types (string, numeric, date and html (which will strip\r\n         * HTML tags before ordering)) are currently available. Note that only date\r\n         * formats understood by Javascript's Date() object will be accepted as type\r\n         * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\r\n         * 'numeric', 'date' or 'html' (by default). Further types can be adding\r\n         * through plug-ins.\r\n         *  @type string\r\n         *  @default null <i>Auto-detected from raw data</i>\r\n         *\r\n         *  @name DataTable.defaults.column.type\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"type\": \"html\" },\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sType\": null,\r\n\r\n\r\n        /**\r\n         * Defining the width of the column, this parameter may take any CSS value\r\n         * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\r\n         * been given a specific width through this interface ensuring that the table\r\n         * remains readable.\r\n         *  @type string\r\n         *  @default null <i>Automatic</i>\r\n         *\r\n         *  @name DataTable.defaults.column.width\r\n         *  @dtopt Columns\r\n         *\r\n         *  @example\r\n         *    // Using `columnDefs`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columnDefs\": [\r\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         *\r\n         *  @example\r\n         *    // Using `columns`\r\n         *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"columns\": [\r\n\t\t *          { \"width\": \"20%\" },\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null,\r\n\t\t *          null\r\n\t\t *        ]\r\n\t\t *      } );\r\n\t\t *    } );\r\n         */\r\n        \"sWidth\": null\r\n    };\r\n\r\n    _fnHungarianMap( DataTable.defaults.column );\r\n\r\n\r\n\r\n    /**\r\n     * DataTables settings object - this holds all the information needed for a\r\n     * given table, including configuration, data and current application of the\r\n     * table options. DataTables does not have a single instance for each DataTable\r\n     * with the settings attached to that instance, but rather instances of the\r\n     * DataTable \"class\" are created on-the-fly as needed (typically by a\r\n     * $().dataTable() call) and the settings object is then applied to that\r\n     * instance.\r\n     *\r\n     * Note that this object is related to {@link DataTable.defaults} but this\r\n     * one is the internal data store for DataTables's cache of columns. It should\r\n     * NOT be manipulated outside of DataTables. Any configuration should be done\r\n     * through the initialisation options.\r\n     *  @namespace\r\n     *  @todo Really should attach the settings object to individual instances so we\r\n     *    don't need to create new instances on each $().dataTable() call (if the\r\n     *    table already exists). It would also save passing oSettings around and\r\n     *    into every single function. However, this is a very significant\r\n     *    architecture change for DataTables and will almost certainly break\r\n     *    backwards compatibility with older installations. This is something that\r\n     *    will be done in 2.0.\r\n     */\r\n    DataTable.models.oSettings = {\r\n        /**\r\n         * Primary features of DataTables and their enablement state.\r\n         *  @namespace\r\n         */\r\n        \"oFeatures\": {\r\n\r\n            /**\r\n             * Flag to say if DataTables should automatically try to calculate the\r\n             * optimum table and columns widths (true) or not (false).\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bAutoWidth\": null,\r\n\r\n            /**\r\n             * Delay the creation of TR and TD elements until they are actually\r\n             * needed by a driven page draw. This can give a significant speed\r\n             * increase for Ajax source and Javascript source data, but makes no\r\n             * difference at all fro DOM and server-side processing tables.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bDeferRender\": null,\r\n\r\n            /**\r\n             * Enable filtering on the table or not. Note that if this is disabled\r\n             * then there is no filtering at all on the table, including fnFilter.\r\n             * To just remove the filtering input use sDom and remove the 'f' option.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bFilter\": null,\r\n\r\n            /**\r\n             * Table information element (the 'Showing x of y records' div) enable\r\n             * flag.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bInfo\": null,\r\n\r\n            /**\r\n             * Present a user control allowing the end user to change the page size\r\n             * when pagination is enabled.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bLengthChange\": null,\r\n\r\n            /**\r\n             * Pagination enabled or not. Note that if this is disabled then length\r\n             * changing must also be disabled.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bPaginate\": null,\r\n\r\n            /**\r\n             * Processing indicator enable flag whenever DataTables is enacting a\r\n             * user request - typically an Ajax request for server-side processing.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bProcessing\": null,\r\n\r\n            /**\r\n             * Server-side processing enabled flag - when enabled DataTables will\r\n             * get all data from the server for every draw - there is no filtering,\r\n             * sorting or paging done on the client-side.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bServerSide\": null,\r\n\r\n            /**\r\n             * Sorting enablement flag.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bSort\": null,\r\n\r\n            /**\r\n             * Multi-column sorting\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bSortMulti\": null,\r\n\r\n            /**\r\n             * Apply a class to the columns which are being sorted to provide a\r\n             * visual highlight or not. This can slow things down when enabled since\r\n             * there is a lot of DOM interaction.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bSortClasses\": null,\r\n\r\n            /**\r\n             * State saving enablement flag.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bStateSave\": null\r\n        },\r\n\r\n\r\n        /**\r\n         * Scrolling settings for a table.\r\n         *  @namespace\r\n         */\r\n        \"oScroll\": {\r\n            /**\r\n             * When the table is shorter in height than sScrollY, collapse the\r\n             * table container down to the height of the table (when true).\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type boolean\r\n             */\r\n            \"bCollapse\": null,\r\n\r\n            /**\r\n             * Width of the scrollbar for the web-browser's platform. Calculated\r\n             * during table initialisation.\r\n             *  @type int\r\n             *  @default 0\r\n             */\r\n            \"iBarWidth\": 0,\r\n\r\n            /**\r\n             * Viewport width for horizontal scrolling. Horizontal scrolling is\r\n             * disabled if an empty string.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type string\r\n             */\r\n            \"sX\": null,\r\n\r\n            /**\r\n             * Width to expand the table to when using x-scrolling. Typically you\r\n             * should not need to use this.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type string\r\n             *  @deprecated\r\n             */\r\n            \"sXInner\": null,\r\n\r\n            /**\r\n             * Viewport height for vertical scrolling. Vertical scrolling is disabled\r\n             * if an empty string.\r\n             * Note that this parameter will be set by the initialisation routine. To\r\n             * set a default use {@link DataTable.defaults}.\r\n             *  @type string\r\n             */\r\n            \"sY\": null\r\n        },\r\n\r\n        /**\r\n         * Language information for the table.\r\n         *  @namespace\r\n         *  @extends DataTable.defaults.oLanguage\r\n         */\r\n        \"oLanguage\": {\r\n            /**\r\n             * Information callback function. See\r\n             * {@link DataTable.defaults.fnInfoCallback}\r\n             *  @type function\r\n             *  @default null\r\n             */\r\n            \"fnInfoCallback\": null\r\n        },\r\n\r\n        /**\r\n         * Browser support parameters\r\n         *  @namespace\r\n         */\r\n        \"oBrowser\": {\r\n            /**\r\n             * Indicate if the browser incorrectly calculates width:100% inside a\r\n             * scrolling element (IE6/7)\r\n             *  @type boolean\r\n             *  @default false\r\n             */\r\n            \"bScrollOversize\": false,\r\n\r\n            /**\r\n             * Determine if the vertical scrollbar is on the right or left of the\r\n             * scrolling container - needed for rtl language layout, although not\r\n             * all browsers move the scrollbar (Safari).\r\n             *  @type boolean\r\n             *  @default false\r\n             */\r\n            \"bScrollbarLeft\": false,\r\n\r\n            /**\r\n             * Flag for if `getBoundingClientRect` is fully supported or not\r\n             *  @type boolean\r\n             *  @default false\r\n             */\r\n            \"bBounding\": false,\r\n\r\n            /**\r\n             * Browser scrollbar width\r\n             *  @type integer\r\n             *  @default 0\r\n             */\r\n            \"barWidth\": 0\r\n        },\r\n\r\n\r\n        \"ajax\": null,\r\n\r\n\r\n        /**\r\n         * Array referencing the nodes which are used for the features. The\r\n         * parameters of this object match what is allowed by sDom - i.e.\r\n         *   <ul>\r\n         *     <li>'l' - Length changing</li>\r\n         *     <li>'f' - Filtering input</li>\r\n         *     <li>'t' - The table!</li>\r\n         *     <li>'i' - Information</li>\r\n         *     <li>'p' - Pagination</li>\r\n         *     <li>'r' - pRocessing</li>\r\n         *   </ul>\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aanFeatures\": [],\r\n\r\n        /**\r\n         * Store data information - see {@link DataTable.models.oRow} for detailed\r\n         * information.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoData\": [],\r\n\r\n        /**\r\n         * Array of indexes which are in the current display (after filtering etc)\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aiDisplay\": [],\r\n\r\n        /**\r\n         * Array of indexes for display - no filtering\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aiDisplayMaster\": [],\r\n\r\n        /**\r\n         * Map of row ids to data indexes\r\n         *  @type object\r\n         *  @default {}\r\n         */\r\n        \"aIds\": {},\r\n\r\n        /**\r\n         * Store information about each column that is in use\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoColumns\": [],\r\n\r\n        /**\r\n         * Store information about the table's header\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoHeader\": [],\r\n\r\n        /**\r\n         * Store information about the table's footer\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoFooter\": [],\r\n\r\n        /**\r\n         * Store the applied global search information in case we want to force a\r\n         * research or compare the old search to a new one.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @namespace\r\n         *  @extends DataTable.models.oSearch\r\n         */\r\n        \"oPreviousSearch\": {},\r\n\r\n        /**\r\n         * Store the applied search for each column - see\r\n         * {@link DataTable.models.oSearch} for the format that is used for the\r\n         * filtering information for each column.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoPreSearchCols\": [],\r\n\r\n        /**\r\n         * Sorting that is applied to the table. Note that the inner arrays are\r\n         * used in the following manner:\r\n         * <ul>\r\n         *   <li>Index 0 - column number</li>\r\n         *   <li>Index 1 - current sorting direction</li>\r\n         * </ul>\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type array\r\n         *  @todo These inner arrays should really be objects\r\n         */\r\n        \"aaSorting\": null,\r\n\r\n        /**\r\n         * Sorting that is always applied to the table (i.e. prefixed in front of\r\n         * aaSorting).\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aaSortingFixed\": [],\r\n\r\n        /**\r\n         * Classes to use for the striping of a table.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"asStripeClasses\": null,\r\n\r\n        /**\r\n         * If restoring a table - we should restore its striping classes as well\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"asDestroyStripes\": [],\r\n\r\n        /**\r\n         * If restoring a table - we should restore its width\r\n         *  @type int\r\n         *  @default 0\r\n         */\r\n        \"sDestroyWidth\": 0,\r\n\r\n        /**\r\n         * Callback functions array for every time a row is inserted (i.e. on a draw).\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoRowCallback\": [],\r\n\r\n        /**\r\n         * Callback functions for the header on each draw.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoHeaderCallback\": [],\r\n\r\n        /**\r\n         * Callback function for the footer on each draw.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoFooterCallback\": [],\r\n\r\n        /**\r\n         * Array of callback functions for draw callback functions\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoDrawCallback\": [],\r\n\r\n        /**\r\n         * Array of callback functions for row created function\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoRowCreatedCallback\": [],\r\n\r\n        /**\r\n         * Callback functions for just before the table is redrawn. A return of\r\n         * false will be used to cancel the draw.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoPreDrawCallback\": [],\r\n\r\n        /**\r\n         * Callback functions for when the table has been initialised.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoInitComplete\": [],\r\n\r\n\r\n        /**\r\n         * Callbacks for modifying the settings to be stored for state saving, prior to\r\n         * saving state.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoStateSaveParams\": [],\r\n\r\n        /**\r\n         * Callbacks for modifying the settings that have been stored for state saving\r\n         * prior to using the stored values to restore the state.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoStateLoadParams\": [],\r\n\r\n        /**\r\n         * Callbacks for operating on the settings object once the saved state has been\r\n         * loaded\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoStateLoaded\": [],\r\n\r\n        /**\r\n         * Cache the table ID for quick access\r\n         *  @type string\r\n         *  @default <i>Empty string</i>\r\n         */\r\n        \"sTableId\": \"\",\r\n\r\n        /**\r\n         * The TABLE node for the main table\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTable\": null,\r\n\r\n        /**\r\n         * Permanent ref to the thead element\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTHead\": null,\r\n\r\n        /**\r\n         * Permanent ref to the tfoot element - if it exists\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTFoot\": null,\r\n\r\n        /**\r\n         * Permanent ref to the tbody element\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTBody\": null,\r\n\r\n        /**\r\n         * Cache the wrapper node (contains all DataTables controlled elements)\r\n         *  @type node\r\n         *  @default null\r\n         */\r\n        \"nTableWrapper\": null,\r\n\r\n        /**\r\n         * Indicate if when using server-side processing the loading of data\r\n         * should be deferred until the second draw.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type boolean\r\n         *  @default false\r\n         */\r\n        \"bDeferLoading\": false,\r\n\r\n        /**\r\n         * Indicate if all required information has been read in\r\n         *  @type boolean\r\n         *  @default false\r\n         */\r\n        \"bInitialised\": false,\r\n\r\n        /**\r\n         * Information about open rows. Each object in the array has the parameters\r\n         * 'nTr' and 'nParent'\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoOpenRows\": [],\r\n\r\n        /**\r\n         * Dictate the positioning of DataTables' control elements - see\r\n         * {@link DataTable.model.oInit.sDom}.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sDom\": null,\r\n\r\n        /**\r\n         * Search delay (in mS)\r\n         *  @type integer\r\n         *  @default null\r\n         */\r\n        \"searchDelay\": null,\r\n\r\n        /**\r\n         * Which type of pagination should be used.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type string\r\n         *  @default two_button\r\n         */\r\n        \"sPaginationType\": \"two_button\",\r\n\r\n        /**\r\n         * The state duration (for `stateSave`) in seconds.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type int\r\n         *  @default 0\r\n         */\r\n        \"iStateDuration\": 0,\r\n\r\n        /**\r\n         * Array of callback functions for state saving. Each array element is an\r\n         * object with the following parameters:\r\n         *   <ul>\r\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n         *       and the JSON string to save that has been thus far created. Returns\r\n         *       a JSON string to be inserted into a json object\r\n         *       (i.e. '\"param\": [ 0, 1, 2]')</li>\r\n         *     <li>string:sName - name of callback</li>\r\n         *   </ul>\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoStateSave\": [],\r\n\r\n        /**\r\n         * Array of callback functions for state loading. Each array element is an\r\n         * object with the following parameters:\r\n         *   <ul>\r\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n         *       and the object stored. May return false to cancel state loading</li>\r\n         *     <li>string:sName - name of callback</li>\r\n         *   </ul>\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoStateLoad\": [],\r\n\r\n        /**\r\n         * State that was saved. Useful for back reference\r\n         *  @type object\r\n         *  @default null\r\n         */\r\n        \"oSavedState\": null,\r\n\r\n        /**\r\n         * State that was loaded. Useful for back reference\r\n         *  @type object\r\n         *  @default null\r\n         */\r\n        \"oLoadedState\": null,\r\n\r\n        /**\r\n         * Source url for AJAX data for the table.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sAjaxSource\": null,\r\n\r\n        /**\r\n         * Property from a given object from which to read the table data from. This\r\n         * can be an empty string (when not server-side processing), in which case\r\n         * it is  assumed an an array is given directly.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type string\r\n         */\r\n        \"sAjaxDataProp\": null,\r\n\r\n        /**\r\n         * Note if draw should be blocked while getting data\r\n         *  @type boolean\r\n         *  @default true\r\n         */\r\n        \"bAjaxDataGet\": true,\r\n\r\n        /**\r\n         * The last jQuery XHR object that was used for server-side data gathering.\r\n         * This can be used for working with the XHR information in one of the\r\n         * callbacks\r\n         *  @type object\r\n         *  @default null\r\n         */\r\n        \"jqXHR\": null,\r\n\r\n        /**\r\n         * JSON returned from the server in the last Ajax request\r\n         *  @type object\r\n         *  @default undefined\r\n         */\r\n        \"json\": undefined,\r\n\r\n        /**\r\n         * Data submitted as part of the last Ajax request\r\n         *  @type object\r\n         *  @default undefined\r\n         */\r\n        \"oAjaxData\": undefined,\r\n\r\n        /**\r\n         * Function to get the server-side data.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type function\r\n         */\r\n        \"fnServerData\": null,\r\n\r\n        /**\r\n         * Functions which are called prior to sending an Ajax request so extra\r\n         * parameters can easily be sent to the server\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoServerParams\": [],\r\n\r\n        /**\r\n         * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\r\n         * required).\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type string\r\n         */\r\n        \"sServerMethod\": null,\r\n\r\n        /**\r\n         * Format numbers for display.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type function\r\n         */\r\n        \"fnFormatNumber\": null,\r\n\r\n        /**\r\n         * List of options that can be used for the user selectable length menu.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aLengthMenu\": null,\r\n\r\n        /**\r\n         * Counter for the draws that the table does. Also used as a tracker for\r\n         * server-side processing\r\n         *  @type int\r\n         *  @default 0\r\n         */\r\n        \"iDraw\": 0,\r\n\r\n        /**\r\n         * Indicate if a redraw is being done - useful for Ajax\r\n         *  @type boolean\r\n         *  @default false\r\n         */\r\n        \"bDrawing\": false,\r\n\r\n        /**\r\n         * Draw index (iDraw) of the last error when parsing the returned data\r\n         *  @type int\r\n         *  @default -1\r\n         */\r\n        \"iDrawError\": -1,\r\n\r\n        /**\r\n         * Paging display length\r\n         *  @type int\r\n         *  @default 10\r\n         */\r\n        \"_iDisplayLength\": 10,\r\n\r\n        /**\r\n         * Paging start point - aiDisplay index\r\n         *  @type int\r\n         *  @default 0\r\n         */\r\n        \"_iDisplayStart\": 0,\r\n\r\n        /**\r\n         * Server-side processing - number of records in the result set\r\n         * (i.e. before filtering), Use fnRecordsTotal rather than\r\n         * this property to get the value of the number of records, regardless of\r\n         * the server-side processing setting.\r\n         *  @type int\r\n         *  @default 0\r\n         *  @private\r\n         */\r\n        \"_iRecordsTotal\": 0,\r\n\r\n        /**\r\n         * Server-side processing - number of records in the current display set\r\n         * (i.e. after filtering). Use fnRecordsDisplay rather than\r\n         * this property to get the value of the number of records, regardless of\r\n         * the server-side processing setting.\r\n         *  @type boolean\r\n         *  @default 0\r\n         *  @private\r\n         */\r\n        \"_iRecordsDisplay\": 0,\r\n\r\n        /**\r\n         * Flag to indicate if jQuery UI marking and classes should be used.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type boolean\r\n         */\r\n        \"bJUI\": null,\r\n\r\n        /**\r\n         * The classes to use for the table\r\n         *  @type object\r\n         *  @default {}\r\n         */\r\n        \"oClasses\": {},\r\n\r\n        /**\r\n         * Flag attached to the settings object so you can check in the draw\r\n         * callback if filtering has been done in the draw. Deprecated in favour of\r\n         * events.\r\n         *  @type boolean\r\n         *  @default false\r\n         *  @deprecated\r\n         */\r\n        \"bFiltered\": false,\r\n\r\n        /**\r\n         * Flag attached to the settings object so you can check in the draw\r\n         * callback if sorting has been done in the draw. Deprecated in favour of\r\n         * events.\r\n         *  @type boolean\r\n         *  @default false\r\n         *  @deprecated\r\n         */\r\n        \"bSorted\": false,\r\n\r\n        /**\r\n         * Indicate that if multiple rows are in the header and there is more than\r\n         * one unique cell per column, if the top one (true) or bottom one (false)\r\n         * should be used for sorting / title by DataTables.\r\n         * Note that this parameter will be set by the initialisation routine. To\r\n         * set a default use {@link DataTable.defaults}.\r\n         *  @type boolean\r\n         */\r\n        \"bSortCellsTop\": null,\r\n\r\n        /**\r\n         * Initialisation object that is used for the table\r\n         *  @type object\r\n         *  @default null\r\n         */\r\n        \"oInit\": null,\r\n\r\n        /**\r\n         * Destroy callback functions - for plug-ins to attach themselves to the\r\n         * destroy so they can clean up markup and events.\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aoDestroyCallback\": [],\r\n\r\n\r\n        /**\r\n         * Get the number of records in the current record set, before filtering\r\n         *  @type function\r\n         */\r\n        \"fnRecordsTotal\": function ()\r\n        {\r\n            return _fnDataSource( this ) == 'ssp' ?\r\n            this._iRecordsTotal * 1 :\r\n                this.aiDisplayMaster.length;\r\n        },\r\n\r\n        /**\r\n         * Get the number of records in the current record set, after filtering\r\n         *  @type function\r\n         */\r\n        \"fnRecordsDisplay\": function ()\r\n        {\r\n            return _fnDataSource( this ) == 'ssp' ?\r\n            this._iRecordsDisplay * 1 :\r\n                this.aiDisplay.length;\r\n        },\r\n\r\n        /**\r\n         * Get the display end point - aiDisplay index\r\n         *  @type function\r\n         */\r\n        \"fnDisplayEnd\": function ()\r\n        {\r\n            var\r\n                len      = this._iDisplayLength,\r\n                start    = this._iDisplayStart,\r\n                calc     = start + len,\r\n                records  = this.aiDisplay.length,\r\n                features = this.oFeatures,\r\n                paginate = features.bPaginate;\r\n\r\n            if ( features.bServerSide ) {\r\n                return paginate === false || len === -1 ?\r\n                start + records :\r\n                    Math.min( start+len, this._iRecordsDisplay );\r\n            }\r\n            else {\r\n                return ! paginate || calc>records || len===-1 ?\r\n                    records :\r\n                    calc;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * The DataTables object for this table\r\n         *  @type object\r\n         *  @default null\r\n         */\r\n        \"oInstance\": null,\r\n\r\n        /**\r\n         * Unique identifier for each instance of the DataTables object. If there\r\n         * is an ID on the table node, then it takes that value, otherwise an\r\n         * incrementing internal counter is used.\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"sInstance\": null,\r\n\r\n        /**\r\n         * tabindex attribute value that is added to DataTables control elements, allowing\r\n         * keyboard navigation of the table and its controls.\r\n         */\r\n        \"iTabIndex\": 0,\r\n\r\n        /**\r\n         * DIV container for the footer scrolling table if scrolling\r\n         */\r\n        \"nScrollHead\": null,\r\n\r\n        /**\r\n         * DIV container for the footer scrolling table if scrolling\r\n         */\r\n        \"nScrollFoot\": null,\r\n\r\n        /**\r\n         * Last applied sort\r\n         *  @type array\r\n         *  @default []\r\n         */\r\n        \"aLastSort\": [],\r\n\r\n        /**\r\n         * Stored plug-in instances\r\n         *  @type object\r\n         *  @default {}\r\n         */\r\n        \"oPlugins\": {},\r\n\r\n        /**\r\n         * Function used to get a row's id from the row's data\r\n         *  @type function\r\n         *  @default null\r\n         */\r\n        \"rowIdFn\": null,\r\n\r\n        /**\r\n         * Data location where to store a row's id\r\n         *  @type string\r\n         *  @default null\r\n         */\r\n        \"rowId\": null\r\n    };\r\n\r\n    /**\r\n     * Extension object for DataTables that is used to provide all extension\r\n     * options.\r\n     *\r\n     * Note that the `DataTable.ext` object is available through\r\n     * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\r\n     * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\r\n     *  @namespace\r\n     *  @extends DataTable.models.ext\r\n     */\r\n\r\n\r\n    /**\r\n     * DataTables extensions\r\n     *\r\n     * This namespace acts as a collection area for plug-ins that can be used to\r\n     * extend DataTables capabilities. Indeed many of the build in methods\r\n     * use this method to provide their own capabilities (sorting methods for\r\n     * example).\r\n     *\r\n     * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\r\n     * reasons\r\n     *\r\n     *  @namespace\r\n     */\r\n    DataTable.ext = _ext = {\r\n        /**\r\n         * Buttons. For use with the Buttons extension for DataTables. This is\r\n         * defined here so other extensions can define buttons regardless of load\r\n         * order. It is _not_ used by DataTables core.\r\n         *\r\n         *  @type object\r\n         *  @default {}\r\n         */\r\n        buttons: {},\r\n\r\n\r\n        /**\r\n         * Element class names\r\n         *\r\n         *  @type object\r\n         *  @default {}\r\n         */\r\n        classes: {},\r\n\r\n\r\n        /**\r\n         * DataTables build type (expanded by the download builder)\r\n         *\r\n         *  @type string\r\n         */\r\n        builder: \"-source-\",\r\n\r\n\r\n        /**\r\n         * Error reporting.\r\n         *\r\n         * How should DataTables report an error. Can take the value 'alert',\r\n         * 'throw', 'none' or a function.\r\n         *\r\n         *  @type string|function\r\n         *  @default alert\r\n         */\r\n        errMode: \"alert\",\r\n\r\n\r\n        /**\r\n         * Feature plug-ins.\r\n         *\r\n         * This is an array of objects which describe the feature plug-ins that are\r\n         * available to DataTables. These feature plug-ins are then available for\r\n         * use through the `dom` initialisation option.\r\n         *\r\n         * Each feature plug-in is described by an object which must have the\r\n         * following properties:\r\n         *\r\n         * * `fnInit` - function that is used to initialise the plug-in,\r\n         * * `cFeature` - a character so the feature can be enabled by the `dom`\r\n         *   instillation option. This is case sensitive.\r\n         *\r\n         * The `fnInit` function has the following input parameters:\r\n         *\r\n         * 1. `{object}` DataTables settings object: see\r\n         *    {@link DataTable.models.oSettings}\r\n         *\r\n         * And the following return is expected:\r\n         *\r\n         * * {node|null} The element which contains your feature. Note that the\r\n         *   return may also be void if your plug-in does not require to inject any\r\n         *   DOM elements into DataTables control (`dom`) - for example this might\r\n         *   be useful when developing a plug-in which allows table control via\r\n         *   keyboard entry\r\n         *\r\n         *  @type array\r\n         *\r\n         *  @example\r\n         *    $.fn.dataTable.ext.features.push( {\r\n\t\t *      \"fnInit\": function( oSettings ) {\r\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\r\n\t\t *      },\r\n\t\t *      \"cFeature\": \"T\"\r\n\t\t *    } );\r\n         */\r\n        feature: [],\r\n\r\n\r\n        /**\r\n         * Row searching.\r\n         *\r\n         * This method of searching is complimentary to the default type based\r\n         * searching, and a lot more comprehensive as it allows you complete control\r\n         * over the searching logic. Each element in this array is a function\r\n         * (parameters described below) that is called for every row in the table,\r\n         * and your logic decides if it should be included in the searching data set\r\n         * or not.\r\n         *\r\n         * Searching functions have the following input parameters:\r\n         *\r\n         * 1. `{object}` DataTables settings object: see\r\n         *    {@link DataTable.models.oSettings}\r\n         * 2. `{array|object}` Data for the row to be processed (same as the\r\n         *    original format that was passed in as the data source, or an array\r\n         *    from a DOM data source\r\n         * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\r\n         *    can be useful to retrieve the `TR` element if you need DOM interaction.\r\n         *\r\n         * And the following return is expected:\r\n         *\r\n         * * {boolean} Include the row in the searched result set (true) or not\r\n         *   (false)\r\n         *\r\n         * Note that as with the main search ability in DataTables, technically this\r\n         * is \"filtering\", since it is subtractive. However, for consistency in\r\n         * naming we call it searching here.\r\n         *\r\n         *  @type array\r\n         *  @default []\r\n         *\r\n         *  @example\r\n         *    // The following example shows custom search being applied to the\r\n         *    // fourth column (i.e. the data[3] index) based on two input values\r\n         *    // from the end-user, matching the data in a certain range.\r\n         *    $.fn.dataTable.ext.search.push(\r\n         *      function( settings, data, dataIndex ) {\r\n\t\t *        var min = document.getElementById('min').value * 1;\r\n\t\t *        var max = document.getElementById('max').value * 1;\r\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\r\n\t\t *\r\n\t\t *        if ( min == \"\" && max == \"\" ) {\r\n\t\t *          return true;\r\n\t\t *        }\r\n\t\t *        else if ( min == \"\" && version < max ) {\r\n\t\t *          return true;\r\n\t\t *        }\r\n\t\t *        else if ( min < version && \"\" == max ) {\r\n\t\t *          return true;\r\n\t\t *        }\r\n\t\t *        else if ( min < version && version < max ) {\r\n\t\t *          return true;\r\n\t\t *        }\r\n\t\t *        return false;\r\n\t\t *      }\r\n         *    );\r\n         */\r\n        search: [],\r\n\r\n\r\n        /**\r\n         * Selector extensions\r\n         *\r\n         * The `selector` option can be used to extend the options available for the\r\n         * selector modifier options (`selector-modifier` object data type) that\r\n         * each of the three built in selector types offer (row, column and cell +\r\n         * their plural counterparts). For example the Select extension uses this\r\n         * mechanism to provide an option to select only rows, columns and cells\r\n         * that have been marked as selected by the end user (`{selected: true}`),\r\n         * which can be used in conjunction with the existing built in selector\r\n         * options.\r\n         *\r\n         * Each property is an array to which functions can be pushed. The functions\r\n         * take three attributes:\r\n         *\r\n         * * Settings object for the host table\r\n         * * Options object (`selector-modifier` object type)\r\n         * * Array of selected item indexes\r\n         *\r\n         * The return is an array of the resulting item indexes after the custom\r\n         * selector has been applied.\r\n         *\r\n         *  @type object\r\n         */\r\n        selector: {\r\n            cell: [],\r\n            column: [],\r\n            row: []\r\n        },\r\n\r\n\r\n        /**\r\n         * Internal functions, exposed for used in plug-ins.\r\n         *\r\n         * Please note that you should not need to use the internal methods for\r\n         * anything other than a plug-in (and even then, try to avoid if possible).\r\n         * The internal function may change between releases.\r\n         *\r\n         *  @type object\r\n         *  @default {}\r\n         */\r\n        internal: {},\r\n\r\n\r\n        /**\r\n         * Legacy configuration options. Enable and disable legacy options that\r\n         * are available in DataTables.\r\n         *\r\n         *  @type object\r\n         */\r\n        legacy: {\r\n            /**\r\n             * Enable / disable DataTables 1.9 compatible server-side processing\r\n             * requests\r\n             *\r\n             *  @type boolean\r\n             *  @default null\r\n             */\r\n            ajax: null\r\n        },\r\n\r\n\r\n        /**\r\n         * Pagination plug-in methods.\r\n         *\r\n         * Each entry in this object is a function and defines which buttons should\r\n         * be shown by the pagination rendering method that is used for the table:\r\n         * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\r\n         * buttons are displayed in the document, while the functions here tell it\r\n         * what buttons to display. This is done by returning an array of button\r\n         * descriptions (what each button will do).\r\n         *\r\n         * Pagination types (the four built in options and any additional plug-in\r\n         * options defined here) can be used through the `paginationType`\r\n         * initialisation parameter.\r\n         *\r\n         * The functions defined take two parameters:\r\n         *\r\n         * 1. `{int} page` The current page index\r\n         * 2. `{int} pages` The number of pages in the table\r\n         *\r\n         * Each function is expected to return an array where each element of the\r\n         * array can be one of:\r\n         *\r\n         * * `first` - Jump to first page when activated\r\n         * * `last` - Jump to last page when activated\r\n         * * `previous` - Show previous page when activated\r\n         * * `next` - Show next page when activated\r\n         * * `{int}` - Show page of the index given\r\n         * * `{array}` - A nested array containing the above elements to add a\r\n         *   containing 'DIV' element (might be useful for styling).\r\n         *\r\n         * Note that DataTables v1.9- used this object slightly differently whereby\r\n         * an object with two functions would be defined for each plug-in. That\r\n         * ability is still supported by DataTables 1.10+ to provide backwards\r\n         * compatibility, but this option of use is now decremented and no longer\r\n         * documented in DataTables 1.10+.\r\n         *\r\n         *  @type object\r\n         *  @default {}\r\n         *\r\n         *  @example\r\n         *    // Show previous, next and current page buttons only\r\n         *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\r\n\t\t *      return [ 'previous', page, 'next' ];\r\n\t\t *    };\r\n         */\r\n        pager: {},\r\n\r\n\r\n        renderer: {\r\n            pageButton: {},\r\n            header: {}\r\n        },\r\n\r\n\r\n        /**\r\n         * Ordering plug-ins - custom data source\r\n         *\r\n         * The extension options for ordering of data available here is complimentary\r\n         * to the default type based ordering that DataTables typically uses. It\r\n         * allows much greater control over the the data that is being used to\r\n         * order a column, but is necessarily therefore more complex.\r\n         *\r\n         * This type of ordering is useful if you want to do ordering based on data\r\n         * live from the DOM (for example the contents of an 'input' element) rather\r\n         * than just the static string that DataTables knows of.\r\n         *\r\n         * The way these plug-ins work is that you create an array of the values you\r\n         * wish to be ordering for the column in question and then return that\r\n         * array. The data in the array much be in the index order of the rows in\r\n         * the table (not the currently ordering order!). Which order data gathering\r\n         * function is run here depends on the `dt-init columns.orderDataType`\r\n         * parameter that is used for the column (if any).\r\n         *\r\n         * The functions defined take two parameters:\r\n         *\r\n         * 1. `{object}` DataTables settings object: see\r\n         *    {@link DataTable.models.oSettings}\r\n         * 2. `{int}` Target column index\r\n         *\r\n         * Each function is expected to return an array:\r\n         *\r\n         * * `{array}` Data for the column to be ordering upon\r\n         *\r\n         *  @type array\r\n         *\r\n         *  @example\r\n         *    // Ordering using `input` node values\r\n         *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\r\n         *    {\r\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\r\n\t\t *        return $('input', td).val();\r\n\t\t *      } );\r\n\t\t *    }\r\n         */\r\n        order: {},\r\n\r\n\r\n        /**\r\n         * Type based plug-ins.\r\n         *\r\n         * Each column in DataTables has a type assigned to it, either by automatic\r\n         * detection or by direct assignment using the `type` option for the column.\r\n         * The type of a column will effect how it is ordering and search (plug-ins\r\n         * can also make use of the column type if required).\r\n         *\r\n         * @namespace\r\n         */\r\n        type: {\r\n            /**\r\n             * Type detection functions.\r\n             *\r\n             * The functions defined in this object are used to automatically detect\r\n             * a column's type, making initialisation of DataTables super easy, even\r\n             * when complex data is in the table.\r\n             *\r\n             * The functions defined take two parameters:\r\n             *\r\n             *  1. `{*}` Data from the column cell to be analysed\r\n             *  2. `{settings}` DataTables settings object. This can be used to\r\n             *     perform context specific type detection - for example detection\r\n             *     based on language settings such as using a comma for a decimal\r\n             *     place. Generally speaking the options from the settings will not\r\n             *     be required\r\n             *\r\n             * Each function is expected to return:\r\n             *\r\n             * * `{string|null}` Data type detected, or null if unknown (and thus\r\n             *   pass it on to the other type detection functions.\r\n             *\r\n             *  @type array\r\n             *\r\n             *  @example\r\n             *    // Currency type detection plug-in:\r\n             *    $.fn.dataTable.ext.type.detect.push(\r\n             *      function ( data, settings ) {\r\n\t\t\t *        // Check the numeric part\r\n\t\t\t *        if ( ! $.isNumeric( data.substring(1) ) ) {\r\n\t\t\t *          return null;\r\n\t\t\t *        }\r\n\t\t\t *\r\n\t\t\t *        // Check prefixed by currency\r\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\r\n\t\t\t *          return 'currency';\r\n\t\t\t *        }\r\n\t\t\t *        return null;\r\n\t\t\t *      }\r\n             *    );\r\n             */\r\n            detect: [],\r\n\r\n\r\n            /**\r\n             * Type based search formatting.\r\n             *\r\n             * The type based searching functions can be used to pre-format the\r\n             * data to be search on. For example, it can be used to strip HTML\r\n             * tags or to de-format telephone numbers for numeric only searching.\r\n             *\r\n             * Note that is a search is not defined for a column of a given type,\r\n             * no search formatting will be performed.\r\n             *\r\n             * Pre-processing of searching data plug-ins - When you assign the sType\r\n             * for a column (or have it automatically detected for you by DataTables\r\n             * or a type detection plug-in), you will typically be using this for\r\n             * custom sorting, but it can also be used to provide custom searching\r\n             * by allowing you to pre-processing the data and returning the data in\r\n             * the format that should be searched upon. This is done by adding\r\n             * functions this object with a parameter name which matches the sType\r\n             * for that target column. This is the corollary of <i>afnSortData</i>\r\n             * for searching data.\r\n             *\r\n             * The functions defined take a single parameter:\r\n             *\r\n             *  1. `{*}` Data from the column cell to be prepared for searching\r\n             *\r\n             * Each function is expected to return:\r\n             *\r\n             * * `{string|null}` Formatted string that will be used for the searching.\r\n             *\r\n             *  @type object\r\n             *  @default {}\r\n             *\r\n             *  @example\r\n             *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\r\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\r\n\t\t\t *    }\r\n             */\r\n            search: {},\r\n\r\n\r\n            /**\r\n             * Type based ordering.\r\n             *\r\n             * The column type tells DataTables what ordering to apply to the table\r\n             * when a column is sorted upon. The order for each type that is defined,\r\n             * is defined by the functions available in this object.\r\n             *\r\n             * Each ordering option can be described by three properties added to\r\n             * this object:\r\n             *\r\n             * * `{type}-pre` - Pre-formatting function\r\n             * * `{type}-asc` - Ascending order function\r\n             * * `{type}-desc` - Descending order function\r\n             *\r\n             * All three can be used together, only `{type}-pre` or only\r\n             * `{type}-asc` and `{type}-desc` together. It is generally recommended\r\n             * that only `{type}-pre` is used, as this provides the optimal\r\n             * implementation in terms of speed, although the others are provided\r\n             * for compatibility with existing Javascript sort functions.\r\n             *\r\n             * `{type}-pre`: Functions defined take a single parameter:\r\n             *\r\n             *  1. `{*}` Data from the column cell to be prepared for ordering\r\n             *\r\n             * And return:\r\n             *\r\n             * * `{*}` Data to be sorted upon\r\n             *\r\n             * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\r\n             * functions, taking two parameters:\r\n             *\r\n             *  1. `{*}` Data to compare to the second parameter\r\n             *  2. `{*}` Data to compare to the first parameter\r\n             *\r\n             * And returning:\r\n             *\r\n             * * `{*}` Ordering match: <0 if first parameter should be sorted lower\r\n             *   than the second parameter, ===0 if the two parameters are equal and\r\n             *   >0 if the first parameter should be sorted height than the second\r\n             *   parameter.\r\n             *\r\n             *  @type object\r\n             *  @default {}\r\n             *\r\n             *  @example\r\n             *    // Numeric ordering of formatted numbers with a pre-formatter\r\n             *    $.extend( $.fn.dataTable.ext.type.order, {\r\n\t\t\t *      \"string-pre\": function(x) {\r\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\r\n\t\t\t *        return parseFloat( a );\r\n\t\t\t *      }\r\n\t\t\t *    } );\r\n             *\r\n             *  @example\r\n             *    // Case-sensitive string ordering, with no pre-formatting method\r\n             *    $.extend( $.fn.dataTable.ext.order, {\r\n\t\t\t *      \"string-case-asc\": function(x,y) {\r\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t\t\t *      },\r\n\t\t\t *      \"string-case-desc\": function(x,y) {\r\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t\t\t *      }\r\n\t\t\t *    } );\r\n             */\r\n            order: {}\r\n        },\r\n\r\n        /**\r\n         * Unique DataTables instance counter\r\n         *\r\n         * @type int\r\n         * @private\r\n         */\r\n        _unique: 0,\r\n\r\n\r\n        //\r\n        // Depreciated\r\n        // The following properties are retained for backwards compatiblity only.\r\n        // The should not be used in new projects and will be removed in a future\r\n        // version\r\n        //\r\n\r\n        /**\r\n         * Version check function.\r\n         *  @type function\r\n         *  @depreciated Since 1.10\r\n         */\r\n        fnVersionCheck: DataTable.fnVersionCheck,\r\n\r\n\r\n        /**\r\n         * Index for what 'this' index API functions should use\r\n         *  @type int\r\n         *  @deprecated Since v1.10\r\n         */\r\n        iApiIndex: 0,\r\n\r\n\r\n        /**\r\n         * jQuery UI class container\r\n         *  @type object\r\n         *  @deprecated Since v1.10\r\n         */\r\n        oJUIClasses: {},\r\n\r\n\r\n        /**\r\n         * Software version\r\n         *  @type string\r\n         *  @deprecated Since v1.10\r\n         */\r\n        sVersion: DataTable.version\r\n    };\r\n\r\n\r\n    //\r\n    // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\r\n    //\r\n    $.extend( _ext, {\r\n        afnFiltering: _ext.search,\r\n        aTypes:       _ext.type.detect,\r\n        ofnSearch:    _ext.type.search,\r\n        oSort:        _ext.type.order,\r\n        afnSortData:  _ext.order,\r\n        aoFeatures:   _ext.feature,\r\n        oApi:         _ext.internal,\r\n        oStdClasses:  _ext.classes,\r\n        oPagination:  _ext.pager\r\n    } );\r\n\r\n\r\n    $.extend( DataTable.ext.classes, {\r\n        \"sTable\": \"dataTable\",\r\n        \"sNoFooter\": \"no-footer\",\r\n\r\n        /* Paging buttons */\r\n        \"sPageButton\": \"paginate_button\",\r\n        \"sPageButtonActive\": \"current\",\r\n        \"sPageButtonDisabled\": \"disabled\",\r\n\r\n        /* Striping classes */\r\n        \"sStripeOdd\": \"odd\",\r\n        \"sStripeEven\": \"even\",\r\n\r\n        /* Empty row */\r\n        \"sRowEmpty\": \"dataTables_empty\",\r\n\r\n        /* Features */\r\n        \"sWrapper\": \"dataTables_wrapper\",\r\n        \"sFilter\": \"dataTables_filter\",\r\n        \"sInfo\": \"dataTables_info\",\r\n        \"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\r\n        \"sLength\": \"dataTables_length\",\r\n        \"sProcessing\": \"dataTables_processing\",\r\n\r\n        /* Sorting */\r\n        \"sSortAsc\": \"sorting_asc\",\r\n        \"sSortDesc\": \"sorting_desc\",\r\n        \"sSortable\": \"sorting\", /* Sortable in both directions */\r\n        \"sSortableAsc\": \"sorting_asc_disabled\",\r\n        \"sSortableDesc\": \"sorting_desc_disabled\",\r\n        \"sSortableNone\": \"sorting_disabled\",\r\n        \"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\r\n\r\n        /* Filtering */\r\n        \"sFilterInput\": \"\",\r\n\r\n        /* Page length */\r\n        \"sLengthSelect\": \"\",\r\n\r\n        /* Scrolling */\r\n        \"sScrollWrapper\": \"dataTables_scroll\",\r\n        \"sScrollHead\": \"dataTables_scrollHead\",\r\n        \"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\r\n        \"sScrollBody\": \"dataTables_scrollBody\",\r\n        \"sScrollFoot\": \"dataTables_scrollFoot\",\r\n        \"sScrollFootInner\": \"dataTables_scrollFootInner\",\r\n\r\n        /* Misc */\r\n        \"sHeaderTH\": \"\",\r\n        \"sFooterTH\": \"\",\r\n\r\n        // Deprecated\r\n        \"sSortJUIAsc\": \"\",\r\n        \"sSortJUIDesc\": \"\",\r\n        \"sSortJUI\": \"\",\r\n        \"sSortJUIAscAllowed\": \"\",\r\n        \"sSortJUIDescAllowed\": \"\",\r\n        \"sSortJUIWrapper\": \"\",\r\n        \"sSortIcon\": \"\",\r\n        \"sJUIHeader\": \"\",\r\n        \"sJUIFooter\": \"\"\r\n    } );\r\n\r\n\r\n    (function() {\r\n\r\n        // Reused strings for better compression. Closure compiler appears to have a\r\n        // weird edge case where it is trying to expand strings rather than use the\r\n        // variable version. This results in about 200 bytes being added, for very\r\n        // little preference benefit since it this run on script load only.\r\n        var _empty = '';\r\n        _empty = '';\r\n\r\n        var _stateDefault = _empty + 'ui-state-default';\r\n        var _sortIcon     = _empty + 'css_right ui-icon ui-icon-';\r\n        var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\r\n\r\n        $.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {\r\n            /* Full numbers paging buttons */\r\n            \"sPageButton\":         \"fg-button ui-button \"+_stateDefault,\r\n            \"sPageButtonActive\":   \"ui-state-disabled\",\r\n            \"sPageButtonDisabled\": \"ui-state-disabled\",\r\n\r\n            /* Features */\r\n            \"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \"+\r\n            \"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\r\n\r\n            /* Sorting */\r\n            \"sSortAsc\":            _stateDefault+\" sorting_asc\",\r\n            \"sSortDesc\":           _stateDefault+\" sorting_desc\",\r\n            \"sSortable\":           _stateDefault+\" sorting\",\r\n            \"sSortableAsc\":        _stateDefault+\" sorting_asc_disabled\",\r\n            \"sSortableDesc\":       _stateDefault+\" sorting_desc_disabled\",\r\n            \"sSortableNone\":       _stateDefault+\" sorting_disabled\",\r\n            \"sSortJUIAsc\":         _sortIcon+\"triangle-1-n\",\r\n            \"sSortJUIDesc\":        _sortIcon+\"triangle-1-s\",\r\n            \"sSortJUI\":            _sortIcon+\"carat-2-n-s\",\r\n            \"sSortJUIAscAllowed\":  _sortIcon+\"carat-1-n\",\r\n            \"sSortJUIDescAllowed\": _sortIcon+\"carat-1-s\",\r\n            \"sSortJUIWrapper\":     \"DataTables_sort_wrapper\",\r\n            \"sSortIcon\":           \"DataTables_sort_icon\",\r\n\r\n            /* Scrolling */\r\n            \"sScrollHead\": \"dataTables_scrollHead \"+_stateDefault,\r\n            \"sScrollFoot\": \"dataTables_scrollFoot \"+_stateDefault,\r\n\r\n            /* Misc */\r\n            \"sHeaderTH\":  _stateDefault,\r\n            \"sFooterTH\":  _stateDefault,\r\n            \"sJUIHeader\": _headerFooter+\" ui-corner-tl ui-corner-tr\",\r\n            \"sJUIFooter\": _headerFooter+\" ui-corner-bl ui-corner-br\"\r\n        } );\r\n\r\n    }());\r\n\r\n\r\n\r\n    var extPagination = DataTable.ext.pager;\r\n\r\n    function _numbers ( page, pages ) {\r\n        var\r\n            numbers = [],\r\n            buttons = extPagination.numbers_length,\r\n            half = Math.floor( buttons / 2 ),\r\n            i = 1;\r\n\r\n        if ( pages <= buttons ) {\r\n            numbers = _range( 0, pages );\r\n        }\r\n        else if ( page <= half ) {\r\n            numbers = _range( 0, buttons-2 );\r\n            numbers.push( 'ellipsis' );\r\n            numbers.push( pages-1 );\r\n        }\r\n        else if ( page >= pages - 1 - half ) {\r\n            numbers = _range( pages-(buttons-2), pages );\r\n            numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\r\n            numbers.splice( 0, 0, 0 );\r\n        }\r\n        else {\r\n            numbers = _range( page-half+2, page+half-1 );\r\n            numbers.push( 'ellipsis' );\r\n            numbers.push( pages-1 );\r\n            numbers.splice( 0, 0, 'ellipsis' );\r\n            numbers.splice( 0, 0, 0 );\r\n        }\r\n\r\n        numbers.DT_el = 'span';\r\n        return numbers;\r\n    }\r\n\r\n\r\n    $.extend( extPagination, {\r\n        simple: function ( page, pages ) {\r\n            return [ 'previous', 'next' ];\r\n        },\r\n\r\n        full: function ( page, pages ) {\r\n            return [  'first', 'previous', 'next', 'last' ];\r\n        },\r\n\r\n        numbers: function ( page, pages ) {\r\n            return [ _numbers(page, pages) ];\r\n        },\r\n\r\n        simple_numbers: function ( page, pages ) {\r\n            return [ 'previous', _numbers(page, pages), 'next' ];\r\n        },\r\n\r\n        full_numbers: function ( page, pages ) {\r\n            return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\r\n        },\r\n\r\n        // For testing and plug-ins to use\r\n        _numbers: _numbers,\r\n\r\n        // Number of number buttons (including ellipsis) to show. _Must be odd!_\r\n        numbers_length: 7\r\n    } );\r\n\r\n\r\n    $.extend( true, DataTable.ext.renderer, {\r\n        pageButton: {\r\n            _: function ( settings, host, idx, buttons, page, pages ) {\r\n                var classes = settings.oClasses;\r\n                var lang = settings.oLanguage.oPaginate;\r\n                var aria = settings.oLanguage.oAria.paginate || {};\r\n                var btnDisplay, btnClass, counter=0;\r\n\r\n                var attach = function( container, buttons ) {\r\n                    var i, ien, node, button;\r\n                    var clickHandler = function ( e ) {\r\n                        _fnPageChange( settings, e.data.action, true );\r\n                    };\r\n\r\n                    for ( i=0, ien=buttons.length ; i<ien ; i++ ) {\r\n                        button = buttons[i];\r\n\r\n                        if ( $.isArray( button ) ) {\r\n                            var inner = $( '<'+(button.DT_el || 'div')+'/>' )\r\n                                .appendTo( container );\r\n                            attach( inner, button );\r\n                        }\r\n                        else {\r\n                            btnDisplay = null;\r\n                            btnClass = '';\r\n\r\n                            switch ( button ) {\r\n                                case 'ellipsis':\r\n                                    container.append('<span class=\"ellipsis\">&#x2026;</span>');\r\n                                    break;\r\n\r\n                                case 'first':\r\n                                    btnDisplay = lang.sFirst;\r\n                                    btnClass = button + (page > 0 ?\r\n                                            '' : ' '+classes.sPageButtonDisabled);\r\n                                    break;\r\n\r\n                                case 'previous':\r\n                                    btnDisplay = lang.sPrevious;\r\n                                    btnClass = button + (page > 0 ?\r\n                                            '' : ' '+classes.sPageButtonDisabled);\r\n                                    break;\r\n\r\n                                case 'next':\r\n                                    btnDisplay = lang.sNext;\r\n                                    btnClass = button + (page < pages-1 ?\r\n                                            '' : ' '+classes.sPageButtonDisabled);\r\n                                    break;\r\n\r\n                                case 'last':\r\n                                    btnDisplay = lang.sLast;\r\n                                    btnClass = button + (page < pages-1 ?\r\n                                            '' : ' '+classes.sPageButtonDisabled);\r\n                                    break;\r\n\r\n                                default:\r\n                                    btnDisplay = button + 1;\r\n                                    btnClass = page === button ?\r\n                                        classes.sPageButtonActive : '';\r\n                                    break;\r\n                            }\r\n\r\n                            if ( btnDisplay !== null ) {\r\n                                node = $('<a>', {\r\n                                    'class': classes.sPageButton+' '+btnClass,\r\n                                    'aria-controls': settings.sTableId,\r\n                                    'aria-label': aria[ button ],\r\n                                    'data-dt-idx': counter,\r\n                                    'tabindex': settings.iTabIndex,\r\n                                    'id': idx === 0 && typeof button === 'string' ?\r\n                                    settings.sTableId +'_'+ button :\r\n                                        null\r\n                                } )\r\n                                    .html( btnDisplay )\r\n                                    .appendTo( container );\r\n\r\n                                _fnBindAction(\r\n                                    node, {action: button}, clickHandler\r\n                                );\r\n\r\n                                counter++;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // IE9 throws an 'unknown error' if document.activeElement is used\r\n                // inside an iframe or frame. Try / catch the error. Not good for\r\n                // accessibility, but neither are frames.\r\n                var activeEl;\r\n\r\n                try {\r\n                    // Because this approach is destroying and recreating the paging\r\n                    // elements, focus is lost on the select button which is bad for\r\n                    // accessibility. So we want to restore focus once the draw has\r\n                    // completed\r\n                    activeEl = $(host).find(document.activeElement).data('dt-idx');\r\n                }\r\n                catch (e) {}\r\n\r\n                attach( $(host).empty(), buttons );\r\n\r\n                if ( activeEl ) {\r\n                    $(host).find( '[data-dt-idx='+activeEl+']' ).focus();\r\n                }\r\n            }\r\n        }\r\n    } );\r\n\r\n\r\n\r\n    // Built in type detection. See model.ext.aTypes for information about\r\n    // what is required from this methods.\r\n    $.extend( DataTable.ext.type.detect, [\r\n        // Plain numbers - first since V8 detects some plain numbers as dates\r\n        // e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\r\n        function ( d, settings )\r\n        {\r\n            var decimal = settings.oLanguage.sDecimal;\r\n            return _isNumber( d, decimal ) ? 'num'+decimal : null;\r\n        },\r\n\r\n        // Dates (only those recognised by the browser's Date.parse)\r\n        function ( d, settings )\r\n        {\r\n            // V8 will remove any unknown characters at the start and end of the\r\n            // expression, leading to false matches such as `$245.12` or `10%` being\r\n            // a valid date. See forum thread 18941 for detail.\r\n            if ( d && !(d instanceof Date) && ( ! _re_date_start.test(d) || ! _re_date_end.test(d) ) ) {\r\n                return null;\r\n            }\r\n            var parsed = Date.parse(d);\r\n            return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\r\n        },\r\n\r\n        // Formatted numbers\r\n        function ( d, settings )\r\n        {\r\n            var decimal = settings.oLanguage.sDecimal;\r\n            return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\r\n        },\r\n\r\n        // HTML numeric\r\n        function ( d, settings )\r\n        {\r\n            var decimal = settings.oLanguage.sDecimal;\r\n            return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\r\n        },\r\n\r\n        // HTML numeric, formatted\r\n        function ( d, settings )\r\n        {\r\n            var decimal = settings.oLanguage.sDecimal;\r\n            return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\r\n        },\r\n\r\n        // HTML (this is strict checking - there must be html)\r\n        function ( d, settings )\r\n        {\r\n            return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\r\n                'html' : null;\r\n        }\r\n    ] );\r\n\r\n\r\n\r\n    // Filter formatting functions. See model.ext.ofnSearch for information about\r\n    // what is required from these methods.\r\n    //\r\n    // Note that additional search methods are added for the html numbers and\r\n    // html formatted numbers by `_addNumericSort()` when we know what the decimal\r\n    // place is\r\n\r\n\r\n    $.extend( DataTable.ext.type.search, {\r\n        html: function ( data ) {\r\n            return _empty(data) ?\r\n                data :\r\n                typeof data === 'string' ?\r\n                    data\r\n                        .replace( _re_new_lines, \" \" )\r\n                        .replace( _re_html, \"\" ) :\r\n                    '';\r\n        },\r\n\r\n        string: function ( data ) {\r\n            return _empty(data) ?\r\n                data :\r\n                typeof data === 'string' ?\r\n                    data.replace( _re_new_lines, \" \" ) :\r\n                    data;\r\n        }\r\n    } );\r\n\r\n\r\n\r\n    var __numericReplace = function ( d, decimalPlace, re1, re2 ) {\r\n        if ( d !== 0 && (!d || d === '-') ) {\r\n            return -Infinity;\r\n        }\r\n\r\n        // If a decimal place other than `.` is used, it needs to be given to the\r\n        // function so we can detect it and replace with a `.` which is the only\r\n        // decimal place Javascript recognises - it is not locale aware.\r\n        if ( decimalPlace ) {\r\n            d = _numToDecimal( d, decimalPlace );\r\n        }\r\n\r\n        if ( d.replace ) {\r\n            if ( re1 ) {\r\n                d = d.replace( re1, '' );\r\n            }\r\n\r\n            if ( re2 ) {\r\n                d = d.replace( re2, '' );\r\n            }\r\n        }\r\n\r\n        return d * 1;\r\n    };\r\n\r\n\r\n    // Add the numeric 'deformatting' functions for sorting and search. This is done\r\n    // in a function to provide an easy ability for the language options to add\r\n    // additional methods if a non-period decimal place is used.\r\n    function _addNumericSort ( decimalPlace ) {\r\n        $.each(\r\n            {\r\n                // Plain numbers\r\n                \"num\": function ( d ) {\r\n                    return __numericReplace( d, decimalPlace );\r\n                },\r\n\r\n                // Formatted numbers\r\n                \"num-fmt\": function ( d ) {\r\n                    return __numericReplace( d, decimalPlace, _re_formatted_numeric );\r\n                },\r\n\r\n                // HTML numeric\r\n                \"html-num\": function ( d ) {\r\n                    return __numericReplace( d, decimalPlace, _re_html );\r\n                },\r\n\r\n                // HTML numeric, formatted\r\n                \"html-num-fmt\": function ( d ) {\r\n                    return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\r\n                }\r\n            },\r\n            function ( key, fn ) {\r\n                // Add the ordering method\r\n                _ext.type.order[ key+decimalPlace+'-pre' ] = fn;\r\n\r\n                // For HTML types add a search formatter that will strip the HTML\r\n                if ( key.match(/^html\\-/) ) {\r\n                    _ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    // Default sort methods\r\n    $.extend( _ext.type.order, {\r\n        // Dates\r\n        \"date-pre\": function ( d ) {\r\n            return Date.parse( d ) || 0;\r\n        },\r\n\r\n        // html\r\n        \"html-pre\": function ( a ) {\r\n            return _empty(a) ?\r\n                '' :\r\n                a.replace ?\r\n                    a.replace( /<.*?>/g, \"\" ).toLowerCase() :\r\n                a+'';\r\n        },\r\n\r\n        // string\r\n        \"string-pre\": function ( a ) {\r\n            // This is a little complex, but faster than always calling toString,\r\n            // http://jsperf.com/tostring-v-check\r\n            return _empty(a) ?\r\n                '' :\r\n                typeof a === 'string' ?\r\n                    a.toLowerCase() :\r\n                    ! a.toString ?\r\n                        '' :\r\n                        a.toString();\r\n        },\r\n\r\n        // string-asc and -desc are retained only for compatibility with the old\r\n        // sort methods\r\n        \"string-asc\": function ( x, y ) {\r\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n        },\r\n\r\n        \"string-desc\": function ( x, y ) {\r\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n        }\r\n    } );\r\n\r\n\r\n    // Numeric sorting types - order doesn't matter here\r\n    _addNumericSort( '' );\r\n\r\n\r\n    $.extend( true, DataTable.ext.renderer, {\r\n        header: {\r\n            _: function ( settings, cell, column, classes ) {\r\n                // No additional mark-up required\r\n                // Attach a sort listener to update on sort - note that using the\r\n                // `DT` namespace will allow the event to be removed automatically\r\n                // on destroy, while the `dt` namespaced event is the one we are\r\n                // listening for\r\n                $(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n                    if ( settings !== ctx ) { // need to check this this is the host\r\n                        return;               // table, not a nested one\r\n                    }\r\n\r\n                    var colIdx = column.idx;\r\n\r\n                    cell\r\n                        .removeClass(\r\n                            column.sSortingClass +' '+\r\n                            classes.sSortAsc +' '+\r\n                            classes.sSortDesc\r\n                        )\r\n                        .addClass( columns[ colIdx ] == 'asc' ?\r\n                            classes.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n                            classes.sSortDesc :\r\n                            column.sSortingClass\r\n                        );\r\n                } );\r\n            },\r\n\r\n            jqueryui: function ( settings, cell, column, classes ) {\r\n                $('<div/>')\r\n                    .addClass( classes.sSortJUIWrapper )\r\n                    .append( cell.contents() )\r\n                    .append( $('<span/>')\r\n                        .addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\r\n                    )\r\n                    .appendTo( cell );\r\n\r\n                // Attach a sort listener to update on sort\r\n                $(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n                    if ( settings !== ctx ) {\r\n                        return;\r\n                    }\r\n\r\n                    var colIdx = column.idx;\r\n\r\n                    cell\r\n                        .removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\r\n                        .addClass( columns[ colIdx ] == 'asc' ?\r\n                            classes.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n                            classes.sSortDesc :\r\n                            column.sSortingClass\r\n                        );\r\n\r\n                    cell\r\n                        .find( 'span.'+classes.sSortIcon )\r\n                        .removeClass(\r\n                            classes.sSortJUIAsc +\" \"+\r\n                            classes.sSortJUIDesc +\" \"+\r\n                            classes.sSortJUI +\" \"+\r\n                            classes.sSortJUIAscAllowed +\" \"+\r\n                            classes.sSortJUIDescAllowed\r\n                        )\r\n                        .addClass( columns[ colIdx ] == 'asc' ?\r\n                            classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\r\n                            classes.sSortJUIDesc :\r\n                            column.sSortingClassJUI\r\n                        );\r\n                } );\r\n            }\r\n        }\r\n    } );\r\n\r\n    /*\r\n     * Public helper functions. These aren't used internally by DataTables, or\r\n     * called by any of the options passed into DataTables, but they can be used\r\n     * externally by developers working with DataTables. They are helper functions\r\n     * to make working with DataTables a little bit easier.\r\n     */\r\n\r\n    var __htmlEscapeEntities = function ( d ) {\r\n        return typeof d === 'string' ?\r\n            d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\r\n            d;\r\n    };\r\n\r\n    /**\r\n     * Helpers for `columns.render`.\r\n     *\r\n     * The options defined here can be used with the `columns.render` initialisation\r\n     * option to provide a display renderer. The following functions are defined:\r\n     *\r\n     * * `number` - Will format numeric data (defined by `columns.data`) for\r\n     *   display, retaining the original unformatted data for sorting and filtering.\r\n     *   It takes 5 parameters:\r\n     *   * `string` - Thousands grouping separator\r\n     *   * `string` - Decimal point indicator\r\n     *   * `integer` - Number of decimal points to show\r\n     *   * `string` (optional) - Prefix.\r\n     *   * `string` (optional) - Postfix (/suffix).\r\n     * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\r\n     *   parameters.\r\n     *\r\n     * @example\r\n     *   // Column definition using the number renderer\r\n     *   {\r\n\t *     data: \"salary\",\r\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\r\n\t *   }\r\n     *\r\n     * @namespace\r\n     */\r\n    DataTable.render = {\r\n        number: function ( thousands, decimal, precision, prefix, postfix ) {\r\n            return {\r\n                display: function ( d ) {\r\n                    if ( typeof d !== 'number' && typeof d !== 'string' ) {\r\n                        return d;\r\n                    }\r\n\r\n                    var negative = d < 0 ? '-' : '';\r\n                    var flo = parseFloat( d );\r\n\r\n                    // If NaN then there isn't much formatting that we can do - just\r\n                    // return immediately, escaping any HTML (this was supposed to\r\n                    // be a number after all)\r\n                    if ( isNaN( flo ) ) {\r\n                        return __htmlEscapeEntities( d );\r\n                    }\r\n\r\n                    d = Math.abs( flo );\r\n\r\n                    var intPart = parseInt( d, 10 );\r\n                    var floatPart = precision ?\r\n                    decimal+(d - intPart).toFixed( precision ).substring( 2 ):\r\n                        '';\r\n\r\n                    return negative + (prefix||'') +\r\n                        intPart.toString().replace(\r\n                            /\\B(?=(\\d{3})+(?!\\d))/g, thousands\r\n                        ) +\r\n                        floatPart +\r\n                        (postfix||'');\r\n                }\r\n            };\r\n        },\r\n\r\n        text: function () {\r\n            return {\r\n                display: __htmlEscapeEntities\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /*\r\n     * This is really a good bit rubbish this method of exposing the internal methods\r\n     * publicly... - To be fixed in 2.0 using methods on the prototype\r\n     */\r\n\r\n\r\n    /**\r\n     * Create a wrapper function for exporting an internal functions to an external API.\r\n     *  @param {string} fn API function name\r\n     *  @returns {function} wrapped function\r\n     *  @memberof DataTable#internal\r\n     */\r\n    function _fnExternApiFunc (fn)\r\n    {\r\n        return function() {\r\n            var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\r\n                Array.prototype.slice.call(arguments)\r\n            );\r\n            return DataTable.ext.internal[fn].apply( this, args );\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Reference to internal functions for use by plug-in developers. Note that\r\n     * these methods are references to internal functions and are considered to be\r\n     * private. If you use these methods, be aware that they are liable to change\r\n     * between versions.\r\n     *  @namespace\r\n     */\r\n    $.extend( DataTable.ext.internal, {\r\n        _fnExternApiFunc: _fnExternApiFunc,\r\n        _fnBuildAjax: _fnBuildAjax,\r\n        _fnAjaxUpdate: _fnAjaxUpdate,\r\n        _fnAjaxParameters: _fnAjaxParameters,\r\n        _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\r\n        _fnAjaxDataSrc: _fnAjaxDataSrc,\r\n        _fnAddColumn: _fnAddColumn,\r\n        _fnColumnOptions: _fnColumnOptions,\r\n        _fnAdjustColumnSizing: _fnAdjustColumnSizing,\r\n        _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\r\n        _fnColumnIndexToVisible: _fnColumnIndexToVisible,\r\n        _fnVisbleColumns: _fnVisbleColumns,\r\n        _fnGetColumns: _fnGetColumns,\r\n        _fnColumnTypes: _fnColumnTypes,\r\n        _fnApplyColumnDefs: _fnApplyColumnDefs,\r\n        _fnHungarianMap: _fnHungarianMap,\r\n        _fnCamelToHungarian: _fnCamelToHungarian,\r\n        _fnLanguageCompat: _fnLanguageCompat,\r\n        _fnBrowserDetect: _fnBrowserDetect,\r\n        _fnAddData: _fnAddData,\r\n        _fnAddTr: _fnAddTr,\r\n        _fnNodeToDataIndex: _fnNodeToDataIndex,\r\n        _fnNodeToColumnIndex: _fnNodeToColumnIndex,\r\n        _fnGetCellData: _fnGetCellData,\r\n        _fnSetCellData: _fnSetCellData,\r\n        _fnSplitObjNotation: _fnSplitObjNotation,\r\n        _fnGetObjectDataFn: _fnGetObjectDataFn,\r\n        _fnSetObjectDataFn: _fnSetObjectDataFn,\r\n        _fnGetDataMaster: _fnGetDataMaster,\r\n        _fnClearTable: _fnClearTable,\r\n        _fnDeleteIndex: _fnDeleteIndex,\r\n        _fnInvalidate: _fnInvalidate,\r\n        _fnGetRowElements: _fnGetRowElements,\r\n        _fnCreateTr: _fnCreateTr,\r\n        _fnBuildHead: _fnBuildHead,\r\n        _fnDrawHead: _fnDrawHead,\r\n        _fnDraw: _fnDraw,\r\n        _fnReDraw: _fnReDraw,\r\n        _fnAddOptionsHtml: _fnAddOptionsHtml,\r\n        _fnDetectHeader: _fnDetectHeader,\r\n        _fnGetUniqueThs: _fnGetUniqueThs,\r\n        _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\r\n        _fnFilterComplete: _fnFilterComplete,\r\n        _fnFilterCustom: _fnFilterCustom,\r\n        _fnFilterColumn: _fnFilterColumn,\r\n        _fnFilter: _fnFilter,\r\n        _fnFilterCreateSearch: _fnFilterCreateSearch,\r\n        _fnEscapeRegex: _fnEscapeRegex,\r\n        _fnFilterData: _fnFilterData,\r\n        _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\r\n        _fnUpdateInfo: _fnUpdateInfo,\r\n        _fnInfoMacros: _fnInfoMacros,\r\n        _fnInitialise: _fnInitialise,\r\n        _fnInitComplete: _fnInitComplete,\r\n        _fnLengthChange: _fnLengthChange,\r\n        _fnFeatureHtmlLength: _fnFeatureHtmlLength,\r\n        _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\r\n        _fnPageChange: _fnPageChange,\r\n        _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\r\n        _fnProcessingDisplay: _fnProcessingDisplay,\r\n        _fnFeatureHtmlTable: _fnFeatureHtmlTable,\r\n        _fnScrollDraw: _fnScrollDraw,\r\n        _fnApplyToChildren: _fnApplyToChildren,\r\n        _fnCalculateColumnWidths: _fnCalculateColumnWidths,\r\n        _fnThrottle: _fnThrottle,\r\n        _fnConvertToWidth: _fnConvertToWidth,\r\n        _fnGetWidestNode: _fnGetWidestNode,\r\n        _fnGetMaxLenString: _fnGetMaxLenString,\r\n        _fnStringToCss: _fnStringToCss,\r\n        _fnSortFlatten: _fnSortFlatten,\r\n        _fnSort: _fnSort,\r\n        _fnSortAria: _fnSortAria,\r\n        _fnSortListener: _fnSortListener,\r\n        _fnSortAttachListener: _fnSortAttachListener,\r\n        _fnSortingClasses: _fnSortingClasses,\r\n        _fnSortData: _fnSortData,\r\n        _fnSaveState: _fnSaveState,\r\n        _fnLoadState: _fnLoadState,\r\n        _fnSettingsFromNode: _fnSettingsFromNode,\r\n        _fnLog: _fnLog,\r\n        _fnMap: _fnMap,\r\n        _fnBindAction: _fnBindAction,\r\n        _fnCallbackReg: _fnCallbackReg,\r\n        _fnCallbackFire: _fnCallbackFire,\r\n        _fnLengthOverflow: _fnLengthOverflow,\r\n        _fnRenderer: _fnRenderer,\r\n        _fnDataSource: _fnDataSource,\r\n        _fnRowAttributes: _fnRowAttributes,\r\n        _fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\r\n                                        // in 1.10, so this dead-end function is\r\n                                        // added to prevent errors\r\n    } );\r\n\r\n\r\n    // jQuery access\r\n    $.fn.dataTable = DataTable;\r\n\r\n    // Provide access to the host jQuery object (circular reference)\r\n    DataTable.$ = $;\r\n\r\n    // Legacy aliases\r\n    $.fn.dataTableSettings = DataTable.settings;\r\n    $.fn.dataTableExt = DataTable.ext;\r\n\r\n    // With a capital `D` we return a DataTables API instance rather than a\r\n    // jQuery object\r\n    $.fn.DataTable = function ( opts ) {\r\n        return $(this).dataTable( opts ).api();\r\n    };\r\n\r\n    // All properties that are available to $.fn.dataTable should also be\r\n    // available on $.fn.DataTable\r\n    $.each( DataTable, function ( prop, val ) {\r\n        $.fn.DataTable[ prop ] = val;\r\n    } );\r\n\r\n\r\n    // Information about events fired by DataTables - for documentation.\r\n    /**\r\n     * Draw event, fired whenever the table is redrawn on the page, at the same\r\n     * point as fnDrawCallback. This may be useful for binding events or\r\n     * performing calculations when the table is altered at all.\r\n     *  @name DataTable#draw.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     */\r\n\r\n    /**\r\n     * Search event, fired when the searching applied to the table (using the\r\n     * built-in global search, or column filters) is altered.\r\n     *  @name DataTable#search.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     */\r\n\r\n    /**\r\n     * Page change event, fired when the paging of the table is altered.\r\n     *  @name DataTable#page.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     */\r\n\r\n    /**\r\n     * Order event, fired when the ordering applied to the table is altered.\r\n     *  @name DataTable#order.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     */\r\n\r\n    /**\r\n     * DataTables initialisation complete event, fired when the table is fully\r\n     * drawn, including Ajax data loaded, if Ajax data is required.\r\n     *  @name DataTable#init.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} oSettings DataTables settings object\r\n     *  @param {object} json The JSON object request from the server - only\r\n     *    present if client-side Ajax sourced data is used</li></ol>\r\n     */\r\n\r\n    /**\r\n     * State save event, fired when the table has changed state a new state save\r\n     * is required. This event allows modification of the state saving object\r\n     * prior to actually doing the save, including addition or other state\r\n     * properties (for plug-ins) or modification of a DataTables core property.\r\n     *  @name DataTable#stateSaveParams.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} oSettings DataTables settings object\r\n     *  @param {object} json The state information to be saved\r\n     */\r\n\r\n    /**\r\n     * State load event, fired when the table is loading state from the stored\r\n     * data, but prior to the settings object being modified by the saved state\r\n     * - allowing modification of the saved state is required or loading of\r\n     * state for a plug-in.\r\n     *  @name DataTable#stateLoadParams.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} oSettings DataTables settings object\r\n     *  @param {object} json The saved state information\r\n     */\r\n\r\n    /**\r\n     * State loaded event, fired when state has been loaded from stored data and\r\n     * the settings object has been modified by the loaded data.\r\n     *  @name DataTable#stateLoaded.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} oSettings DataTables settings object\r\n     *  @param {object} json The saved state information\r\n     */\r\n\r\n    /**\r\n     * Processing event, fired when DataTables is doing some kind of processing\r\n     * (be it, order, searcg or anything else). It can be used to indicate to\r\n     * the end user that there is something happening, or that something has\r\n     * finished.\r\n     *  @name DataTable#processing.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} oSettings DataTables settings object\r\n     *  @param {boolean} bShow Flag for if DataTables is doing processing or not\r\n     */\r\n\r\n    /**\r\n     * Ajax (XHR) event, fired whenever an Ajax request is completed from a\r\n     * request to made to the server for new data. This event is called before\r\n     * DataTables processed the returned data, so it can also be used to pre-\r\n     * process the data returned from the server, if needed.\r\n     *\r\n     * Note that this trigger is called in `fnServerData`, if you override\r\n     * `fnServerData` and which to use this event, you need to trigger it in you\r\n     * success function.\r\n     *  @name DataTable#xhr.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     *  @param {object} json JSON returned from the server\r\n     *\r\n     *  @example\r\n     *     // Use a custom property returned from the server in another DOM element\r\n     *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\r\n\t *       $('#status').html( json.status );\r\n\t *     } );\r\n     *\r\n     *  @example\r\n     *     // Pre-process the data returned from the server\r\n     *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\r\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\r\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\r\n\t *       }\r\n\t *       // Note no return - manipulate the data directly in the JSON object.\r\n\t *     } );\r\n     */\r\n\r\n    /**\r\n     * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\r\n     * or passing the bDestroy:true parameter in the initialisation object. This\r\n     * can be used to remove bound events, added DOM nodes, etc.\r\n     *  @name DataTable#destroy.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     */\r\n\r\n    /**\r\n     * Page length change event, fired when number of records to show on each\r\n     * page (the length) is changed.\r\n     *  @name DataTable#length.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     *  @param {integer} len New length\r\n     */\r\n\r\n    /**\r\n     * Column sizing has changed.\r\n     *  @name DataTable#column-sizing.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     */\r\n\r\n    /**\r\n     * Column visibility has changed.\r\n     *  @name DataTable#column-visibility.dt\r\n     *  @event\r\n     *  @param {event} e jQuery event object\r\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\r\n     *  @param {int} column Column index\r\n     *  @param {bool} vis `false` if column now hidden, or `true` if visible\r\n     */\r\n\r\n    return $.fn.dataTable;\r\n}));","UOL_PagSeguro/js/public.js":"/**\r\n *\r\n * Modals\r\n *\r\n */\r\nvar Modal = {\r\n    'Load' : function(title, content){\r\n        require([\r\n            'Magento_Ui/js/modal/alert'\r\n        ], function(alert) {\r\n            alert({\r\n                title: title,\r\n                content: content,\r\n                clickableOverlay: true,\r\n\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * Ajax call's\r\n *\r\n */\r\nvar WS = {\r\n\r\n    'Ajax' : {\r\n\r\n        'Conciliation' : {\r\n\r\n            'Search' : function(url)\r\n            {\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/conciliation/request',\r\n                    data: {form_key: window.FORM_KEY, days: jQuery('#conciliation-days').val()},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n\r\n                    if (response.success) {\r\n\r\n                        var t = jQuery('#pagseguro-datatable').DataTable();\r\n\r\n                        //Cleans up the table\r\n                        t.clear().draw();\r\n\r\n                        //Check the array for data, if not empty insert data else clear the table.\r\n                        if (response.payload.data.length > 0) {\r\n                            // Create a new table row for all array positions\r\n                            response.payload.data.forEach(function(item){\r\n                                t.row.add( [\r\n                                    \"<input type='checkbox' data-target='conciliation' data-block='\"+item.details+\"'/>\",\r\n                                    item.date,\r\n                                    item.magento_id,\r\n                                    item.pagseguro_id,\r\n                                    item.magento_status,\r\n                                    item.pagseguro_status,\r\n                                    '<a href=\"'+url+'/sales/order/view/order_id/'+item.order_id+'/key/'+window.FORM_KEY+'\" target=\"_blank\">Ver detalhes</a>'\r\n                                ] );\r\n                                //Adjust column width\r\n                                t.columns.adjust().draw(false);\r\n                            });\r\n                        } else {\r\n                            //Alert\r\n                            Modal.Load('Concilia\u00e7\u00e3o', 'Sem resultados para o per\u00edodo solicitado.');\r\n                        }\r\n                    } else {\r\n                        //Alert\r\n                        Modal.Load('Concilia\u00e7\u00e3o', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                    }\r\n                });\r\n\r\n            },\r\n            'Conciliate' : function(url)\r\n            {\r\n                var t    = jQuery('#pagseguro-datatable').DataTable();\r\n                var rows = jQuery('#pagseguro-datatable').find('[data-target=conciliation]:checked');\r\n\r\n                // Get all serialized data from rows\r\n                var data = [];\r\n                jQuery.each(rows, function(index, value) {\r\n                    // Find row index\r\n                    var tr = jQuery(value).parent().parent();\r\n                    // push row data to an array of rows\r\n                    data[index] = jQuery(value).attr('data-block');\r\n                    // remove this row\r\n                    t.row( tr ).remove().draw();\r\n                });\r\n\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/conciliation/conciliate',\r\n                    data: {form_key: window.FORM_KEY, data: data},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n\r\n                    if (response.success) {\r\n\r\n                        if (response.success == true) {\r\n                            //Alert\r\n                            Modal.Load('Concilia\u00e7\u00e3o', 'Transa\u00e7\u00f5es conciliadas com sucesso!');\r\n                        }\r\n\r\n                        if (response.success == false) {\r\n                            //Alert\r\n                            Modal.Load('Concilia\u00e7\u00e3o', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Utilize a concilia\u00e7\u00e3o de transa\u00e7\u00f5es primeiro ou tente novamente mais tarde.');\r\n                        }\r\n                    } else {\r\n                        //Alert\r\n                        Modal.Load('Concilia\u00e7\u00e3o', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Abandoned method's\r\n         */\r\n        'Abandoned' : {\r\n\r\n            'Search': function (url) {\r\n\r\n                jQuery.ajax({\r\n                    url: url + '/pagseguro/abandoned/request',\r\n                    data: {form_key: window.FORM_KEY, days: jQuery('#abandoned-days').val()},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function (response) {\r\n\r\n                    if (response.success) {\r\n\r\n                        var t = jQuery('#pagseguro-datatable').DataTable();\r\n\r\n                        //Cleans up the table\r\n                        t.clear().draw();\r\n\r\n                        //Check the array for data, if not empty insert data else clear the table.\r\n                        if (response.payload.data.length > 0) {\r\n                            // Create a new table row for all array positions\r\n                            response.payload.data.forEach(function (item) {\r\n                                t.row.add([\r\n                                    \"<input type='checkbox' data-target='abandoned' data-block='\" + item.details + \"'/>\",\r\n                                    item.date,\r\n                                    item.magento_id,\r\n                                    item.validate,\r\n                                    item.sent,\r\n                                    '<a href=\"' + url + '/sales/order/view/order_id/' + item.order_id + '/key/' + window.FORM_KEY + '\" target=\"_blank\">Ver detalhes</a>'\r\n                                ]);\r\n                                //Adjust column width\r\n                                t.columns.adjust().draw(false);\r\n                            });\r\n                        } else {\r\n                            //Alert\r\n                            Modal.Load('Abandonadas', 'Sem resultados para o per\u00edodo solicitado.');\r\n                        }\r\n                    } else {\r\n                        //Alert\r\n                        Modal.Load('Abandonadas', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                    }\r\n\r\n                });\r\n            },\r\n            'Transport' : function(url)\r\n            {\r\n                var t    = jQuery('#pagseguro-datatable').DataTable();\r\n                var rows = jQuery('#pagseguro-datatable').find('[data-target=abandoned]:checked');\r\n\r\n                // Get all serialized data from rows\r\n                var data = [];\r\n                jQuery.each(rows, function(index, value) {\r\n                    // Find row index\r\n                    var tr = jQuery(value).parent().parent();\r\n                    // push row data to an array of rows\r\n                    data[index] = jQuery(value).attr('data-block');\r\n                });\r\n\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/abandoned/transport',\r\n                    data: {form_key: window.FORM_KEY, data: data},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n\r\n                    if (response.success) {\r\n\r\n                        if (response.success == true) {\r\n\r\n                            //Cleans up the table\r\n                            t.clear().draw();\r\n\r\n                            WS.Ajax.Abandoned.Search(url);\r\n\r\n                            Modal.Load('Abandonadas', 'C\u00f3digo de recupera\u00e7\u00e3o enviado com sucesso!');\r\n\r\n                        }\r\n                        if (response.success == false) {\r\n                            //Alert\r\n                            Modal.Load('Abandonadas', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Utilize a recupera\u00e7\u00e3o de transa\u00e7\u00f5es primeiro ou tente novamente mais tarde.');\r\n                        }\r\n                    } else {\r\n                        //Alert\r\n                        Modal.Load('Abandonadas', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancellation method's\r\n         */\r\n        'Cancellation' : {\r\n            'Search' : function(url)\r\n            {\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/cancellation/request',\r\n                    data: {form_key: window.FORM_KEY, days: jQuery('#cancellation-days').val()},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n\r\n                    if (response.success) {\r\n\r\n                        var t = jQuery('#pagseguro-datatable').DataTable();\r\n\r\n                        //Cleans up the table\r\n                        t.clear().draw();\r\n\r\n                        //Check the array for data, if not empty insert data else clear the table.\r\n                        if (response.payload.data.length > 0) {\r\n                            var i = 0;\r\n                            // Create a new table row for all array positions\r\n                            response.payload.data.forEach(function(item){\r\n                                t.row.add( [\r\n                                    item.date,\r\n                                    item.magento_id,\r\n                                    item.pagseguro_id,\r\n                                    item.magento_status,\r\n                                    '<a class=\"cancellation-cancel\" data-target=\"cancellation_'+ i +'\" data-block=\"'+item.details+'\">Cancelar</a>'\r\n                                ] );\r\n                                //Adjust column width\r\n                                t.columns.adjust().draw(false);\r\n                                i++;\r\n                            });\r\n                        } else {\r\n                            //Alert\r\n                            Modal.Load('Cancelamento', 'Sem resultados para o per\u00edodo solicitado.');\r\n                        }\r\n                    } else {\r\n                        //Alert\r\n                        Modal.Load('Cancelamento', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                    }\r\n                });\r\n\r\n            },\r\n            'Cancel' : function(url, data, row)\r\n            {\r\n                var t = jQuery('#pagseguro-datatable').DataTable();\r\n\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/cancellation/cancel',\r\n                    data: {form_key: window.FORM_KEY, data: data},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n\r\n                    if (response.success) {\r\n\r\n                        t.row( row ).remove().draw();\r\n\r\n                        Modal.Load('Cancelamento', 'Transa\u00e7\u00f5es cancelada com sucesso!');\r\n\r\n                    } else {\r\n                        if (response.payload.error == 'Need to conciliate') {\r\n                            //Alert\r\n                            Modal.Load('Cancelamento', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Utilize a concilia\u00e7\u00e3o de transa\u00e7\u00f5es primeiro ou tente novamente mais tarde.');\r\n                        } else {\r\n                            //Alert\r\n                            Modal.Load('Cancelamento', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Refund method's\r\n         */\r\n        'Refund' : {\r\n            'Search' : function(url)\r\n            {\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/refund/request',\r\n                    data: {form_key: window.FORM_KEY, days: jQuery('#refund-days').val()},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n\r\n                    if (response.success) {\r\n\r\n                        var t = jQuery('#pagseguro-datatable').DataTable();\r\n\r\n                        //Cleans up the table\r\n                        t.clear().draw();\r\n\r\n                        //Check the array for data, if not empty insert data else clear the table.\r\n                        if (response.payload.data.length > 0) {\r\n                            var i = 0;\r\n                            // Create a new table row for all array positions\r\n                            response.payload.data.forEach(function(item){\r\n                                t.row.add( [\r\n                                    item.date,\r\n                                    item.magento_id,\r\n                                    item.pagseguro_id,\r\n                                    item.magento_status,\r\n                                    '<a class=\"refund\" data-target=\"refund_'+ i +'\" data-block=\"'+item.details+'\" data-id=\"'+item.magento_id+'\" style=\"cursor:pointer;\">Estorno total</a><br/>'+\r\n                                    '<a class=\"partial-refund\" data-target=\"refund_'+ i +'\" data-block=\"'+item.details+'\" data-value=\"'+item.value+'\" data-id=\"'+item.magento_id+'\" style=\"cursor:pointer;\">Estorno parcial</a>', \r\n                                ] );\r\n                                //Adjust column width\r\n                                t.columns.adjust().draw(false);\r\n                                i++;\r\n                            });\r\n                        } else {\r\n                            //Alert\r\n                            Modal.Load('Estorno', 'Sem resultados para o per\u00edodo solicitado.');\r\n                        }\r\n                    } else {\r\n                        //Alert\r\n                        Modal.Load('Estorno', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                    }\r\n                });\r\n\r\n            },\r\n            'Refund' : function(url, data, row, value = null)\r\n            {\r\n                var t = jQuery('#pagseguro-datatable').DataTable();\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/refund/refund',\r\n                    data: {form_key: window.FORM_KEY, data: data, value: value},\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n                    if (response.success) {\r\n                        t.row( row ).remove().draw();\r\n                        Modal.Load('Estorno', 'Transa\u00e7\u00f5es estornada com sucesso!');\r\n                    } else {\r\n                        if (response.payload.error == 'Need to conciliate') {\r\n                            Modal.Load('Estorno', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Utilize a concilia\u00e7\u00e3o de transa\u00e7\u00f5es primeiro ou tente novamente mais tarde.');\r\n                        } else if(response.payload.error == '14002' || response.payload.error == '14013') {\r\n                            Modal.Load('Estorno', 'Valor do estorno est\u00e1 em um formato inv\u00e1lido!');\r\n                        } else if (response.payload.error == '14003') {\r\n                            Modal.Load('Estorno', 'Valor do estorno inv\u00e1lido! O valor n\u00e3o pode ser negativo.');\r\n                        } else if (response.payload.error == '14004') {\r\n                            Modal.Load('Estorno', 'Valor do estorno \u00e9 menor do que o permitido.');\r\n                        } else if (response.payload.error == '14005') {\r\n                            Modal.Load('Estorno', 'Valor do estorno \u00e9 maior do que o permitido.');\r\n                        } else if (response.payload.error == '14006') {\r\n                            Modal.Load('Estorno', 'Saldo insuficiente para estornar a transa\u00e7\u00e3o.');\r\n                        } else if (response.payload.error == '14007') {\r\n                            Modal.Load('Estorno', 'Status da transa\u00e7\u00e3o \u00e9 inv\u00e1lido para ser estornada.');\r\n                        } else if (response.payload.error == '14008') {\r\n                            Modal.Load('Estorno', 'Transa\u00e7\u00e3o n\u00e3o encontrada.');\r\n                        } else if (response.payload.error == '14009') {\r\n                            Modal.Load('Estorno', \"Sua conta PagSeguro n\u00e3o tem permiss\u00e3o para realizar esta a\u00e7\u00e3o. Em caso de d\u00favidas acesse <a href='http://forum.pagseguro.uol.com.br' target='_blank'>http://forum.pagseguro.uol.com.br</a>\");\r\n                        }else {\r\n                            Modal.Load('Estorno', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Transactions method's\r\n         */\r\n        'Transactions' : {\r\n            'Search' : function(url)\r\n            {\r\n                jQuery.ajax( {\r\n                    url: url + '/pagseguro/transactions/request',\r\n                    data: {\r\n                        form_key: window.FORM_KEY,\r\n                        date_begin: jQuery('#date_begin').val(),\r\n                        date_end: jQuery('#date_end').val(),\r\n                        id_magento: jQuery('#id_magento').val(),\r\n                        id_pagseguro: jQuery('#id_pagseguro').val(),\r\n                        status: jQuery('#status').val()\r\n                    },\r\n                    type: 'POST',\r\n                    showLoader: true,\r\n                }).success(function(response) {\r\n                    if (response.success) {\r\n                        var t = jQuery('#pagseguro-datatable').DataTable();\r\n\r\n                        //Cleans up the table\r\n                        t.clear().draw();\r\n                        //Check the array for data, if not empty insert data else clear the table.\r\n                        if (response.payload.data.length > 0) {\r\n                            var i = 0;\r\n                            // Create a new table row for all array positions\r\n                            response.payload.data.forEach(function(item){\r\n                                t.row.add( [\r\n                                    item.date,\r\n                                    '<a href=\"' + url + '/sales/order/view/order_id/' + item.order_id + '/key/' + window.FORM_KEY + '\" target=\"_blank\">' + item.magento_id + '</a>',\r\n                                    item.pagseguro_id,\r\n                                    item.environment,\r\n                                    item.magento_status,\r\n                                    '<a class=\"link\" data-transaction=\"'+ item.pagseguro_id +'\" data-order=\"'+ item.order_id +'\">Ver detalhes do pagamento</a>'\r\n                                ] );\r\n\r\n                                //Adjust column width\r\n                                t.columns.adjust().draw(false);\r\n                                i++;\r\n                            });\r\n                            jQuery('.loading-mask').css('display', 'none');\r\n                        } else {\r\n                            //Alert\r\n                            Modal.Load('Listar transa\u00e7\u00f5es', 'Nenhum resultado para o filtro informado!.');\r\n                        }\r\n                    } else {\r\n                        //Alert\r\n                        Modal.Load('Listar transa\u00e7\u00f5es', 'N\u00e3o foi poss\u00edvel executar esta a\u00e7\u00e3o. Tente novamente mais tarde.');\r\n                    }\r\n                });\r\n\r\n            },\r\n\r\n            'Details' : function (url, transaction_code, order) {\r\n                jQuery.ajax({\r\n                    url: url + '/pagseguro/transactions/transaction',\r\n                    type: \"POST\",\r\n                    data: {\r\n                        form_key: window.FORM_KEY,\r\n                        transaction: transaction_code\r\n                    },\r\n                    showLoader: true\r\n                }).success(function(result) {\r\n                    if (result.success) {\r\n                        result = result.payload.data;\r\n\r\n                            jQuery('#transaction-group').append('<div></div>');\r\n                            jQuery('#transaction-group').append('<div></div>');\r\n                            jQuery('#payment-group').append('<div></div>');\r\n                            jQuery('#payment-group').append('<div></div>');\r\n                            var listTransactionLine1 = jQuery('#transaction-group div:eq(0)');\r\n                            var listTransactionLine2 = jQuery('#transaction-group div:eq(1)');\r\n                            var listPaymentLine1 = jQuery('#payment-group div:eq(0)');\r\n                            var listPaymentLine2 = jQuery('#payment-group div:eq(1)');\r\n\r\n                            if(result.date != undefined && result.date != false){\r\n                                listTransactionLine1.append('<dl class=\"\"><dt>Data e hora: </dt><dd>' + result.date + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.type != undefined && result.type != false){\r\n                                listTransactionLine1.append('<dl class=\"\"><dt>Tipo: </dt><dd>' + result.type + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.status != undefined && result.status != false){\r\n                                listTransactionLine1.append('<dl><dt>Status: </dt><dd>' + result.status + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.code != undefined && result.code != false){\r\n                                listTransactionLine1.append('<dl><dt>C\u00f3digo da transa\u00e7\u00e3o: </dt><dd>' + result.code + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.reference != undefined && result.reference != false){\r\n                                listTransactionLine1.append('<dl><dt>C\u00f3digo de refer\u00eancia: </dt><dd>' + result.reference + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.lastEventDate != undefined && result.lastEventDate != false){\r\n                                listTransactionLine2.append('<dl><dt>\u00daltimo evento: </dt><dd>' + result.lastEventDate + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.cancelationSource != undefined && result.cancelationSource != false){\r\n                                listTransactionLine2.append('<dl><dt>Origem do cancelamento: </dt><dd>' + result.cancelationSource + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.itemCount != undefined && result.itemCount != false){\r\n                                listTransactionLine2.append('<dl><dt>Total de itens: </dt><dd>' + result.itemCount + '</dd></dl>');\r\n                            }\r\n\r\n                            jQuery('#transaction-group').append('<span id=\"btn-hidden-itens\" class=\"link \">Exibir todos os itens &#9660</span>');\r\n\r\n                            jQuery('#transaction-group').append('<div id=\"itens\" class=\"hidden-groups table\"></div>');\r\n\r\n                            if(result.paymentMethod.titleType != undefined && result.paymentMethod.titleType != false){\r\n                                listPaymentLine1.append('<dl><dt>Tipo de pagamento: </dt><dd>' + result.paymentMethod.titleType + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.paymentMethod.titleCode != undefined && result.paymentMethod.titleCode != false){\r\n                                listPaymentLine1.append('<dl><dt>Meio de pagamento: </dt><dd>' + result.paymentMethod.titleCode +'</dd></dl>');\r\n                            }\r\n\r\n                            if(result.paymentLink != false){\r\n                                listPaymentLine1.append('<dl><dt>Link para pagamento: </dt><dd>' + '<a href=' + result.paymentLink + '>' + 'Clique aqui para acessar' +'</a>' + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.installmentCount != undefined && result.installmentCount != false){\r\n                                listPaymentLine1.append('<dl><dt>N\u00ba de parcelas: </dt><dd>' + result.installmentCount + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.extraAmount != undefined && result.extraAmount != false){\r\n                                listPaymentLine2.append('<dl class=\"\"><dt>Valor extra: </dt><dd>R$ ' + formatReal(result.extraAmount) + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.discountAmount != undefined && result.discountAmount != false){\r\n                                listPaymentLine2.append('<dl class=\"\"><dt>Desconto: </dt><dd> R$' + formatReal(result.discountAmount) + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.grossAmount != undefined && result.grossAmount != false){\r\n                                listPaymentLine2.append('<dl class=\"\"><dt>Valor bruto: </dt><dd>R$ ' + formatReal(result.grossAmount) +'</dd></dl>');\r\n                            }\r\n\r\n                            if(result.netAmount != undefined && result.netAmount != false){\r\n                                listPaymentLine2.append('<dl class=\"\"><dt>Valor l\u00edquido: </dt><dd>R$ ' + formatReal(result.netAmount) + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.promoCode != undefined && result.promoCode != false){\r\n                                listPaymentLine2.append('<dl><dt>C\u00f3digo de promo\u00e7\u00e3o: </dt><dd>' + result.promoCode + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.escrowEndDate != undefined && result.escrowEndDate != false){\r\n                                listPaymentLine1.append('<dl><dt>Data de cr\u00e9dito: </dt><dd>' + result.escrowEndDate +'</dd></dl>');\r\n                            }\r\n\r\n                            jQuery('#payment-group').append('<span id=\"btn-hidden-data\" class=\"link\">Exibir todos os dados de custos cobrados &#9660</span>');\r\n\r\n                            jQuery('#payment-group').append('<div id=\"cost-data\" class=\"hidden-groups table\"></div>');\r\n\r\n                            var listItens = jQuery('#itens');\r\n                            listItens.append('<h4>Itens do carrinho</h4>');\r\n                            listItens.append('<div class=\"group-title\"></div>');\r\n                            listItens.append('<div class=\"group-table-itens\"></div>');\r\n                            var listItensTitle = jQuery('.group-title');\r\n\r\n                            if(result.itemCount > 0){\r\n                                listItensTitle.append('<div class=\"itens-cell\">ID</div>');\r\n                                listItensTitle.append('<div class=\"description-cell\">Produto</div>');\r\n                                listItensTitle.append('<div class=\"itens-cell\">Quantidade</div>');\r\n                                listItensTitle.append('<div class=\"itens-cell\">Valor</div>');\r\n                                listItensTitle.append('<div class=\"itens-cell\">Total</div>');\r\n                                for(var i = 0; i< result.itemCount; i++){\r\n                                    var total = (result.items[i].quantity * result.items[i].amount).toFixed(2);\r\n                                    listItensBody = jQuery('.group-table-itens');\r\n                                    listItensBody.append('<div id=\"item' + i + '\" class=\"itens-line\"></div>');\r\n                                    listItensBody = jQuery('#item' + i);\r\n                                    listItensBody.append('<div class=\"itens-cell\">' + result.items[i].id +'</div>');\r\n                                    listItensBody.append('<div class=\"description-cell\">' + result.items[i].description +'</div>');\r\n                                    listItensBody.append('<div class=\"itens-cell\">' + result.items[i].quantity + '</div>');\r\n                                    listItensBody.append('<div class=\"itens-cell\">R$ ' + formatReal(result.items[i].amount) + '</div>');\r\n                                    listItensBody.append('<div class=\"itens-cell\"> R$ ' + formatReal(total) +'</div>');\r\n                                }\r\n                            }\r\n\r\n                            jQuery('#cost-data').append('<h4>Dados dos custos cobrados</h4>');\r\n\r\n                            jQuery('#cost-data').append('<div class=\"rate\"></div>');\r\n\r\n                            var listData = jQuery('#cost-data div');\r\n\r\n                            if(result.creditorFees.installmentFeeAmount != undefined && result.creditorFees.installmentFeeAmount != false){\r\n                                listData.append('<dl><dt>Taxa de parcelamento: </dt><dd> R$' + formatReal(result.creditorFees.installmentFeeAmount) + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.creditorFees.operationalFeeAmount != undefined && result.creditorFees.operationalFeeAmount != false){\r\n                                listData.append('<dl><dt>Taxa de opera\u00e7\u00e3o: </dt><dd> R$'+ formatReal(result.creditorFees.operationalFeeAmount) +'</dd></dl>');\r\n                            }\r\n\r\n                            if(result.creditorFees.intermediationRateAmount != undefined && result.creditorFees.intermediationRateAmount != false){\r\n                                listData.append('<dl><dt>Tarifa de intermedia\u00e7\u00e3o: </dt><dd>R$ ' + formatReal(result.creditorFees.intermediationRateAmount) + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.creditorFees.intermediationFeeAmount != undefined && result.creditorFees.intermediationFeeAmount != false){\r\n                                listData.append('<dl><dt>Taxa de intermedia\u00e7\u00e3o: </dt><dd>R$ ' + formatReal(result.creditorFees.intermediationFeeAmount) + '</dd></dl>');\r\n                            }\r\n\r\n                            if(result.creditorFees.comissionFeeAmount != undefined && result.creditorFees.comissionFeeAmount != false){\r\n                                listData.append('<dl><dt>Taxa de comiss\u00e3o: </dt><dd>R$ ' + formatReal(result.creditorFees.comissionFeeAmount) + '</dd></dl>');\r\n                            }\r\n\r\n                            jQuery('.modals-overlay').css('display', 'block');\r\n                            jQuery('#modal-details').addClass('_show');\r\n                        \r\n                    }else{\r\n                        if(result.payload.error == \"need to conciliate\"){\r\n                            Modal.Load('Aten\u00e7\u00e3o', '\u00c9 necess\u00e1rio utilizar a concilia\u00e7\u00e3o de transa\u00e7\u00f5es primeiro.');\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * Date\r\n *\r\n */\r\n\r\nfunction dateMask (date, fieldName) {\r\n    var mydate = '';\r\n    var field = document.getElementById(fieldName);\r\n    mydate = mydate + date;\r\n    if (mydate.length == 2 && event.keyCode != 8){\r\n        mydate = mydate + '/';\r\n        field.value = mydate;\r\n    } \r\n    if (mydate.length == 5 && event.keyCode != 8){\r\n        mydate = mydate + '/';\r\n        field.value = mydate;\r\n    } \r\n    if (mydate.length == 10){\r\n        dateVerify(field); \r\n    }\r\n    \r\n    if (field.value == \"\") {\r\n        field.classList.remove('field-error');\r\n    }\r\n} \r\n        \r\nfunction dateVerify (fieldName) { \r\n\r\n    day = (fieldName.value.substring(0,2)); \r\n    month = (fieldName.value.substring(3,5)); \r\n    year = (fieldName.value.substring(6,10)); \r\n\r\n    situacao = \"\";\r\n\r\n    if ( isNaN(day) || ((day < 01)||(day < 01 || day > 30) && (  month == 04 || month == 06 || month == 09 || month == 11 ) || day > 31)) {\r\n        situacao = \"false\";\r\n    }\r\n\r\n    if ( isNaN(month) || month < 01 || month > 12 ) {\r\n        situacao = \"false\";\r\n    }\r\n\r\n    if ( isNaN(year) || month == 2 && ( day < 01 || day > 29 || ( day > 28 && (parseInt(year / 4) != year / 4)))) {\r\n        situacao = \"false\";\r\n    }\r\n\r\n    if (situacao == \"false\") {\r\n       fieldName.classList.add('field-error');\r\n    }else{\r\n       fieldName.classList.remove('field-error');\r\n    }\r\n    return;\r\n}\r\n\r\nfunction dateVerifyOnLosesFocus(fieldName){\r\n    var mydate = '';\r\n    mydate = mydate + fieldName.value;\r\n\r\n    if(mydate.length > 0 && mydate.length < 10){\r\n        fieldName.classList.add('field-error');\r\n    }else if(mydate.length == 0) {\r\n        fieldName.classList.remove('field-error');\r\n    } else {\r\n        dateVerify(fieldName);\r\n    }\r\n}\r\n\r\nfunction validateSearchByDate() {\r\n    var fieldDateFromValue = document.getElementById('date_begin').value;\r\n    var fieldDateToValue = document.getElementById('date_end').value;\r\n\r\n    if ((fieldDateFromValue.length > 0 && fieldDateToValue.length == 0) || (fieldDateFromValue.length == 0 && fieldDateToValue.length > 0)) {\r\n        Modal.Load('Erro ao filtrar!', 'Data de in\u00edcio e fim devem ser informadas!');\r\n        return false;\r\n    }\r\n\r\n    dayFrom = (fieldDateFromValue.substring(0,2));\r\n    monthFrom = (fieldDateFromValue.substring(3,5));\r\n    yearFrom = (fieldDateFromValue.substring(6,10));\r\n\r\n    dayTo = (fieldDateToValue.substring(0,2));\r\n    monthTo = (fieldDateToValue.substring(3,5));\r\n    yearTo = (fieldDateToValue.substring(6,10));\r\n\r\n    var dateFrom = new Date(yearFrom, monthFrom, dayFrom);\r\n    var dateTo = new Date(yearTo, monthTo, dayTo);\r\n\r\n    if (dateFrom > dateTo) {\r\n        Modal.Load('Erro ao filtrar', 'Data de in\u00edcio maior que a data de fim!');\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n *\r\n * Money\r\n *\r\n */\r\nfunction formatReal( int )\r\n{\r\n    var tmp = int+'';\r\n    tmp = tmp.replace(\".\", \"\");\r\n    tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\r\n    if( tmp.length > 6 )\r\n        tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n    return tmp;\r\n}\r\n\r\nfunction formatRealInput( field )\r\n{\r\n    var tmp = field.value;\r\n    tmp = tmp.replace(\",\", \"\");\r\n    tmp = tmp.replace(\".\", \"\");\r\n\r\n    valueIsNumber(tmp);\r\n\r\n    tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\r\n\r\n    if ( tmp.length > 6 ) {\r\n        tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n    }\r\n    field.value = tmp;\r\n}\r\n\r\nfunction valueHasThreeDigits( field ){\r\n    var tmp = field.value;\r\n    if(tmp.length == 1){\r\n        field.value = tmp + \"00\";\r\n    }\r\n    formatRealInput( field )\r\n}\r\n\r\nfunction valueIsNumber(tmp){\r\n\r\n    if(tmp.indexOf(\",\") == 0){\r\n        jQuery('#refund-value').addClass('field-error');\r\n        jQuery('.error').text('Valor inv\u00e1lido.');\r\n        return false;\r\n    }\r\n\r\n    tmp = tmp.replace(\",\", \"\");\r\n    tmp = tmp.replace(\".\", \"\");\r\n\r\n    if(isNaN(tmp)) {\r\n        jQuery('#refund-value').addClass('field-error');\r\n        jQuery('.error').text('Valor inv\u00e1lido.');\r\n        return false;\r\n    } else if(tmp.indexOf('-') != -1) {\r\n        jQuery('#refund-value').addClass('field-error');\r\n        jQuery('.error').text('Valor n\u00e3o pode ser negativo.');\r\n        return false;\r\n    } else {\r\n        jQuery('.error').text('');\r\n        jQuery('#refund-value').removeClass('field-error');\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction getMoney( strMoney )\r\n{\r\n    strMoney = strMoney.replace(\".\", \"\");\r\n    strMoney = strMoney.replace(\",\", \".\");\r\n    return parseFloat(strMoney);\r\n}","Vertex_Tax/js/allowed-countries.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['jquery', 'jquery/ui'], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('vertex.allowedCountries', {\r\n        /**\r\n         * Bind all optgroups under the attached element to mass-select/mass-deselect their children on click\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(this.element).on('click', 'optgroup', this.filterClick.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Filter out any clicks where the target was not explicitly the optgroup\r\n         *\r\n         * @param {Event} event\r\n         * @return void\r\n         */\r\n        filterClick: function (event) {\r\n            if (!$(event.target).is('optgroup')) {\r\n                return;\r\n            }\r\n\r\n            this._processClick(event);\r\n        },\r\n\r\n        /**\r\n         * Decide to select or unselect all child elements and execute the chosen task\r\n         *\r\n         * @private\r\n         * @param {Event} event\r\n         * @return void\r\n         */\r\n        _processClick: function (event) {\r\n            var optgroup = $(event.target),\r\n                select = optgroup.closest('select'),\r\n                scrollTop = select.scrollTop();\r\n\r\n            if (optgroup.children('option:not(:selected)').length === 0) {\r\n                optgroup.children('option').prop('selected', false);\r\n            } else {\r\n                optgroup.children('option').prop('selected', true);\r\n            }\r\n\r\n            //  Maintain current scroll position\r\n            // Default behavior, in chrome at least, is to jump to some other selected option\r\n            setTimeout(function () {\r\n                select.scrollTop(scrollTop);\r\n            }, 0);\r\n        }\r\n    });\r\n\r\n    return $.vertex.allowedCountries;\r\n});\r\n","Vertex_Tax/js/form/caption-formatter.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Return formatted selected option value\r\n         * @param {Object} selected\r\n         * @returns {String}\r\n         */\r\n        getFormattedValue: function (selected) {\r\n            var label = '';\r\n\r\n            if (selected.parent) {\r\n                label = selected.parent + ' - ';\r\n            }\r\n            label += selected.label;\r\n            return label;\r\n        }\r\n    };\r\n});\r\n","Vertex_Tax/js/form/flex-field-select.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/form/element/ui-select',\r\n    'Vertex_Tax/js/form/caption-formatter'\r\n], function (_, Component, captionFormatter) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            presets: {\r\n                optgroup: {\r\n                    openLevelsAction: true,\r\n                    showOpenLevelsActionIcon: true\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set Caption\r\n         */\r\n        setCaption: function () {\r\n            var length, label;\r\n\r\n            if (!_.isArray(this.value()) && this.value()) {\r\n                length = 1;\r\n            } else if (this.value()) {\r\n                length = this.value().length;\r\n            } else {\r\n                this.value([]);\r\n                length = 0;\r\n            }\r\n\r\n            if (length && this.getSelected().length) {\r\n                label = captionFormatter.getFormattedValue(this.getSelected()[0]);\r\n                this.placeholder(label);\r\n            } else {\r\n                this.placeholder(this.selectedPlaceholders.defaultPlaceholder);\r\n            }\r\n\r\n            return this.placeholder();\r\n        }\r\n    });\r\n});\r\n","Vertex_Tax/js/form/element/custom-option-flex-field-select.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['underscore', 'Magento_Ui/js/form/element/select'], function (_, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        /**\r\n         * Overwrites the parent's filter to allow for checking if a value is\r\n         * in an array and for allowing the value of \"unmapped\" through all\r\n         * filters\r\n         *\r\n         * @param {String} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var source = this.initialOptions,\r\n                result;\r\n\r\n            field = field || this.filterBy.field;\r\n\r\n            result = _.filter(source, function (item) {\r\n                return Array.isArray(item[field]) && item[field].includes(value) ||\r\n                    item[field] === value ||\r\n                    item.value === '' ||\r\n                    item.value === 'unmapped';\r\n            });\r\n\r\n            this.setOptions(result);\r\n        }\r\n    });\r\n});\r\n","Vertex_Tax/js/model/flex-field-table.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'ko',\r\n    'uiLayout',\r\n    'Vertex_Tax/js/form/caption-formatter'\r\n], function (Component, ko, layout, captionFormatter) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            elementName: '', // Prefix to use for input elements\r\n            fieldType: '', // One of code, numeric, or date\r\n            tableId: '',\r\n            template: 'Vertex_Tax/flex-field-table',\r\n            defaultPlaceholder: 'No Data',\r\n            selectOptions: [\r\n                {\r\n                    label: 'No Data',\r\n                    value: 'none'\r\n                }\r\n            ]\r\n        },\r\n        retrieveFields: [],\r\n\r\n        /**\r\n         * Initializes the table\r\n         * @returns {FlexFieldTable} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.retrieveFields = ko.observableArray();\r\n            this.initializeFields();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize the select components and link them to the form values\r\n         */\r\n        initializeFields: function () {\r\n            var i, name, fieldId, fieldSource, toLayOut = [];\r\n\r\n            for (i in this.values) {\r\n                if (this.values.hasOwnProperty(i)) {\r\n                    fieldSource = this.values[i]['field_source'];\r\n                    fieldId = this.values[i]['field_id'];\r\n                    name = this.fieldType + 'FlexField' + fieldId;\r\n\r\n                    this.retrieveFields.push({\r\n                        fieldId: fieldId,\r\n                        fieldSource: fieldSource,\r\n                        fieldLabel: this.getFieldLabelFromSource(fieldSource),\r\n                        editMode: ko.observable(false),\r\n                        childName: name\r\n                    });\r\n                }\r\n            }\r\n\r\n            layout(toLayOut);\r\n        },\r\n\r\n        /**\r\n         * Replace the label value with a dropdown\r\n         * @param {Object} child\r\n         */\r\n        enableEditMode: function (child) {\r\n            child.editMode(true);\r\n\r\n            layout([{\r\n                component: 'Vertex_Tax/js/form/flex-field-select',\r\n                template: 'ui/grid/filters/elements/ui-select',\r\n                parent: this.name,\r\n                name: child.childName,\r\n                dataScope: '',\r\n                multiple: false,\r\n                selectType: 'optgroup',\r\n                selectedPlaceholders: {\r\n                    defaultPlaceholder: this.defaultPlaceholder\r\n                },\r\n                showOpenLevelsActionIcon: true,\r\n                presets: {\r\n                    optgroup: {\r\n                        showOpenLevelsActionIcon: true\r\n                    }\r\n                },\r\n                filterOptions: true,\r\n                isDisplayMissingValuePlaceholder: true,\r\n                options: this.selectOptions,\r\n                value: child.fieldSource\r\n            }]);\r\n        },\r\n\r\n        /**\r\n         * Retrieve the name for a Field ID input\r\n         *\r\n         * @param {String} fieldId\r\n         * @returns {String}\r\n         */\r\n        getFieldIdInputName: function (fieldId) {\r\n            return this.elementName + '[' + fieldId + '][field_id]';\r\n        },\r\n\r\n        /**\r\n         * Retrieve the label for the selected source\r\n         * @param {String} source\r\n         * @returns {String}\r\n         */\r\n        getFieldLabelFromSource: function (source) {\r\n            var i, j, selected;\r\n\r\n            for (i in this.selectOptions) {\r\n                if (this.selectOptions[i].optgroup === undefined) {\r\n                    continue;\r\n                }\r\n                for (j in this.selectOptions[i].optgroup) {\r\n                    selected = this.selectOptions[i].optgroup[j];\r\n\r\n                    if (selected.value === source) {\r\n                        return captionFormatter.getFormattedValue(selected);\r\n                    }\r\n                }\r\n            }\r\n            return this.defaultPlaceholder;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the name for a Field Value input\r\n         * @param {String} fieldId\r\n         * @returns {String}\r\n         */\r\n        getFieldValueInputName: function (fieldId) {\r\n            return this.elementName + '[' + fieldId + '][field_source]';\r\n        },\r\n\r\n        /**\r\n         * Retrieve the name for the empty input\r\n         * @returns {String}\r\n         */\r\n        getEmptyName: function () {\r\n            return this.elementName + '[__empty]';\r\n        }\r\n    });\r\n});\r\n","WeltPixel_Backend/jscolor/jscolor.js":"/**\r\n * jscolor, JavaScript Color Picker\r\n *\r\n * @version 1.4.3\r\n * @license GNU Lesser General Public License, http://www.gnu.org/copyleft/lesser.html\r\n * @author  Jan Odvarko, http://odvarko.cz\r\n * @created 2008-06-15\r\n * @updated 2014-07-16\r\n * @link    http://jscolor.com\r\n */\r\n\r\n\r\nvar jscolor = {\r\n\r\n\r\n\tdir : '', // location of jscolor directory (leave empty to autodetect)\r\n\tbindClass : 'color', // class name\r\n\tbinding : true, // automatic binding via <input class=\"...\">\r\n\tpreloading : true, // use image preloading?\r\n\r\n\r\n\tinstall : function() {\r\n\t\tjscolor.addEvent(window, 'load', jscolor.init);\r\n\t},\r\n\r\n\r\n\tinit : function() {\r\n\t\tif(jscolor.binding) {\r\n\t\t\tjscolor.bind();\r\n\t\t}\r\n\t\tif(jscolor.preloading) {\r\n\t\t\tjscolor.preload();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tgetDir : function() {\r\n\t\tif(!jscolor.dir) {\r\n\t\t\tvar detected = jscolor.detectDir();\r\n\t\t\tjscolor.dir = detected!==false ? detected : 'jscolor/';\r\n\t\t}\r\n\t\treturn jscolor.dir;\r\n\t},\r\n\r\n\r\n\tdetectDir : function() {\r\n\r\n\t\treturn document.getElementById('wp_base_url_jscolor').value + '/';\r\n\r\n\t\tvar base = location.href;\r\n\r\n\t\tvar e = document.getElementsByTagName('base');\r\n\t\tfor(var i=0; i<e.length; i+=1) {\r\n\t\t\tif(e[i].href) { base = e[i].href; }\r\n\t\t}\r\n\r\n\t\tvar e = document.getElementsByTagName('script');\r\n\t\tfor(var i=0; i<e.length; i+=1) {\r\n\t\t\tif(e[i].src && /(^|\\/)jscolor\\.js([?#].*)?$/i.test(e[i].src)) {\r\n\t\t\t\tvar src = new jscolor.URI(e[i].src);\r\n\t\t\t\tvar srcAbs = src.toAbsolute(base);\r\n\t\t\t\tsrcAbs.path = srcAbs.path.replace(/[^\\/]+$/, ''); // remove filename\r\n\t\t\t\tsrcAbs.query = null;\r\n\t\t\t\tsrcAbs.fragment = null;\r\n\t\t\t\treturn srcAbs.toString();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\r\n\tbind : function() {\r\n\t\tvar matchClass = new RegExp('(^|\\\\s)('+jscolor.bindClass+')(\\\\s*(\\\\{[^}]*\\\\})|\\\\s|$)', 'i');\r\n\t\tvar e = document.getElementsByTagName('input');\r\n\t\tfor(var i=0; i<e.length; i+=1) {\r\n\t\t\tvar m;\r\n\t\t\tif(!e[i].color && e[i].className && (m = e[i].className.match(matchClass))) {\r\n\t\t\t\tvar prop = {};\r\n\t\t\t\tif(m[4]) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tprop = (new Function ('return (' + m[4] + ')'))();\r\n\t\t\t\t\t} catch(eInvalidProp) {}\r\n\t\t\t\t}\r\n\t\t\t\te[i].color = new jscolor.color(e[i], prop);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tpreload : function() {\r\n\t\tfor(var fn in jscolor.imgRequire) {\r\n\t\t\tif(jscolor.imgRequire.hasOwnProperty(fn)) {\r\n\t\t\t\tjscolor.loadImage(fn);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\timages : {\r\n\t\tpad : [ 181, 101 ],\r\n\t\tsld : [ 16, 101 ],\r\n\t\tcross : [ 15, 15 ],\r\n\t\tarrow : [ 7, 11 ]\r\n\t},\r\n\r\n\r\n\timgRequire : {},\r\n\timgLoaded : {},\r\n\r\n\r\n\trequireImage : function(filename) {\r\n\t\tjscolor.imgRequire[filename] = true;\r\n\t},\r\n\r\n\r\n\tloadImage : function(filename) {\r\n\t\tif(!jscolor.imgLoaded[filename]) {\r\n\t\t\tjscolor.imgLoaded[filename] = new Image();\r\n\t\t\tjscolor.imgLoaded[filename].src = jscolor.getDir()+filename;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tfetchElement : function(mixed) {\r\n\t\treturn typeof mixed === 'string' ? document.getElementById(mixed) : mixed;\r\n\t},\r\n\r\n\r\n\taddEvent : function(el, evnt, func) {\r\n\t\tif(el.addEventListener) {\r\n\t\t\tel.addEventListener(evnt, func, false);\r\n\t\t} else if(el.attachEvent) {\r\n\t\t\tel.attachEvent('on'+evnt, func);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tfireEvent : function(el, evnt) {\r\n\t\tif(!el) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(document.createEvent) {\r\n\t\t\tvar ev = document.createEvent('HTMLEvents');\r\n\t\t\tev.initEvent(evnt, true, true);\r\n\t\t\tel.dispatchEvent(ev);\r\n\t\t} else if(document.createEventObject) {\r\n\t\t\tvar ev = document.createEventObject();\r\n\t\t\tel.fireEvent('on'+evnt, ev);\r\n\t\t} else if(el['on'+evnt]) { // alternatively use the traditional event model (IE5)\r\n\t\t\tel['on'+evnt]();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tgetElementPos : function(e) {\r\n\t\tvar e1=e, e2=e;\r\n\t\tvar x=0, y=0;\r\n\t\tif(e1.offsetParent) {\r\n\t\t\tdo {\r\n\t\t\t\tx += e1.offsetLeft;\r\n\t\t\t\ty += e1.offsetTop;\r\n\t\t\t} while(e1 = e1.offsetParent);\r\n\t\t}\r\n\t\twhile((e2 = e2.parentNode) && e2.nodeName.toUpperCase() !== 'BODY') {\r\n\t\t\tx -= e2.scrollLeft;\r\n\t\t\ty -= e2.scrollTop;\r\n\t\t}\r\n\t\treturn [x, y];\r\n\t},\r\n\r\n\r\n\tgetElementSize : function(e) {\r\n\t\treturn [e.offsetWidth, e.offsetHeight];\r\n\t},\r\n\r\n\r\n\tgetRelMousePos : function(e) {\r\n\t\tvar x = 0, y = 0;\r\n\t\tif (!e) { e = window.event; }\r\n\t\tif (typeof e.offsetX === 'number') {\r\n\t\t\tx = e.offsetX;\r\n\t\t\ty = e.offsetY;\r\n\t\t} else if (typeof e.layerX === 'number') {\r\n\t\t\tx = e.layerX;\r\n\t\t\ty = e.layerY;\r\n\t\t}\r\n\t\treturn { x: x, y: y };\r\n\t},\r\n\r\n\r\n\tgetViewPos : function() {\r\n\t\tif(typeof window.pageYOffset === 'number') {\r\n\t\t\treturn [window.pageXOffset, window.pageYOffset];\r\n\t\t} else if(document.body && (document.body.scrollLeft || document.body.scrollTop)) {\r\n\t\t\treturn [document.body.scrollLeft, document.body.scrollTop];\r\n\t\t} else if(document.documentElement && (document.documentElement.scrollLeft || document.documentElement.scrollTop)) {\r\n\t\t\treturn [document.documentElement.scrollLeft, document.documentElement.scrollTop];\r\n\t\t} else {\r\n\t\t\treturn [0, 0];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tgetViewSize : function() {\r\n\t\tif(typeof window.innerWidth === 'number') {\r\n\t\t\treturn [window.innerWidth, window.innerHeight];\r\n\t\t} else if(document.body && (document.body.clientWidth || document.body.clientHeight)) {\r\n\t\t\treturn [document.body.clientWidth, document.body.clientHeight];\r\n\t\t} else if(document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {\r\n\t\t\treturn [document.documentElement.clientWidth, document.documentElement.clientHeight];\r\n\t\t} else {\r\n\t\t\treturn [0, 0];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tURI : function(uri) { // See RFC3986\r\n\r\n\t\tthis.scheme = null;\r\n\t\tthis.authority = null;\r\n\t\tthis.path = '';\r\n\t\tthis.query = null;\r\n\t\tthis.fragment = null;\r\n\r\n\t\tthis.parse = function(uri) {\r\n\t\t\tvar m = uri.match(/^(([A-Za-z][0-9A-Za-z+.-]*)(:))?((\\/\\/)([^\\/?#]*))?([^?#]*)((\\?)([^#]*))?((#)(.*))?/);\r\n\t\t\tthis.scheme = m[3] ? m[2] : null;\r\n\t\t\tthis.authority = m[5] ? m[6] : null;\r\n\t\t\tthis.path = m[7];\r\n\t\t\tthis.query = m[9] ? m[10] : null;\r\n\t\t\tthis.fragment = m[12] ? m[13] : null;\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\tthis.toString = function() {\r\n\t\t\tvar result = '';\r\n\t\t\tif(this.scheme !== null) { result = result + this.scheme + ':'; }\r\n\t\t\tif(this.authority !== null) { result = result + '//' + this.authority; }\r\n\t\t\tif(this.path !== null) { result = result + this.path; }\r\n\t\t\tif(this.query !== null) { result = result + '?' + this.query; }\r\n\t\t\tif(this.fragment !== null) { result = result + '#' + this.fragment; }\r\n\t\t\treturn result;\r\n\t\t};\r\n\r\n\t\tthis.toAbsolute = function(base) {\r\n\t\t\tvar base = new jscolor.URI(base);\r\n\t\t\tvar r = this;\r\n\t\t\tvar t = new jscolor.URI;\r\n\r\n\t\t\tif(base.scheme === null) { return false; }\r\n\r\n\t\t\tif(r.scheme !== null && r.scheme.toLowerCase() === base.scheme.toLowerCase()) {\r\n\t\t\t\tr.scheme = null;\r\n\t\t\t}\r\n\r\n\t\t\tif(r.scheme !== null) {\r\n\t\t\t\tt.scheme = r.scheme;\r\n\t\t\t\tt.authority = r.authority;\r\n\t\t\t\tt.path = removeDotSegments(r.path);\r\n\t\t\t\tt.query = r.query;\r\n\t\t\t} else {\r\n\t\t\t\tif(r.authority !== null) {\r\n\t\t\t\t\tt.authority = r.authority;\r\n\t\t\t\t\tt.path = removeDotSegments(r.path);\r\n\t\t\t\t\tt.query = r.query;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(r.path === '') {\r\n\t\t\t\t\t\tt.path = base.path;\r\n\t\t\t\t\t\tif(r.query !== null) {\r\n\t\t\t\t\t\t\tt.query = r.query;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt.query = base.query;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(r.path.substr(0,1) === '/') {\r\n\t\t\t\t\t\t\tt.path = removeDotSegments(r.path);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif(base.authority !== null && base.path === '') {\r\n\t\t\t\t\t\t\t\tt.path = '/'+r.path;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tt.path = base.path.replace(/[^\\/]+$/,'')+r.path;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tt.path = removeDotSegments(t.path);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tt.query = r.query;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tt.authority = base.authority;\r\n\t\t\t\t}\r\n\t\t\t\tt.scheme = base.scheme;\r\n\t\t\t}\r\n\t\t\tt.fragment = r.fragment;\r\n\r\n\t\t\treturn t;\r\n\t\t};\r\n\r\n\t\tfunction removeDotSegments(path) {\r\n\t\t\tvar out = '';\r\n\t\t\twhile(path) {\r\n\t\t\t\tif(path.substr(0,3)==='../' || path.substr(0,2)==='./') {\r\n\t\t\t\t\tpath = path.replace(/^\\.+/,'').substr(1);\r\n\t\t\t\t} else if(path.substr(0,3)==='/./' || path==='/.') {\r\n\t\t\t\t\tpath = '/'+path.substr(3);\r\n\t\t\t\t} else if(path.substr(0,4)==='/../' || path==='/..') {\r\n\t\t\t\t\tpath = '/'+path.substr(4);\r\n\t\t\t\t\tout = out.replace(/\\/?[^\\/]*$/, '');\r\n\t\t\t\t} else if(path==='.' || path==='..') {\r\n\t\t\t\t\tpath = '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar rm = path.match(/^\\/?[^\\/]*/)[0];\r\n\t\t\t\t\tpath = path.substr(rm.length);\r\n\t\t\t\t\tout = out + rm;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tif(uri) {\r\n\t\t\tthis.parse(uri);\r\n\t\t}\r\n\r\n\t},\r\n\r\n\r\n\t//\r\n\t// Usage example:\r\n\t// var myColor = new jscolor.color(myInputElement)\r\n\t//\r\n\r\n\tcolor : function(target, prop) {\r\n\r\n\r\n\t\tthis.required = true; // refuse empty values?\r\n\t\tthis.adjust = true; // adjust value to uniform notation?\r\n\t\tthis.hash = false; // prefix color with # symbol?\r\n\t\tthis.caps = true; // uppercase?\r\n\t\tthis.slider = true; // show the value/saturation slider?\r\n\t\tthis.valueElement = target; // value holder\r\n\t\tthis.styleElement = target; // where to reflect current color\r\n\t\tthis.onImmediateChange = null; // onchange callback (can be either string or function)\r\n\t\tthis.hsv = [0, 0, 1]; // read-only  0-6, 0-1, 0-1\r\n\t\tthis.rgb = [1, 1, 1]; // read-only  0-1, 0-1, 0-1\r\n\t\tthis.minH = 0; // read-only  0-6\r\n\t\tthis.maxH = 6; // read-only  0-6\r\n\t\tthis.minS = 0; // read-only  0-1\r\n\t\tthis.maxS = 1; // read-only  0-1\r\n\t\tthis.minV = 0; // read-only  0-1\r\n\t\tthis.maxV = 1; // read-only  0-1\r\n\r\n\t\tthis.pickerOnfocus = true; // display picker on focus?\r\n\t\tthis.pickerMode = 'HSV'; // HSV | HVS\r\n\t\tthis.pickerPosition = 'bottom'; // left | right | top | bottom\r\n\t\tthis.pickerSmartPosition = true; // automatically adjust picker position when necessary\r\n\t\tthis.pickerButtonHeight = 20; // px\r\n\t\tthis.pickerClosable = false;\r\n\t\tthis.pickerCloseText = 'Close';\r\n\t\tthis.pickerButtonColor = 'ButtonText'; // px\r\n\t\tthis.pickerFace = 10; // px\r\n\t\tthis.pickerFaceColor = 'ThreeDFace'; // CSS color\r\n\t\tthis.pickerBorder = 1; // px\r\n\t\tthis.pickerBorderColor = 'ThreeDHighlight ThreeDShadow ThreeDShadow ThreeDHighlight'; // CSS color\r\n\t\tthis.pickerInset = 1; // px\r\n\t\tthis.pickerInsetColor = 'ThreeDShadow ThreeDHighlight ThreeDHighlight ThreeDShadow'; // CSS color\r\n\t\tthis.pickerZIndex = 10000;\r\n\r\n\r\n\t\tfor(var p in prop) {\r\n\t\t\tif(prop.hasOwnProperty(p)) {\r\n\t\t\t\tthis[p] = prop[p];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis.hidePicker = function() {\r\n\t\t\tif(isPickerOwner()) {\r\n\t\t\t\tremovePicker();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.showPicker = function() {\r\n\t\t\tif(!isPickerOwner()) {\r\n\t\t\t\tvar tp = jscolor.getElementPos(target); // target pos\r\n\t\t\t\tvar ts = jscolor.getElementSize(target); // target size\r\n\t\t\t\tvar vp = jscolor.getViewPos(); // view pos\r\n\t\t\t\tvar vs = jscolor.getViewSize(); // view size\r\n\t\t\t\tvar ps = getPickerDims(this); // picker size\r\n\t\t\t\tvar a, b, c;\r\n\t\t\t\tswitch(this.pickerPosition.toLowerCase()) {\r\n\t\t\t\t\tcase 'left': a=1; b=0; c=-1; break;\r\n\t\t\t\t\tcase 'right':a=1; b=0; c=1; break;\r\n\t\t\t\t\tcase 'top':  a=0; b=1; c=-1; break;\r\n\t\t\t\t\tdefault:     a=0; b=1; c=1; break;\r\n\t\t\t\t}\r\n\t\t\t\tvar l = (ts[b]+ps[b])/2;\r\n\r\n\t\t\t\t// picker pos\r\n\t\t\t\tif (!this.pickerSmartPosition) {\r\n\t\t\t\t\tvar pp = [\r\n\t\t\t\t\t\ttp[a],\r\n\t\t\t\t\t\ttp[b]+ts[b]-l+l*c\r\n\t\t\t\t\t];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar pp = [\r\n\t\t\t\t\t\t-vp[a]+tp[a]+ps[a] > vs[a] ?\r\n\t\t\t\t\t\t\t(-vp[a]+tp[a]+ts[a]/2 > vs[a]/2 && tp[a]+ts[a]-ps[a] >= 0 ? tp[a]+ts[a]-ps[a] : tp[a]) :\r\n\t\t\t\t\t\t\ttp[a],\r\n\t\t\t\t\t\t-vp[b]+tp[b]+ts[b]+ps[b]-l+l*c > vs[b] ?\r\n\t\t\t\t\t\t\t(-vp[b]+tp[b]+ts[b]/2 > vs[b]/2 && tp[b]+ts[b]-l-l*c >= 0 ? tp[b]+ts[b]-l-l*c : tp[b]+ts[b]-l+l*c) :\r\n\t\t\t\t\t\t\t(tp[b]+ts[b]-l+l*c >= 0 ? tp[b]+ts[b]-l+l*c : tp[b]+ts[b]-l-l*c)\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t\tdrawPicker(pp[a], pp[b]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.importColor = function() {\r\n\t\t\tif(!valueElement) {\r\n\t\t\t\tthis.exportColor();\r\n\t\t\t} else {\r\n\t\t\t\tif(!this.adjust) {\r\n\t\t\t\t\tif(!this.fromString(valueElement.value, leaveValue)) {\r\n\t\t\t\t\t\tstyleElement.style.backgroundImage = styleElement.jscStyle.backgroundImage;\r\n\t\t\t\t\t\tstyleElement.style.backgroundColor = styleElement.jscStyle.backgroundColor;\r\n\t\t\t\t\t\tstyleElement.style.color = styleElement.jscStyle.color;\r\n\t\t\t\t\t\tthis.exportColor(leaveValue | leaveStyle);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(!this.required && /^\\s*$/.test(valueElement.value)) {\r\n\t\t\t\t\tvalueElement.value = '';\r\n\t\t\t\t\tstyleElement.style.backgroundImage = styleElement.jscStyle.backgroundImage;\r\n\t\t\t\t\tstyleElement.style.backgroundColor = styleElement.jscStyle.backgroundColor;\r\n\t\t\t\t\tstyleElement.style.color = styleElement.jscStyle.color;\r\n\t\t\t\t\tthis.exportColor(leaveValue | leaveStyle);\r\n\r\n\t\t\t\t} else if(this.fromString(valueElement.value)) {\r\n\t\t\t\t\t// OK\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.exportColor();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.exportColor = function(flags) {\r\n\t\t\tif(!(flags & leaveValue) && valueElement) {\r\n\t\t\t\tvar value = this.toString();\r\n\t\t\t\tif(this.caps) { value = value.toUpperCase(); }\r\n\t\t\t\tif(this.hash) { value = '#'+value; }\r\n\t\t\t\tvalueElement.value = value;\r\n\t\t\t}\r\n\t\t\tif(!(flags & leaveStyle) && styleElement) {\r\n\t\t\t\tstyleElement.style.backgroundImage = \"none\";\r\n\t\t\t\tstyleElement.style.backgroundColor =\r\n\t\t\t\t\t'#'+this.toString();\r\n\t\t\t\tstyleElement.style.color =\r\n\t\t\t\t\t0.213 * this.rgb[0] +\r\n\t\t\t\t\t0.715 * this.rgb[1] +\r\n\t\t\t\t\t0.072 * this.rgb[2]\r\n\t\t\t\t\t< 0.5 ? '#FFF' : '#000';\r\n\t\t\t}\r\n\t\t\tif(!(flags & leavePad) && isPickerOwner()) {\r\n\t\t\t\tredrawPad();\r\n\t\t\t}\r\n\t\t\tif(!(flags & leaveSld) && isPickerOwner()) {\r\n\t\t\t\tredrawSld();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.fromHSV = function(h, s, v, flags) { // null = don't change\r\n\t\t\tif(h !== null) { h = Math.max(0.0, this.minH, Math.min(6.0, this.maxH, h)); }\r\n\t\t\tif(s !== null) { s = Math.max(0.0, this.minS, Math.min(1.0, this.maxS, s)); }\r\n\t\t\tif(v !== null) { v = Math.max(0.0, this.minV, Math.min(1.0, this.maxV, v)); }\r\n\r\n\t\t\tthis.rgb = HSV_RGB(\r\n\t\t\t\th===null ? this.hsv[0] : (this.hsv[0]=h),\r\n\t\t\t\ts===null ? this.hsv[1] : (this.hsv[1]=s),\r\n\t\t\t\tv===null ? this.hsv[2] : (this.hsv[2]=v)\r\n\t\t\t);\r\n\r\n\t\t\tthis.exportColor(flags);\r\n\t\t};\r\n\r\n\r\n\t\tthis.fromRGB = function(r, g, b, flags) { // null = don't change\r\n\t\t\tif(r !== null) { r = Math.max(0.0, Math.min(1.0, r)); }\r\n\t\t\tif(g !== null) { g = Math.max(0.0, Math.min(1.0, g)); }\r\n\t\t\tif(b !== null) { b = Math.max(0.0, Math.min(1.0, b)); }\r\n\r\n\t\t\tvar hsv = RGB_HSV(\r\n\t\t\t\tr===null ? this.rgb[0] : r,\r\n\t\t\t\tg===null ? this.rgb[1] : g,\r\n\t\t\t\tb===null ? this.rgb[2] : b\r\n\t\t\t);\r\n\t\t\tif(hsv[0] !== null) {\r\n\t\t\t\tthis.hsv[0] = Math.max(0.0, this.minH, Math.min(6.0, this.maxH, hsv[0]));\r\n\t\t\t}\r\n\t\t\tif(hsv[2] !== 0) {\r\n\t\t\t\tthis.hsv[1] = hsv[1]===null ? null : Math.max(0.0, this.minS, Math.min(1.0, this.maxS, hsv[1]));\r\n\t\t\t}\r\n\t\t\tthis.hsv[2] = hsv[2]===null ? null : Math.max(0.0, this.minV, Math.min(1.0, this.maxV, hsv[2]));\r\n\r\n\t\t\t// update RGB according to final HSV, as some values might be trimmed\r\n\t\t\tvar rgb = HSV_RGB(this.hsv[0], this.hsv[1], this.hsv[2]);\r\n\t\t\tthis.rgb[0] = rgb[0];\r\n\t\t\tthis.rgb[1] = rgb[1];\r\n\t\t\tthis.rgb[2] = rgb[2];\r\n\r\n\t\t\tthis.exportColor(flags);\r\n\t\t};\r\n\r\n\r\n\t\tthis.fromString = function(hex, flags) {\r\n\t\t\tvar m = hex.match(/^\\W*([0-9A-F]{3}([0-9A-F]{3})?)\\W*$/i);\r\n\t\t\tif(!m) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tif(m[1].length === 6) { // 6-char notation\r\n\t\t\t\t\tthis.fromRGB(\r\n\t\t\t\t\t\tparseInt(m[1].substr(0,2),16) / 255,\r\n\t\t\t\t\t\tparseInt(m[1].substr(2,2),16) / 255,\r\n\t\t\t\t\t\tparseInt(m[1].substr(4,2),16) / 255,\r\n\t\t\t\t\t\tflags\r\n\t\t\t\t\t);\r\n\t\t\t\t} else { // 3-char notation\r\n\t\t\t\t\tthis.fromRGB(\r\n\t\t\t\t\t\tparseInt(m[1].charAt(0)+m[1].charAt(0),16) / 255,\r\n\t\t\t\t\t\tparseInt(m[1].charAt(1)+m[1].charAt(1),16) / 255,\r\n\t\t\t\t\t\tparseInt(m[1].charAt(2)+m[1].charAt(2),16) / 255,\r\n\t\t\t\t\t\tflags\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.toString = function() {\r\n\t\t\treturn (\r\n\t\t\t\t(0x100 | Math.round(255*this.rgb[0])).toString(16).substr(1) +\r\n\t\t\t\t(0x100 | Math.round(255*this.rgb[1])).toString(16).substr(1) +\r\n\t\t\t\t(0x100 | Math.round(255*this.rgb[2])).toString(16).substr(1)\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tfunction RGB_HSV(r, g, b) {\r\n\t\t\tvar n = Math.min(Math.min(r,g),b);\r\n\t\t\tvar v = Math.max(Math.max(r,g),b);\r\n\t\t\tvar m = v - n;\r\n\t\t\tif(m === 0) { return [ null, 0, v ]; }\r\n\t\t\tvar h = r===n ? 3+(b-g)/m : (g===n ? 5+(r-b)/m : 1+(g-r)/m);\r\n\t\t\treturn [ h===6?0:h, m/v, v ];\r\n\t\t}\r\n\r\n\r\n\t\tfunction HSV_RGB(h, s, v) {\r\n\t\t\tif(h === null) { return [ v, v, v ]; }\r\n\t\t\tvar i = Math.floor(h);\r\n\t\t\tvar f = i%2 ? h-i : 1-(h-i);\r\n\t\t\tvar m = v * (1 - s);\r\n\t\t\tvar n = v * (1 - s*f);\r\n\t\t\tswitch(i) {\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 0: return [v,n,m];\r\n\t\t\t\tcase 1: return [n,v,m];\r\n\t\t\t\tcase 2: return [m,v,n];\r\n\t\t\t\tcase 3: return [m,n,v];\r\n\t\t\t\tcase 4: return [n,m,v];\r\n\t\t\t\tcase 5: return [v,m,n];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction removePicker() {\r\n\t\t\tdelete jscolor.picker.owner;\r\n\t\t\tdocument.getElementsByTagName('body')[0].removeChild(jscolor.picker.boxB);\r\n\t\t}\r\n\r\n\r\n\t\tfunction drawPicker(x, y) {\r\n\t\t\tif(!jscolor.picker) {\r\n\t\t\t\tjscolor.picker = {\r\n\t\t\t\t\tbox : document.createElement('div'),\r\n\t\t\t\t\tboxB : document.createElement('div'),\r\n\t\t\t\t\tpad : document.createElement('div'),\r\n\t\t\t\t\tpadB : document.createElement('div'),\r\n\t\t\t\t\tpadM : document.createElement('div'),\r\n\t\t\t\t\tsld : document.createElement('div'),\r\n\t\t\t\t\tsldB : document.createElement('div'),\r\n\t\t\t\t\tsldM : document.createElement('div'),\r\n\t\t\t\t\tbtn : document.createElement('div'),\r\n\t\t\t\t\tbtnS : document.createElement('span'),\r\n\t\t\t\t\tbtnT : document.createTextNode(THIS.pickerCloseText)\r\n\t\t\t\t};\r\n\t\t\t\tfor(var i=0,segSize=4; i<jscolor.images.sld[1]; i+=segSize) {\r\n\t\t\t\t\tvar seg = document.createElement('div');\r\n\t\t\t\t\tseg.style.height = segSize+'px';\r\n\t\t\t\t\tseg.style.fontSize = '1px';\r\n\t\t\t\t\tseg.style.lineHeight = '0';\r\n\t\t\t\t\tjscolor.picker.sld.appendChild(seg);\r\n\t\t\t\t}\r\n\t\t\t\tjscolor.picker.sldB.appendChild(jscolor.picker.sld);\r\n\t\t\t\tjscolor.picker.box.appendChild(jscolor.picker.sldB);\r\n\t\t\t\tjscolor.picker.box.appendChild(jscolor.picker.sldM);\r\n\t\t\t\tjscolor.picker.padB.appendChild(jscolor.picker.pad);\r\n\t\t\t\tjscolor.picker.box.appendChild(jscolor.picker.padB);\r\n\t\t\t\tjscolor.picker.box.appendChild(jscolor.picker.padM);\r\n\t\t\t\tjscolor.picker.btnS.appendChild(jscolor.picker.btnT);\r\n\t\t\t\tjscolor.picker.btn.appendChild(jscolor.picker.btnS);\r\n\t\t\t\tjscolor.picker.box.appendChild(jscolor.picker.btn);\r\n\t\t\t\tjscolor.picker.boxB.appendChild(jscolor.picker.box);\r\n\t\t\t}\r\n\r\n\t\t\tvar p = jscolor.picker;\r\n\r\n\t\t\t// controls interaction\r\n\t\t\tp.box.onmouseup =\r\n\t\t\tp.box.onmouseout = function() { target.focus(); };\r\n\t\t\tp.box.onmousedown = function() { abortBlur=true; };\r\n\t\t\tp.box.onmousemove = function(e) {\r\n\t\t\t\tif (holdPad || holdSld) {\r\n\t\t\t\t\tholdPad && setPad(e);\r\n\t\t\t\t\tholdSld && setSld(e);\r\n\t\t\t\t\tif (document.selection) {\r\n\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t} else if (window.getSelection) {\r\n\t\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatchImmediateChange();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif('ontouchstart' in window) { // if touch device\r\n\t\t\t\tvar handle_touchmove = function(e) {\r\n\t\t\t\t\tvar event={\r\n\t\t\t\t\t\t'offsetX': e.touches[0].pageX-touchOffset.X,\r\n\t\t\t\t\t\t'offsetY': e.touches[0].pageY-touchOffset.Y\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (holdPad || holdSld) {\r\n\t\t\t\t\t\tholdPad && setPad(event);\r\n\t\t\t\t\t\tholdSld && setSld(event);\r\n\t\t\t\t\t\tdispatchImmediateChange();\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.stopPropagation(); // prevent move \"view\" on broswer\r\n\t\t\t\t\te.preventDefault(); // prevent Default - Android Fix (else android generated only 1-2 touchmove events)\r\n\t\t\t\t};\r\n\t\t\t\tp.box.removeEventListener('touchmove', handle_touchmove, false)\r\n\t\t\t\tp.box.addEventListener('touchmove', handle_touchmove, false)\r\n\t\t\t}\r\n\t\t\tp.padM.onmouseup =\r\n\t\t\tp.padM.onmouseout = function() { if(holdPad) { holdPad=false; jscolor.fireEvent(valueElement,'change'); } };\r\n\t\t\tp.padM.onmousedown = function(e) {\r\n\t\t\t\t// if the slider is at the bottom, move it up\r\n\t\t\t\tswitch(modeID) {\r\n\t\t\t\t\tcase 0: if (THIS.hsv[2] === 0) { THIS.fromHSV(null, null, 1.0); }; break;\r\n\t\t\t\t\tcase 1: if (THIS.hsv[1] === 0) { THIS.fromHSV(null, 1.0, null); }; break;\r\n\t\t\t\t}\r\n\t\t\t\tholdSld=false;\r\n\t\t\t\tholdPad=true;\r\n\t\t\t\tsetPad(e);\r\n\t\t\t\tdispatchImmediateChange();\r\n\t\t\t};\r\n\t\t\tif('ontouchstart' in window) {\r\n\t\t\t\tp.padM.addEventListener('touchstart', function(e) {\r\n\t\t\t\t\ttouchOffset={\r\n\t\t\t\t\t\t'X': e.target.offsetParent.offsetLeft,\r\n\t\t\t\t\t\t'Y': e.target.offsetParent.offsetTop\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.onmousedown({\r\n\t\t\t\t\t\t'offsetX':e.touches[0].pageX-touchOffset.X,\r\n\t\t\t\t\t\t'offsetY':e.touches[0].pageY-touchOffset.Y\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tp.sldM.onmouseup =\r\n\t\t\tp.sldM.onmouseout = function() { if(holdSld) { holdSld=false; jscolor.fireEvent(valueElement,'change'); } };\r\n\t\t\tp.sldM.onmousedown = function(e) {\r\n\t\t\t\tholdPad=false;\r\n\t\t\t\tholdSld=true;\r\n\t\t\t\tsetSld(e);\r\n\t\t\t\tdispatchImmediateChange();\r\n\t\t\t};\r\n\t\t\tif('ontouchstart' in window) {\r\n\t\t\t\tp.sldM.addEventListener('touchstart', function(e) {\r\n\t\t\t\t\ttouchOffset={\r\n\t\t\t\t\t\t'X': e.target.offsetParent.offsetLeft,\r\n\t\t\t\t\t\t'Y': e.target.offsetParent.offsetTop\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.onmousedown({\r\n\t\t\t\t\t\t'offsetX':e.touches[0].pageX-touchOffset.X,\r\n\t\t\t\t\t\t'offsetY':e.touches[0].pageY-touchOffset.Y\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// picker\r\n\t\t\tvar dims = getPickerDims(THIS);\r\n\t\t\tp.box.style.width = dims[0] + 'px';\r\n\t\t\tp.box.style.height = dims[1] + 'px';\r\n\r\n\t\t\t// picker border\r\n\t\t\tp.boxB.style.position = 'absolute';\r\n\t\t\tp.boxB.style.clear = 'both';\r\n\t\t\tp.boxB.style.left = x+'px';\r\n\t\t\tp.boxB.style.top = y+'px';\r\n\t\t\tp.boxB.style.zIndex = THIS.pickerZIndex;\r\n\t\t\tp.boxB.style.border = THIS.pickerBorder+'px solid';\r\n\t\t\tp.boxB.style.borderColor = THIS.pickerBorderColor;\r\n\t\t\tp.boxB.style.background = THIS.pickerFaceColor;\r\n\r\n\t\t\t// pad image\r\n\t\t\tp.pad.style.width = jscolor.images.pad[0]+'px';\r\n\t\t\tp.pad.style.height = jscolor.images.pad[1]+'px';\r\n\r\n\t\t\t// pad border\r\n\t\t\tp.padB.style.position = 'absolute';\r\n\t\t\tp.padB.style.left = THIS.pickerFace+'px';\r\n\t\t\tp.padB.style.top = THIS.pickerFace+'px';\r\n\t\t\tp.padB.style.border = THIS.pickerInset+'px solid';\r\n\t\t\tp.padB.style.borderColor = THIS.pickerInsetColor;\r\n\r\n\t\t\t// pad mouse area\r\n\t\t\tp.padM.style.position = 'absolute';\r\n\t\t\tp.padM.style.left = '0';\r\n\t\t\tp.padM.style.top = '0';\r\n\t\t\tp.padM.style.width = THIS.pickerFace + 2*THIS.pickerInset + jscolor.images.pad[0] + jscolor.images.arrow[0] + 'px';\r\n\t\t\tp.padM.style.height = p.box.style.height;\r\n\t\t\tp.padM.style.cursor = 'crosshair';\r\n\r\n\t\t\t// slider image\r\n\t\t\tp.sld.style.overflow = 'hidden';\r\n\t\t\tp.sld.style.width = jscolor.images.sld[0]+'px';\r\n\t\t\tp.sld.style.height = jscolor.images.sld[1]+'px';\r\n\r\n\t\t\t// slider border\r\n\t\t\tp.sldB.style.display = THIS.slider ? 'block' : 'none';\r\n\t\t\tp.sldB.style.position = 'absolute';\r\n\t\t\tp.sldB.style.right = THIS.pickerFace+'px';\r\n\t\t\tp.sldB.style.top = THIS.pickerFace+'px';\r\n\t\t\tp.sldB.style.border = THIS.pickerInset+'px solid';\r\n\t\t\tp.sldB.style.borderColor = THIS.pickerInsetColor;\r\n\r\n\t\t\t// slider mouse area\r\n\t\t\tp.sldM.style.display = THIS.slider ? 'block' : 'none';\r\n\t\t\tp.sldM.style.position = 'absolute';\r\n\t\t\tp.sldM.style.right = '0';\r\n\t\t\tp.sldM.style.top = '0';\r\n\t\t\tp.sldM.style.width = jscolor.images.sld[0] + jscolor.images.arrow[0] + THIS.pickerFace + 2*THIS.pickerInset + 'px';\r\n\t\t\tp.sldM.style.height = p.box.style.height;\r\n\t\t\ttry {\r\n\t\t\t\tp.sldM.style.cursor = 'pointer';\r\n\t\t\t} catch(eOldIE) {\r\n\t\t\t\tp.sldM.style.cursor = 'hand';\r\n\t\t\t}\r\n\r\n\t\t\t// \"close\" button\r\n\t\t\tfunction setBtnBorder() {\r\n\t\t\t\tvar insetColors = THIS.pickerInsetColor.split(/\\s+/);\r\n\t\t\t\tvar pickerOutsetColor = insetColors.length < 2 ? insetColors[0] : insetColors[1] + ' ' + insetColors[0] + ' ' + insetColors[0] + ' ' + insetColors[1];\r\n\t\t\t\tp.btn.style.borderColor = pickerOutsetColor;\r\n\t\t\t}\r\n\t\t\tp.btn.style.display = THIS.pickerClosable ? 'block' : 'none';\r\n\t\t\tp.btn.style.position = 'absolute';\r\n\t\t\tp.btn.style.left = THIS.pickerFace + 'px';\r\n\t\t\tp.btn.style.bottom = THIS.pickerFace + 'px';\r\n\t\t\tp.btn.style.padding = '0 15px';\r\n\t\t\tp.btn.style.height = '18px';\r\n\t\t\tp.btn.style.border = THIS.pickerInset + 'px solid';\r\n\t\t\tsetBtnBorder();\r\n\t\t\tp.btn.style.color = THIS.pickerButtonColor;\r\n\t\t\tp.btn.style.font = '12px sans-serif';\r\n\t\t\tp.btn.style.textAlign = 'center';\r\n\t\t\ttry {\r\n\t\t\t\tp.btn.style.cursor = 'pointer';\r\n\t\t\t} catch(eOldIE) {\r\n\t\t\t\tp.btn.style.cursor = 'hand';\r\n\t\t\t}\r\n\t\t\tp.btn.onmousedown = function () {\r\n\t\t\t\tTHIS.hidePicker();\r\n\t\t\t};\r\n\t\t\tp.btnS.style.lineHeight = p.btn.style.height;\r\n\r\n\t\t\t// load images in optimal order\r\n\t\t\tswitch(modeID) {\r\n\t\t\t\tcase 0: var padImg = 'hs.png'; break;\r\n\t\t\t\tcase 1: var padImg = 'hv.png'; break;\r\n\t\t\t}\r\n\t\t\tp.padM.style.backgroundImage = \"url('\"+jscolor.getDir()+\"cross.gif')\";\r\n\t\t\tp.padM.style.backgroundRepeat = \"no-repeat\";\r\n\t\t\tp.sldM.style.backgroundImage = \"url('\"+jscolor.getDir()+\"arrow.gif')\";\r\n\t\t\tp.sldM.style.backgroundRepeat = \"no-repeat\";\r\n\t\t\tp.pad.style.backgroundImage = \"url('\"+jscolor.getDir()+padImg+\"')\";\r\n\t\t\tp.pad.style.backgroundRepeat = \"no-repeat\";\r\n\t\t\tp.pad.style.backgroundPosition = \"0 0\";\r\n\r\n\t\t\t// place pointers\r\n\t\t\tredrawPad();\r\n\t\t\tredrawSld();\r\n\r\n\t\t\tjscolor.picker.owner = THIS;\r\n\t\t\tdocument.getElementsByTagName('body')[0].appendChild(p.boxB);\r\n\t\t}\r\n\r\n\r\n\t\tfunction getPickerDims(o) {\r\n\t\t\tvar dims = [\r\n\t\t\t\t2*o.pickerInset + 2*o.pickerFace + jscolor.images.pad[0] +\r\n\t\t\t\t\t(o.slider ? 2*o.pickerInset + 2*jscolor.images.arrow[0] + jscolor.images.sld[0] : 0),\r\n\t\t\t\to.pickerClosable ?\r\n\t\t\t\t\t4*o.pickerInset + 3*o.pickerFace + jscolor.images.pad[1] + o.pickerButtonHeight :\r\n\t\t\t\t\t2*o.pickerInset + 2*o.pickerFace + jscolor.images.pad[1]\r\n\t\t\t];\r\n\t\t\treturn dims;\r\n\t\t}\r\n\r\n\r\n\t\tfunction redrawPad() {\r\n\t\t\t// redraw the pad pointer\r\n\t\t\tswitch(modeID) {\r\n\t\t\t\tcase 0: var yComponent = 1; break;\r\n\t\t\t\tcase 1: var yComponent = 2; break;\r\n\t\t\t}\r\n\t\t\tvar x = Math.round((THIS.hsv[0]/6) * (jscolor.images.pad[0]-1));\r\n\t\t\tvar y = Math.round((1-THIS.hsv[yComponent]) * (jscolor.images.pad[1]-1));\r\n\t\t\tjscolor.picker.padM.style.backgroundPosition =\r\n\t\t\t\t(THIS.pickerFace+THIS.pickerInset+x - Math.floor(jscolor.images.cross[0]/2)) + 'px ' +\r\n\t\t\t\t(THIS.pickerFace+THIS.pickerInset+y - Math.floor(jscolor.images.cross[1]/2)) + 'px';\r\n\r\n\t\t\t// redraw the slider image\r\n\t\t\tvar seg = jscolor.picker.sld.childNodes;\r\n\r\n\t\t\tswitch(modeID) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tvar rgb = HSV_RGB(THIS.hsv[0], THIS.hsv[1], 1);\r\n\t\t\t\t\tfor(var i=0; i<seg.length; i+=1) {\r\n\t\t\t\t\t\tseg[i].style.backgroundColor = 'rgb('+\r\n\t\t\t\t\t\t\t(rgb[0]*(1-i/seg.length)*100)+'%,'+\r\n\t\t\t\t\t\t\t(rgb[1]*(1-i/seg.length)*100)+'%,'+\r\n\t\t\t\t\t\t\t(rgb[2]*(1-i/seg.length)*100)+'%)';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tvar rgb, s, c = [ THIS.hsv[2], 0, 0 ];\r\n\t\t\t\t\tvar i = Math.floor(THIS.hsv[0]);\r\n\t\t\t\t\tvar f = i%2 ? THIS.hsv[0]-i : 1-(THIS.hsv[0]-i);\r\n\t\t\t\t\tswitch(i) {\r\n\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\tcase 0: rgb=[0,1,2]; break;\r\n\t\t\t\t\t\tcase 1: rgb=[1,0,2]; break;\r\n\t\t\t\t\t\tcase 2: rgb=[2,0,1]; break;\r\n\t\t\t\t\t\tcase 3: rgb=[2,1,0]; break;\r\n\t\t\t\t\t\tcase 4: rgb=[1,2,0]; break;\r\n\t\t\t\t\t\tcase 5: rgb=[0,2,1]; break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var i=0; i<seg.length; i+=1) {\r\n\t\t\t\t\t\ts = 1 - 1/(seg.length-1)*i;\r\n\t\t\t\t\t\tc[1] = c[0] * (1 - s*f);\r\n\t\t\t\t\t\tc[2] = c[0] * (1 - s);\r\n\t\t\t\t\t\tseg[i].style.backgroundColor = 'rgb('+\r\n\t\t\t\t\t\t\t(c[rgb[0]]*100)+'%,'+\r\n\t\t\t\t\t\t\t(c[rgb[1]]*100)+'%,'+\r\n\t\t\t\t\t\t\t(c[rgb[2]]*100)+'%)';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction redrawSld() {\r\n\t\t\t// redraw the slider pointer\r\n\t\t\tswitch(modeID) {\r\n\t\t\t\tcase 0: var yComponent = 2; break;\r\n\t\t\t\tcase 1: var yComponent = 1; break;\r\n\t\t\t}\r\n\t\t\tvar y = Math.round((1-THIS.hsv[yComponent]) * (jscolor.images.sld[1]-1));\r\n\t\t\tjscolor.picker.sldM.style.backgroundPosition =\r\n\t\t\t\t'0 ' + (THIS.pickerFace+THIS.pickerInset+y - Math.floor(jscolor.images.arrow[1]/2)) + 'px';\r\n\t\t}\r\n\r\n\r\n\t\tfunction isPickerOwner() {\r\n\t\t\treturn jscolor.picker && jscolor.picker.owner === THIS;\r\n\t\t}\r\n\r\n\r\n\t\tfunction blurTarget() {\r\n\t\t\tif(valueElement === target) {\r\n\t\t\t\tTHIS.importColor();\r\n\t\t\t}\r\n\t\t\tif(THIS.pickerOnfocus) {\r\n\t\t\t\tTHIS.hidePicker();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction blurValue() {\r\n\t\t\tif(valueElement !== target) {\r\n\t\t\t\tTHIS.importColor();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction setPad(e) {\r\n\t\t\tvar mpos = jscolor.getRelMousePos(e);\r\n\t\t\tvar x = mpos.x - THIS.pickerFace - THIS.pickerInset;\r\n\t\t\tvar y = mpos.y - THIS.pickerFace - THIS.pickerInset;\r\n\t\t\tswitch(modeID) {\r\n\t\t\t\tcase 0: THIS.fromHSV(x*(6/(jscolor.images.pad[0]-1)), 1 - y/(jscolor.images.pad[1]-1), null, leaveSld); break;\r\n\t\t\t\tcase 1: THIS.fromHSV(x*(6/(jscolor.images.pad[0]-1)), null, 1 - y/(jscolor.images.pad[1]-1), leaveSld); break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction setSld(e) {\r\n\t\t\tvar mpos = jscolor.getRelMousePos(e);\r\n\t\t\tvar y = mpos.y - THIS.pickerFace - THIS.pickerInset;\r\n\t\t\tswitch(modeID) {\r\n\t\t\t\tcase 0: THIS.fromHSV(null, null, 1 - y/(jscolor.images.sld[1]-1), leavePad); break;\r\n\t\t\t\tcase 1: THIS.fromHSV(null, 1 - y/(jscolor.images.sld[1]-1), null, leavePad); break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction dispatchImmediateChange() {\r\n\t\t\tif (THIS.onImmediateChange) {\r\n\t\t\t\tvar callback;\r\n\t\t\t\tif (typeof THIS.onImmediateChange === 'string') {\r\n\t\t\t\t\tcallback = new Function (THIS.onImmediateChange);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback = THIS.onImmediateChange;\r\n\t\t\t\t}\r\n\t\t\t\tcallback.call(THIS);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tvar THIS = this;\r\n\t\tvar modeID = this.pickerMode.toLowerCase()==='hvs' ? 1 : 0;\r\n\t\tvar abortBlur = false;\r\n\t\tvar\r\n\t\t\tvalueElement = jscolor.fetchElement(this.valueElement),\r\n\t\t\tstyleElement = jscolor.fetchElement(this.styleElement);\r\n\t\tvar\r\n\t\t\tholdPad = false,\r\n\t\t\tholdSld = false,\r\n\t\t\ttouchOffset = {};\r\n\t\tvar\r\n\t\t\tleaveValue = 1<<0,\r\n\t\t\tleaveStyle = 1<<1,\r\n\t\t\tleavePad = 1<<2,\r\n\t\t\tleaveSld = 1<<3;\r\n\r\n\t\t// target\r\n\t\tjscolor.addEvent(target, 'focus', function() {\r\n\t\t\tif(THIS.pickerOnfocus) { THIS.showPicker(); }\r\n\t\t});\r\n\t\tjscolor.addEvent(target, 'blur', function() {\r\n\t\t\tif(!abortBlur) {\r\n\t\t\t\twindow.setTimeout(function(){ abortBlur || blurTarget(); abortBlur=false; }, 0);\r\n\t\t\t} else {\r\n\t\t\t\tabortBlur = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// valueElement\r\n\t\tif(valueElement) {\r\n\t\t\tvar updateField = function() {\r\n\t\t\t\tTHIS.fromString(valueElement.value, leaveValue);\r\n\t\t\t\tdispatchImmediateChange();\r\n\t\t\t};\r\n\t\t\tjscolor.addEvent(valueElement, 'keyup', updateField);\r\n\t\t\tjscolor.addEvent(valueElement, 'input', updateField);\r\n\t\t\tjscolor.addEvent(valueElement, 'blur', blurValue);\r\n\t\t\tvalueElement.setAttribute('autocomplete', 'off');\r\n\t\t}\r\n\r\n\t\t// styleElement\r\n\t\tif(styleElement) {\r\n\t\t\tstyleElement.jscStyle = {\r\n\t\t\t\tbackgroundImage : styleElement.style.backgroundImage,\r\n\t\t\t\tbackgroundColor : styleElement.style.backgroundColor,\r\n\t\t\t\tcolor : styleElement.style.color\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// require images\r\n\t\tswitch(modeID) {\r\n\t\t\tcase 0: jscolor.requireImage('hs.png'); break;\r\n\t\t\tcase 1: jscolor.requireImage('hv.png'); break;\r\n\t\t}\r\n\t\tjscolor.requireImage('cross.gif');\r\n\t\tjscolor.requireImage('arrow.gif');\r\n\r\n\t\tthis.importColor();\r\n\t}\r\n\r\n};\r\n\r\n\r\njscolor.install();\r\n"}
}});
